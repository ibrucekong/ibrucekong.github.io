<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ibrucekong</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ibrucekong.github.io/"/>
  <updated>2019-05-11T03:50:22.000Z</updated>
  <id>https://ibrucekong.github.io/</id>
  
  <author>
    <name>ibrucekong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[12] View的弹窗（Popup）</title>
    <link href="https://ibrucekong.github.io/posts/3310621046/"/>
    <id>https://ibrucekong.github.io/posts/3310621046/</id>
    <published>2019-05-11T03:50:22.000Z</published>
    <updated>2019-05-11T03:50:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6399628.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6399628.html</a></strong></p><hr><p>看本文前最好对第二章（Mapping and Views）中的Map和View类有理解。</p><p>视图类有一个属性是Popup类型的popup，查阅API知道这个就是视图的弹窗，每一个View的实例都有一个popup。</p><p>这个popup属性在View对象实例化的时候就实例化了的，即随着View的出生，它也会出生，它拥有默认的样子，它显示的文字也是默认的样式。</p><p>我们看看Popup这个类：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170214235644847-159453514.png" alt="img"></p><p>直接继承自Accessor，位于widgets模块下，说明Popup（弹窗）也是小部件的一种。但是为什么要单独拿出来讲呢？可能用法上比较复杂吧。</p><p>如果用户对弹窗有更高的样式要求，官方的说法是</p><p>可以自己new一个Popup对象，替换掉view默认的popup即可。</p><p>其实Popup有个兄弟类，叫PopupTemplate，它长得很像Popup，但是在功能上更服务于Layer和Graphic，即地理数据，而且也是高度可自定义的，在下一节会细说这两个的区别。</p><p>说完了Popup这个新玩意儿，我就来说说第一个例子吧！</p><p>它的功能就是点击View上的一个地方，就会弹出一个小窗，显示经纬度和其他信息。</p><hr><p>引用</p><p>直接给：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"esri/tasks/Locator"</span>,</span><br><span class="line">      <span class="string">"esri/Map"</span>,</span><br><span class="line">      <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">      <span class="string">"dojo/domReady!"</span></span><br><span class="line">    ], </span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>函数参数中因为Map和View 对象是经常性出现的，所以就用 var map = new Map(…);代替了（以后也是）</p><p>所以函数参数的关键代码是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function(Locator, Map, MapView)&#123;</span><br><span class="line">        var map = new Map(...);</span><br><span class="line">        var view = new MapView(...);</span><br><span class="line">        var locatorTask = new Locator(&#123;</span><br><span class="line">            url : &quot;https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer&quot;;</span><br><span class="line">　　　　 &#125;);</span><br><span class="line">        view.on(&quot;click&quot;, funcion(event)&#123;...&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a>;)</p><p>locatorTask是一个Locator类的对象，用于定位服务。这个不用知道太详细，因为本例中重点并不是它。</p><p>重点应该是view的事件“click”，写法同上，但是事件的方法体没有写完整。</p><p>我们就来看看这个事件的方法体具体是什么：</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a>;)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//获取经纬度</span></span><br><span class="line">        <span class="keyword">var</span> lat = <span class="built_in">Math</span>.round(event.mapPoint.latitude * <span class="number">1000</span>) / <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">var</span> lon = <span class="built_in">Math</span>.round(event.mapPoint.longitude * <span class="number">1000</span>) / <span class="number">1000</span>;</span><br><span class="line">        view.popup.open(&#123;</span><br><span class="line">            title: <span class="string">"Reverse geocode: ["</span> + lon + <span class="string">", "</span> + lat + <span class="string">"]"</span>,</span><br><span class="line">            location: event.mapPoint</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定位服务，可以省略，不是本例中的主要内容</span></span><br><span class="line">        locatorTask.locationToAddress(event.mapPoint)</span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> address = response.address.Match_addr;</span><br><span class="line">          view.popup.content = address;</span><br><span class="line">        &#125;)</span><br><span class="line">        .otherwise(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">          view.popup.content =</span><br><span class="line">            <span class="string">"No address was found for this location"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们看到了，从click事件的event参数中获取到了lat和lon，即经纬度，用Math.round方法对数字进行了一定的处理。</p><p>然后关键的一句：</p><p>view.popup.open({…});</p><p>我们先不说这个是什么，但是肯定是一个方法。</p><p>下面的then()方法，是Locator对象的locationToAddress方法的Promise返回对象的回调，用于获取地址成功后把地址显示到popup上。</p><p>关键的一句：</p><p>view.popup.content = address;</p><p>在下面otherwise()方法也有类似的。</p><p>现在，我们转到Popup这个类的定义。</p><blockquote><p>Popup类</p><p>继承自Accessor类</p><p>主要属性：actions（Collection类型）、content（String或Node类型）、location（Point类型）、title（String类型）…</p><p>主要方法：open()、destroy()…</p></blockquote><p>看得出，上面的代码使用了open方法，content属性、location属性、title属性。</p><p>open方法会把popup的visible属性改为true，然后显示到指定的位置：location。</p><p>是不是很简单呢？</p><p>更深一层的理解，既然能open，那么肯定是有这个实例的，更说明了popup这个属性是一个对象，在View实例化的时候就完成了实例化。</p><p>对其content、title属性进行设置就可以在弹出窗中看到想要的内容和标题了。</p><hr><p>总结一下。</p><ol><li><p>View对象自带Popup实例，并随着View对象实例化而实例化。</p></li><li><p>Popup使用open()方法显示出来，接受location、title、content等可选参数以指定内容、弹窗点等。</p></li></ol><p>最后给个图：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170215113704316-1722350220.png" alt="img"></p><p>很显而易见。</p><p>给出官方的源代码（没有删除注释）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"initial-scale=1,maximum-scale=1,user-scalable=no"</span>&gt;</span><br><span class="line">  &lt;title&gt;Get started <span class="keyword">with</span> popups - <span class="number">4.2</span>&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  &lt;style&gt;</span></span><br><span class="line"><span class="regexp">    html,</span></span><br><span class="line"><span class="regexp">    body,</span></span><br><span class="line"><span class="regexp">    #viewDiv &#123;</span></span><br><span class="line"><span class="regexp">      padding: 0;</span></span><br><span class="line"><span class="regexp">      margin: 0;</span></span><br><span class="line"><span class="regexp">      height: 100%;</span></span><br><span class="line"><span class="regexp">      width: 100%;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">    #instruction &#123;</span></span><br><span class="line"><span class="regexp">      z-index: 99;</span></span><br><span class="line"><span class="regexp">      position: absolute;</span></span><br><span class="line"><span class="regexp">      top: 15px;</span></span><br><span class="line"><span class="regexp">      left: 50%;</span></span><br><span class="line"><span class="regexp">      padding: 5px;</span></span><br><span class="line"><span class="regexp">      margin-left: -175px;</span></span><br><span class="line"><span class="regexp">      height: 20px;</span></span><br><span class="line"><span class="regexp">      width: 350px;</span></span><br><span class="line"><span class="regexp">      background: rgba(25, 25, 25, 0.8);</span></span><br><span class="line"><span class="regexp">      color: white;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>style&gt;</span><br><span class="line"></span><br><span class="line">  &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://js.arcgis.com/4.2/esri/css/main.css"</span>&gt;</span><br><span class="line">  &lt;script src=<span class="string">"https://js.arcgis.com/4.2/"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="built_in">require</span>([</span><br><span class="line">      <span class="string">"esri/tasks/Locator"</span>,</span><br><span class="line">      <span class="string">"esri/Map"</span>,</span><br><span class="line">      <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">      <span class="string">"dojo/domReady!"</span></span><br><span class="line">    ], <span class="function"><span class="keyword">function</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">      Locator,</span></span></span><br><span class="line"><span class="function"><span class="params">      Map,</span></span></span><br><span class="line"><span class="function"><span class="params">      MapView</span></span></span><br><span class="line"><span class="function"><span class="params">    </span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Set up a locator task using the world geocoding service</span></span><br><span class="line">      <span class="keyword">var</span> locatorTask = <span class="keyword">new</span> Locator(&#123;</span><br><span class="line">        url: <span class="string">"https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer"</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Create the Map</span></span><br><span class="line">      <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">        basemap: <span class="string">"streets-navigation-vector"</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Create the MapView</span></span><br><span class="line">      <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">        container: <span class="string">"viewDiv"</span>,</span><br><span class="line">        map: map,</span><br><span class="line">        center: [<span class="number">-116.3031</span>, <span class="number">43.6088</span>],</span><br><span class="line">        zoom: <span class="number">12</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/*******************************************************************</span></span><br><span class="line"><span class="comment">       * This click event sets generic content on the popup not tied to</span></span><br><span class="line"><span class="comment">       * a layer, graphic, or popupTemplate. The location of the point is</span></span><br><span class="line"><span class="comment">       * used as input to a reverse geocode method and the resulting</span></span><br><span class="line"><span class="comment">       * address is printed to the popup content.</span></span><br><span class="line"><span class="comment">       *******************************************************************/</span></span><br><span class="line">      view.on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// Get the coordinates of the click on the view</span></span><br><span class="line">        <span class="keyword">var</span> lat = <span class="built_in">Math</span>.round(event.mapPoint.latitude * <span class="number">1000</span>) / <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">var</span> lon = <span class="built_in">Math</span>.round(event.mapPoint.longitude * <span class="number">1000</span>) / <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">        view.popup.open(&#123;</span><br><span class="line">          <span class="comment">// Set the popup's title to the coordinates of the location</span></span><br><span class="line">          title: <span class="string">"Reverse geocode: ["</span> + lon + <span class="string">", "</span> + lat + <span class="string">"]"</span>,</span><br><span class="line">          location: event.mapPoint <span class="comment">// Set the location of the popup to the clicked location</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Display the popup</span></span><br><span class="line">        <span class="comment">// Execute a reverse geocode using the clicked location</span></span><br><span class="line">        locatorTask.locationToAddress(event.mapPoint).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">          response</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// If an address is successfully found, print it to the popup's content</span></span><br><span class="line">          <span class="keyword">var</span> address = response.address.Match_addr;</span><br><span class="line">          view.popup.content = address;</span><br><span class="line">        &#125;).otherwise(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// If the promise fails and no result is found, print a generic message</span></span><br><span class="line">          <span class="comment">// to the popup's content</span></span><br><span class="line">          view.popup.content =</span><br><span class="line">            <span class="string">"No address was found for this location"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"viewDiv"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &lt;div id=<span class="string">"instruction"</span>&gt;Click any location on the map to see its street address&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[11] 官方第五章Popups（弹窗）概览与解释</title>
    <link href="https://ibrucekong.github.io/posts/2760278425/"/>
    <id>https://ibrucekong.github.io/posts/2760278425/</id>
    <published>2019-05-11T03:25:02.000Z</published>
    <updated>2019-05-11T03:25:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6399346.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6399346.html</a></strong></p><hr><p>直接跳过第三第四章了，第三章Layer和第四章可视化，怎么说呢，Layer是组织数据的，是Map的属性之一。可视化属于符号化编程，暂时不看。</p><p>第五章是对数据、结果的显示，类似于alert()、.NET的MessageBox，弹窗嘛。</p><p>官方的解释很清楚了，我翻译过来，再加上自己的一些理解。</p><p>Popup，是Accessor的 一个子类，它的实例是弹窗对象。像这样</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170214212651254-336683179.png" alt="img"></p><p>是不是很熟悉？对，在老版本的百度地图中，也有很多这种弹窗的例子。</p><p>这一章比较短，给出预览：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170214213321754-740696313.png" alt="img"></p><hr><p>【Get started with popups】</p><p>【Get started with PopupTemplate】</p><p>前两节是预热，通过例子告诉用户怎么使用 Popup 和 PopupTemplate 这两个直接继承自Accessor的类，去弹出一个窗口，以及简单介绍如何使用这两个类的属性。</p><p>Popup作用于View对象，而PopupTemplate作用于一些Layer对象或者Graphic对象。</p><p>【Popup dock positions】</p><p>这节从名字就知道了，控制弹窗的位置。</p><p>【Multiple popup elements】</p><p> 使用多个弹窗元素。弹窗里可以放置很多种元素，因为弹窗不可能只有文本，还可以有图表、外链等。</p><p> 还介绍了怎么使用related table（并不知道是什么，等看到源代码就知道怎么回事了吧？）</p><p>【PopupTemplate with functions】</p><p> PopupTemplate这个类的实例，和functions？</p><p> 口语点的解释就是：</p><p> 在Layer或者Graphic的弹出窗（PopupTemplate）中，如果对输出文本（输出信息）有特殊的格式需求，是可以指定一段代码来完成这个格式化过程的。</p><p> 官方的例子，拿人口变化比率来说明。人口变化这个比率（如下图）</p><p> <img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170214230626894-50661014.png" alt="img"></p><p> 有一个图案，就是红色的向下箭头和红色的数字（如果是增长的就是绿色向上箭头和绿色数字）。</p><p> 这个就不是官方的格式字符串方法了，所以就要自定义方法去完成这个信息的格式化。</p><p>【Popup actions】</p><p> 给弹出窗添加一些自定义的动作——看到初始弹出窗下面那个放大镜按钮没？这就是说，允许自定义按钮并添加一些功能。</p><p>【Custom popup actions per feature】</p><p> <img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170214220723722-428140646.png" alt="img"></p><p>这个看图就好解释了，字面义就是每个要素（feature）都可以定制功能，图中那个啤酒按钮就可以弹出这个地址的网站（大概）。</p><p>重点应该不是这个啤酒按钮的功能了，而是能对feature的定制。这个feature的弹窗和View的弹窗有什么不同呢？到代码里看看吧。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[10] 2D添加指北针widget、视图保存、视图padding（第二章完结）</title>
    <link href="https://ibrucekong.github.io/posts/2160033807/"/>
    <id>https://ibrucekong.github.io/posts/2160033807/</id>
    <published>2019-05-11T03:10:12.000Z</published>
    <updated>2019-05-11T03:10:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6391517.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6391517.html</a></strong></p><hr><p>这几个例子是第二章除了入门之外比较简单的几个，就做个合集，把最核心的代码（第二参数）和 引用放上来即可，不作多解释。</p><p>2D地图添加指北针widget</p><p>2D地图一般修正方向为正北方就需要这个widget。</p><p>引用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">        <span class="string">"esri/Map"</span>,</span><br><span class="line">        <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">        <span class="string">"esri/widgets/Compass"</span>,</span><br><span class="line">        <span class="string">"dojo/domReady!"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在function(Map,MapView,Compass)实例化Map和MapView后，添加这两行代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> compassWidget = <span class="keyword">new</span> Compass(&#123;<span class="attr">view</span>: view&#125;);</span><br><span class="line">view.ui.add(compassWidget, <span class="string">"top-left"</span>);</span><br></pre></td></tr></table></figure><p>即可。有关Compass这个widget的构造函数，可以查阅API了解更多，我感觉不会那么少吧…还有这个ui.add()方法，感觉日后添加widget布局的时候可以仔细学学。</p><p>ps：Compass在SceneView中是默认显示的。</p><p>视图padding改变</p><p>这个几乎没有难度。</p><p>给个图预览吧：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170213051054832-1769929522.png" alt="img"></p><p>本来小岛这种东西就应该在地图的最中央位置，但是由于右边多了一块DIV（宽度320px），所以地图为了避开DIV而对齐就必须把视图的padding值改为320（和DIV一样）。在百度地图旧版本中，就喜欢搞一个面板，用于提供搜索信息的输入框和结果框、筛选按钮等。</p><p>直接给出源代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(</span><br><span class="line">    [ <span class="string">"esri/Map"</span>, <span class="string">"esri/views/MapView"</span>, <span class="string">"dojo/domReady!"</span> ], </span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">Map,MapView</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">        basemap: <span class="string">"topo"</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">        container: <span class="string">"viewDiv"</span>,</span><br><span class="line">        map: map,</span><br><span class="line">        center: [<span class="number">-74.045459</span>, <span class="number">40.690083</span>], </span><br><span class="line">        zoom: <span class="number">16</span>,</span><br><span class="line">        padding: &#123;</span><br><span class="line">          right: <span class="number">320</span> </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>仅仅是在view的实例化中把padding的right改为320，在html中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"viewDiv"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"sidebar"</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">"text"</span>&gt;</span><br><span class="line">            内容云云，此处省略</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure><p>在style标签中，把sidebar这个div的width设置成了同样的320px。</p><p>视图保存</p><p>这个就比较有趣了。首先要提供一个输入title的地方，还要有一个保存image的地方。</p><p>这个例子，使用了SceneView，SceneView的map属性使用了服务器上的WebScene（专题三维地图）。由于这个比较容易，就忽略了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"viewDiv"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div id=<span class="string">"createSlideDiv"</span>&gt;</span><br><span class="line">    New slide: &lt;input type="text" id="createSlideTitleInput" size="10" /&gt;</span><br><span class="line">    &lt;button</span><br><span class="line">      id="createSlideButton"&gt;Create&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div id=<span class="string">"slidesDiv"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br></pre></td></tr></table></figure><p>从html代码可以看出，提供了一个createSlideDiv，内含input和一个button以供输入。</p><p>还有一个slidesDiv以供保存img列表。</p><p>见下图：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170213044625879-907335029.png" alt="img"></p><p>第一步，把这几个div加入到view对象的ui中去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.ui.add([&quot;createSlideDiv&quot;, &quot;slidesDiv&quot;], &quot;top-right&quot;);</span><br></pre></td></tr></table></figure><p>第二步，在view创建好后，执行以下代码。关于then()，请查看鹰眼一文的末尾。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">view.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  dom.byId(<span class="string">"slidesDiv"</span>).style.visibility = <span class="string">"visible"</span>;</span><br><span class="line">  <span class="keyword">var</span> slides = scene.presentation.slides;</span><br><span class="line">  slides.forEach(createSlideUI);</span><br><span class="line"></span><br><span class="line">  on(dom.byId(<span class="string">"createSlideButton"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Slide.createFrom(view).then(<span class="function"><span class="keyword">function</span>(<span class="params">slide</span>) </span>&#123;</span><br><span class="line">      slide.title.text = dom.byId(<span class="string">"createSlideTitleInput"</span>)</span><br><span class="line">        .value;</span><br><span class="line">      scene.presentation.slides.add(slide);</span><br><span class="line">      createSlideUI(slide, <span class="string">"first"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>首先，将slidesDiv置为可视。</p><p>第二，若WebScene存在slide，那么就全部装到列表中去。</p><p>然后var一个slides变量，获取WebScene实例scene的当前所有的slides。</p><p>然后遍历每一个slides成员，对其进行createSlideUI操作（见下，即创建DIV列表里的UI对象）。</p><p>第三，调用dojo的on(DOM元素，事件类型，事件方法体)，为新增slide的那个按钮添加click事件。</p><p>注意Slide.createFrom()方法，它将从view中创建slide。</p><p>在这个方法的回调函数中，设置输入框的文本slide的标题。</p><p>然后把slide添加到scene这个WebScene中去。</p><p>最后调用createSlideUI创建div即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createSlideUI</span>(<span class="params">slide, placement</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> slideElement = domConstruct.create(<span class="string">"div"</span>, &#123;</span><br><span class="line">    id: slide.id,</span><br><span class="line">    className: <span class="string">"slide"</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> position = placement ? placement : <span class="string">"last"</span>;</span><br><span class="line">  domConstruct.place(slideElement, <span class="string">"slidesDiv"</span>, position);</span><br><span class="line">  domConstruct.create(<span class="string">"div"</span>, &#123;</span><br><span class="line">    textContent: slide.title.text,</span><br><span class="line">    className: <span class="string">"title"</span></span><br><span class="line">  &#125;, slideElement);</span><br><span class="line">  domConstruct.create(<span class="string">"img"</span>, &#123;</span><br><span class="line">    src: slide.thumbnail.url,</span><br><span class="line">    title: slide.title.text</span><br><span class="line">  &#125;, slideElement);</span><br><span class="line">  on(slideElement, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    query(<span class="string">".slide"</span>).removeClass(<span class="string">"active"</span>);</span><br><span class="line">    domClass.add(slideElement, <span class="string">"active"</span>);</span><br><span class="line">    slide.applyTo(view);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>createSlideUI()方法就是创建DIV了，首先用domConstruct.create()方法创建一个divDOM元素，然后确定位置position，</p><p>紧接着在这个div里添加标题div、图片div，最后为这个div添加click事件。</p><p>虽然最后一个例子看起来比较长，但是逻辑都很清晰，代码也没什么碎片化，完全可以直接照抄两个代码段。</p><hr><p>至此，第二章的学习就差不多了，关于WebScene、WebMap这两个从Map类中派生出来的子类（和Basemap同级），我觉得查阅API更有效果，而且可能是得配合ArcServer才能弄懂的东西，就先不学了。</p><p>要说数据准备这块这一章还真没写，所以极有可能在Layers那章才会学到了吧，再不济，百度啊谷歌啊干什么用的？</p><p>所以，整理一下所学，开始准备学习Popups（弹出框）、Searching（空间查询）和Analysis（空间分析）吧~</p><p>Layers和Widgets两章留给三月份研读。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[9] 同一种视图不同数据（Map）同步</title>
    <link href="https://ibrucekong.github.io/posts/3849267338/"/>
    <id>https://ibrucekong.github.io/posts/3849267338/</id>
    <published>2019-05-11T02:56:06.000Z</published>
    <updated>2019-05-11T02:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6391513.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6391513.html</a></strong></p><hr><p>本例子核心：对MapView对象的map属性值进行替换即可达到更改地图数据的效果。</p><hr><p>这个例子用的不是Map对象了，而是用的发布在服务器上的专题地图（WebMap）来加载到MapView上进行显示。</p><p>在html标签中，使用了section标签，不过没什么稀奇的，就把仨按钮放一块而已。</p><p>先给出预览图</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170213034630800-895613805.png" alt="img"></p><p>三张专题地图：失踪人口密度分布、难民迁徙路线、2015年欧洲来港者。</p><p>这个东西很有用，尤其是在展示同一地区的专题地图的时候，这里也展示了什么叫View，什么叫Map。</p><p>因为中心点、比例尺是由View对象管控的，所以改变WebMap这个数据的时候，并不会改变位置和比例尺。</p><p>我们来看代码：</p><p>给出引用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">      <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">      <span class="string">"esri/WebMap"</span>,</span><br><span class="line">      <span class="string">"dojo/on"</span>,</span><br><span class="line">      <span class="string">"dojo/domReady!"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>很清爽。</p><p>既然要用到3个专题地图，那么就创建3个WebMap对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">MapView, WebMap, on</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> webmapids = [</span><br><span class="line">        <span class="string">"ad5759bf407c4554b748356ebe1886e5"</span>,</span><br><span class="line">        <span class="string">"71ba2a96c368452bb73d54eadbd59faa"</span>,</span><br><span class="line">        <span class="string">"45ded9b3e0e145139cc433b503a8f5ab"</span></span><br><span class="line">      ];</span><br><span class="line">      <span class="comment">// 匿名函数返回一个WebMap实例</span></span><br><span class="line">      <span class="keyword">var</span> webmaps = webmapids.map(<span class="function"><span class="keyword">function</span>(<span class="params">webmapid</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> WebMap(&#123;</span><br><span class="line">          portalItem: &#123;</span><br><span class="line">            id: webmapid</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">        map: webmaps[<span class="number">0</span>],</span><br><span class="line">        container: <span class="string">"viewDiv"</span></span><br><span class="line">      &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也是很简单。</p><p>给定一个webmap的ID字符串数组，每个ID是WebMap的唯一标识符。</p><p>然后用Collection对象的map()方法进行遍历操作，对传入的每一个ID，匿名函数返回一个WebMap实例。</p><p>如何实例化WebMap，请参考API中WebMap的构造函数。</p><p>然后，实例化一个MapView，map属性给定webmaps数组的第一个元素，即第一个WebMap——失踪人口图。</p><p>在实例化MapView后，就是给顶头的3个按钮添加事件了。</p><p>dojo给DOM元素添加事件还记得吗？就是goTo()动画那篇文章。</p><p>基本语法：</p><blockquote><p>on(DOM元素,事件类型,事件方法体);</p></blockquote><p>见下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">on(<span class="built_in">document</span>.querySelector(<span class="string">".btns"</span>), </span><br><span class="line">     <span class="string">".btn-switch:click"</span>, </span><br><span class="line">     <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">         <span class="keyword">var</span> id = event.target.getAttribute(<span class="string">"data-id"</span>);</span><br><span class="line">         <span class="keyword">if</span> (id) &#123;</span><br><span class="line">            <span class="keyword">var</span> webmap = webmaps[id];</span><br><span class="line">            view.map = webmap;</span><br><span class="line">            <span class="keyword">var</span> nodes = <span class="built_in">document</span>.querySelectorAll(<span class="string">".btn-switch"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> idx = <span class="number">0</span>; idx &lt; nodes.length; idx++) &#123;</span><br><span class="line">                 <span class="keyword">var</span> node = nodes[idx];</span><br><span class="line">                 <span class="keyword">var</span> mapIndex = node.getAttribute(<span class="string">"data-id"</span>);</span><br><span class="line">                 <span class="keyword">if</span> (mapIndex === id) &#123;</span><br><span class="line">                      node.classList.add(<span class="string">"active-map"</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span> &#123;</span><br><span class="line">                     node.classList.remove(<span class="string">"active-map"</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>使用css选择器点选，即对类进行选择。btns被选中。</p><p>在方法体内，先获取data-id这个自定义属性，进入if判断。</p><p>先按data-id选择到序号一致的WebMap，假如data-id=“2”，则选中第三张WebMap。</p><p>然后更改view.map属性为选择到的WebMap。</p><p>这里，数据就替换完成了。</p><p>从var nodes…到for循环体结束，讲的是：</p><p>获取全部class为btn-switch的DOM元素。</p><p>对这个数组进行遍历操作，若当前点击的div的data-id和遍历到的data-id三等号相同，那么就往这个DOM元素的classList添加active-map。</p><p>若不，则移除active-map。</p><p>意思就是说，如果点击的div就是当前地图，那么就标记为当前活动的WebMap，否则就不是活动的WebMap。</p><p>————————</p><p>整个程序就是这么简单，替换MapView对象的map属性值，修改DOM元素的classList和操作DOM元素而已。</p><p>给出官方源代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1,maximum-scale=1,user-scalable=no"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Load a basic WebMap and swap with another on the same View - 4.2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    html,</span></span><br><span class="line"><span class="undefined">    body &#123;</span></span><br><span class="line"><span class="undefined">      font-family: sans-serif;</span></span><br><span class="line"><span class="undefined">      padding: 0;</span></span><br><span class="line"><span class="undefined">      margin: 0;</span></span><br><span class="line"><span class="undefined">      height: 100%;</span></span><br><span class="line"><span class="undefined">      width: 100%;</span></span><br><span class="line"><span class="undefined">      overflow: hidden;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">    #viewDiv &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      right: 0;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">      top: 60px;</span></span><br><span class="line"><span class="undefined">      bottom: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">    .header &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 0;</span></span><br><span class="line"><span class="undefined">      width: 100%;</span></span><br><span class="line"><span class="undefined">      height: 10%;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">    .btns &#123;</span></span><br><span class="line"><span class="undefined">      margin: 0 auto;</span></span><br><span class="line"><span class="undefined">      display: flex;</span></span><br><span class="line"><span class="undefined">      flex-direction: row;</span></span><br><span class="line"><span class="undefined">      justify-content: center;</span></span><br><span class="line"><span class="undefined">      align-items: center;</span></span><br><span class="line"><span class="undefined">      overflow: auto;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">    .btn-switch &#123;</span></span><br><span class="line"><span class="undefined">      flex-grow: 4;</span></span><br><span class="line"><span class="undefined">      background-color: rgba(34, 111, 14, 0.5);</span></span><br><span class="line"><span class="undefined">      color: #FFF;</span></span><br><span class="line"><span class="undefined">      margin: 1px;</span></span><br><span class="line"><span class="undefined">      width: 50%;</span></span><br><span class="line"><span class="undefined">      padding: 20px;</span></span><br><span class="line"><span class="undefined">      overflow: auto;</span></span><br><span class="line"><span class="undefined">      text-align: center;</span></span><br><span class="line"><span class="undefined">      cursor: pointer;</span></span><br><span class="line"><span class="undefined">      font-size: 0.7em;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">    .active-map &#123;</span></span><br><span class="line"><span class="undefined">      color: #fff;</span></span><br><span class="line"><span class="undefined">      background-color: rgba(34, 111, 14, 1);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://js.arcgis.com/4.2/esri/css/main.css"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://js.arcgis.com/4.2/"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">require</span>([</span></span><br><span class="line"><span class="javascript">      <span class="string">"esri/views/MapView"</span>,</span></span><br><span class="line"><span class="javascript">      <span class="string">"esri/WebMap"</span>,</span></span><br><span class="line"><span class="javascript">      <span class="string">"dojo/on"</span>,</span></span><br><span class="line"><span class="javascript">      <span class="string">"dojo/domReady!"</span></span></span><br><span class="line"><span class="javascript">    ], <span class="function"><span class="keyword">function</span>(<span class="params"></span></span></span></span><br><span class="line"><span class="undefined">      MapView, WebMap,</span></span><br><span class="line"><span class="undefined">      on</span></span><br><span class="line"><span class="undefined">    ) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> webmapids = [</span></span><br><span class="line"><span class="javascript">        <span class="string">"ad5759bf407c4554b748356ebe1886e5"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"71ba2a96c368452bb73d54eadbd59faa"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">"45ded9b3e0e145139cc433b503a8f5ab"</span></span></span><br><span class="line"><span class="undefined">      ];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      /************************************************************</span></span><br><span class="line"><span class="undefined">       * Create multiple WebMap instances</span></span><br><span class="line"><span class="undefined">       ************************************************************/</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> webmaps = webmapids.map(<span class="function"><span class="keyword">function</span>(<span class="params">webmapid</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">new</span> WebMap(&#123;</span></span><br><span class="line"><span class="undefined">          portalItem: &#123;</span></span><br><span class="line"><span class="undefined">            id: webmapid</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      /************************************************************</span></span><br><span class="line"><span class="javascript">       * Initialize the View <span class="keyword">with</span> the first WebMap</span></span><br><span class="line"><span class="undefined">       ************************************************************/</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span></span><br><span class="line"><span class="undefined">        map: webmaps[0],</span></span><br><span class="line"><span class="javascript">        container: <span class="string">"viewDiv"</span></span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="javascript">      on(<span class="built_in">document</span>.querySelector(<span class="string">".btns"</span>), <span class="string">".btn-switch:click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span></span></span></span><br><span class="line"><span class="undefined">        event) &#123;</span></span><br><span class="line"><span class="undefined">        /************************************************************</span></span><br><span class="line"><span class="javascript">         * On a button click, change the map <span class="keyword">of</span> the View</span></span><br><span class="line"><span class="undefined">         ************************************************************/</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> id = event.target.getAttribute(<span class="string">"data-id"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (id) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> webmap = webmaps[id];</span></span><br><span class="line"><span class="undefined">          view.map = webmap;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> nodes = <span class="built_in">document</span>.querySelectorAll(<span class="string">".btn-switch"</span>);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">var</span> idx = <span class="number">0</span>; idx &lt; nodes.length; idx++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> node = nodes[idx];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> mapIndex = node.getAttribute(<span class="string">"data-id"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (mapIndex === id) &#123;</span></span><br><span class="line"><span class="javascript">              node.classList.add(<span class="string">"active-map"</span>);</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">              node.classList.remove(<span class="string">"active-map"</span>);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-switch active-map"</span> <span class="attr">data-id</span>=<span class="string">"0"</span>&gt;</span>Missing Migrants<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-switch"</span> <span class="attr">data-id</span>=<span class="string">"1"</span>&gt;</span>Refugee Routes<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-switch"</span> <span class="attr">data-id</span>=<span class="string">"2"</span>&gt;</span>2015 European Sea Arrivals<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"viewDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[8] 2D与3D视图同步</title>
    <link href="https://ibrucekong.github.io/posts/1258689047/"/>
    <id>https://ibrucekong.github.io/posts/1258689047/</id>
    <published>2019-05-11T02:34:56.000Z</published>
    <updated>2019-05-11T02:34:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6391509.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6391509.html</a></strong></p><hr><p>同一份数据不同视图查看可能用的比较少，因为3D视图放大很多后就和2D地图差不多了，畸变很小，用于超大范围的地图显示时有用，很多时候都是在平面地图上进行分析、查询、操作。教学需要可能会对这个有要求？</p><p>本文没有深究两个比较复杂的函数，希望有朝一日能读懂吧，对于这种同一个Map对象不同视图的同步显示，建议直接copy后半截内容即可。</p><hr><p>鹰眼功能和这个类似，不过鹰眼功能（即上一篇文章）是利用watch()和watchUtils.when()来实现的同步，这个例子又有什么不同呢？探究之。</p><p>直接看结果图：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170213022338066-1544447155.png" alt="img"></p><p>看起来就是两个无边框的DIV，宽度各占50%。</p><p>实际上操作的结果就是，在任意一个视图拖动、缩放、旋转视图，另一个也跟着变，几乎就是放大版的鹰眼，也可以说是鹰眼的另一种写法。</p><hr><p>给出require的引用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"esri/Map"</span>,</span><br><span class="line">      <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">      <span class="string">"esri/views/SceneView"</span>,</span><br><span class="line">      <span class="string">"esri/core/watchUtils"</span>,</span><br><span class="line">      <span class="string">"dojo/domReady!"</span></span><br><span class="line">    ],</span><br><span class="line">     <span class="function"><span class="keyword">function</span>(<span class="params">Map,MapView, SceneView,watchUtils</span>)</span>&#123;</span><br><span class="line">          <span class="comment">//你的代码  </span></span><br><span class="line">     &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>嗯？又是watchUtils？看来和监听少不了干系了。</p><p>//事实上，本例还是用watch监听和watchUtils监听完成的同步，但是代码难于理解，就没有仔细深究。</p><p>看骨干部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">Map,MapView,SceneView,watchUtils</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;&#125;);</span><br><span class="line">    <span class="keyword">var</span> view1 = <span class="keyword">new</span> SceneView(&#123;&#125;);</span><br><span class="line">    <span class="keyword">var</span> view2 = <span class="keyword">new</span> MapView(&#123;&#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> synchronizeView = <span class="function"><span class="keyword">function</span>(<span class="params">view, others</span>)</span>&#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> synchronizeViews = <span class="function"><span class="keyword">function</span>(<span class="params">views</span>)</span>&#123;&#125;;</span><br><span class="line">    synchronizeViews([view1,view2]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例化一张地图，实例化两个视图，看来和上一个例子还是有区别的。</p><p>对此，博主表示暂时保留原代码。</p><p>因为synchronizeView长达60行，这个方法一定不普通。</p><p>博主的建议是：</p><p>如果需要对同一份底图的2D和3D视图进行同步观察显示，那么请直接把这两个syn方法copy过来，甚至包装成一个方法都可以，传入参数是两个view即可。</p><blockquote><p>有兴趣的同学可以查阅这个类：esri/core/Collection</p><p>这两个难于理解的方法体内用到了这个类和其几个方法，如map()方法、slice()方法、concat()方法。</p></blockquote><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[7] 鹰眼（缩略图的实现及异步处理、Promise、回调函数、监听的笔记）</title>
    <link href="https://ibrucekong.github.io/posts/3118632505/"/>
    <id>https://ibrucekong.github.io/posts/3118632505/</id>
    <published>2019-05-10T11:21:11.000Z</published>
    <updated>2019-05-10T11:21:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6389054.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6389054.html</a></strong></p><hr><p>文前说明：关于style就是页面的css暂时不做评论，因为官方给的例子的样式实在太简单了，照抄阅读即可。</p><p>这篇文章有着大量AJS 4.x版本添加的内容，如监听watch、Promise对象、回调函数、异步处理等内容，原理性的东西我会在文末解释，各位看官不用担心看不懂，我尽量用通俗的语言解释这些。</p><p>惯例，如果不习惯从头看到尾，可以直接跳到后面看总结。</p><hr><p>大家应该看过商业地图的缩略图功能吧？以度娘地图为例，在使用街景地图的时候，左下角会出现一个地点一样的2D小地图：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170211124618151-753389095.png" alt="img"></p><p>这个就是鹰眼功能的应用，在很多桌面软件中如Erdas、Envi，鹰眼是很常见的。</p><p>//如果以下超链接日后更新了4.3或更高版本，请自行寻找4.2的sample配合本文学习~</p><p>这次就解读<a href="https://developers.arcgis.com/javascript/latest/sample-code/overview-map/live/index.html" target="_blank" rel="noopener">2D overview map in SceneView</a>这个例子。</p><p>源代码：<a href="view-source:https://developers.arcgis.com/javascript/latest/sample-code/overview-map/live/index.html" target="_blank" rel="noopener">点我</a></p><p>其实就是一个2D的MapView在3D的SceneView的显示而已，关键就在数据的同步，官方指出了watch()方法是关键。</p><p>话不多说，先上最终效果图：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170211132205244-2055284662.png" alt="img"></p><p>结构大概就是，大的DIV里放SceneView，小的DIV里放MapView。</p><p>小的DIV里又有一个黑色的区域来标识当前SceneView的区域。小的DIV的widgets被移除。</p><p>html代码为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"viewDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"overviewDiv"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"extentDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>老样子，require给出引用（以前都叫第一个字符串数组参数，为了省事，以后直接叫引用了）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"esri/Map"</span>,</span><br><span class="line">      <span class="string">"esri/views/SceneView"</span>,</span><br><span class="line">      <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">      <span class="string">"esri/core/watchUtils"</span>,</span><br><span class="line">      <span class="string">"dojo/dom"</span>,</span><br><span class="line">      <span class="string">"dojo/promise/all"</span>,</span><br><span class="line">      <span class="string">"dojo/domReady!"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">Map, SceneView, MapView, watchUtils, dom, all</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//你的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>重点应该是：</p><p>view的watch()方法、watchUtils的when方法、view的toScreen方法、view的extent属性、view的then方法。</p><hr><p>既然有两个view（DIV），那么肯定要有两份map（数据）。</p><p>所以第二参数（以前的文章叫函数参数，之后都叫第二参数）先将map和view定义如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mainMap = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">  basemap: <span class="string">"hybrid"</span>,</span><br><span class="line">  ground: <span class="string">"world-elevation"</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> overviewMap = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">  basemap: <span class="string">"osm"</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> mainView = <span class="keyword">new</span> SceneView(&#123;</span><br><span class="line">  container: <span class="string">"viewDiv"</span>,</span><br><span class="line">  map: mainMap</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> mapView = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">  container: <span class="string">"overviewDiv"</span>,</span><br><span class="line">  map: overviewMap</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>mainMap、mainView是3D的，overviewMap、mapView是2D的。</p><p>当然，我们看到的2D的小地图是没有放大缩小那些控件的，只需1行代码，就可以置空那些控件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapView.ui.components = [];</span><br></pre></td></tr></table></figure><p>查阅API，可以知道ui属性是DefaultUI类，DefaultUI继承自UI类。components是字符串数组，若赋值为空数组则清空。相应的，DefaultUI类有remove和empty方法可以清除控件，就不细说了。</p><p>为了便于操作，把当前区域的DIV“extendDiv”的DOM元素获取为变量：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> extentDiv = dom.byId(<span class="string">"extentDiv"</span>);</span><br></pre></td></tr></table></figure><hr><p>以上就完成了准备部分。</p><p>接下来，数据加载完成后，就要对2D的地图和3D的地图进行“同步”了，需要用到两个view的then方法。</p><blockquote><p>then()方法是Promise对象的特有方法，而Promise是什么暂时无需了解，只要知道在AJS 4.x中Promise是一个很重要的东西。</p><p>而且，MapView和SceneView类都继承了Promise类。不仅如此，AJS 4.x中很多方法返回的都是Promise对象。</p></blockquote><p>先看看mainView（3D视图）的then方法看看它做了什么：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mainView.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  mainView.goTo(&#123;</span><br><span class="line">    center: [<span class="number">7</span>, <span class="number">46</span>],</span><br><span class="line">    scale: <span class="number">200000</span>,</span><br><span class="line">    heading: <span class="number">35</span>,</span><br><span class="line">    tilt: <span class="number">60</span></span><br><span class="line">  &#125;,</span><br><span class="line">　&#123;</span><br><span class="line">    animate: <span class="literal">true</span>,</span><br><span class="line">    duration: <span class="number">100000</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>很好，它接受了一个参数，类型是方法。这个匿名方法干了什么呢？这不就是上一篇文章里说的缩放动画嘛！（goTo）跳过，看mapView（2D视图）的then方法看它做了什么：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mapView.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  mainView.watch(<span class="string">"extent"</span>, updateOverviewExtent);</span><br><span class="line">  mapView.watch(<span class="string">"extent"</span>, updateOverviewExtent);</span><br><span class="line"></span><br><span class="line">  watchUtils.when(mainView, <span class="string">"stationary"</span>, updateOverview);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">updateOverview</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    mapView.goTo(&#123;</span><br><span class="line">      center: mainView.center,</span><br><span class="line">      scale: mainView.scale * <span class="number">2</span> * <span class="built_in">Math</span>.max(mainView.width /</span><br><span class="line">        mapView.width,</span><br><span class="line">        mainView.height / mapView.height)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">updateOverviewExtent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> extent = mainView.extent;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bottomLeft = mapView.toScreen(extent.xmin, extent.ymin);</span><br><span class="line">    <span class="keyword">var</span> topRight = mapView.toScreen(extent.xmax, extent.ymax);</span><br><span class="line"></span><br><span class="line">    extentDiv.style.top = topRight.y + <span class="string">"px"</span>;</span><br><span class="line">    extentDiv.style.left = bottomLeft.x + <span class="string">"px"</span>;</span><br><span class="line"></span><br><span class="line">    extentDiv.style.height = (bottomLeft.y - topRight.y) + <span class="string">"px"</span>;</span><br><span class="line">    extentDiv.style.width = (topRight.x - bottomLeft.x) + <span class="string">"px"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>很长的样子。</p><p>我慢慢解释。</p><p>仍然是接受一个方法作为参数（为什么then接受的参数那么奇怪？文末会解释的）</p><p><em>//题外话：在javascript里头传函数/方法是很常见的，函数/方法是js的一种变量类型，在C/C++里头可以传递函数指针，在C#里头可以传递委托变量。</em></p><p>这个方法里有两个方法，命名为 updateOverview 和 updateOverviewExtent，我们根据这两个方法把这个then方法的代码拆开看，发现watch和watchUtils.when是跟这两个方法配对的。</p><p>即：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两个视图都与updateOverviewExtent方法绑定</span></span><br><span class="line">mainView.watch(<span class="string">"extent"</span>, updateOverviewExtent);</span><br><span class="line">mapView.watch(<span class="string">"extent"</span>, updateOverviewExtent);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateOverviewExtent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> extent = mainView.extent;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> bottomLeft = mapView.toScreen(extent.xmin, extent.ymin);</span><br><span class="line">  <span class="keyword">var</span> topRight = mapView.toScreen(extent.xmax, extent.ymax);</span><br><span class="line"></span><br><span class="line">  extentDiv.style.top = topRight.y + <span class="string">"px"</span>;</span><br><span class="line">  extentDiv.style.left = bottomLeft.x + <span class="string">"px"</span>;</span><br><span class="line"></span><br><span class="line">  extentDiv.style.height = (bottomLeft.y - topRight.y) + <span class="string">"px"</span>;</span><br><span class="line">  extentDiv.style.width = (topRight.x - bottomLeft.x) + <span class="string">"px"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查阅API，得知视图的父类Accessor就支持watch方法了。值得一提的是，为了实现监听变化，AJS4.x版本专门提供了watch方法代替了以前的旧方法。</p><p>watch的用法是：</p><blockquote><p>对象.watch(“该需要监听的属性名”, 属性变化后需要执行的回调函数);</p><p>即某对象监听了它的某个属性后，这个属性一旦发生改变，就会去执行某些代码。</p></blockquote><p>在本例中，需要监听的是两个view对象的extent（范围）属性，一旦extent发生变化，那么updateOverviewExtent()方法就会被执行。</p><p>updateOverviewExtent()方法的大概意思就是：获取3D视图的范围-&gt;获取2D视图的对角线两个角点-&gt;更改2D视图上方的区域框的DOM元素的尺寸属性（top、left、height、width）</p><p>光改变区域框是不行的，还要改变2D地图的范围。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">watchUtils.when(mainView, <span class="string">"stationary"</span>, updateOverview);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateOverview</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  mapView.goTo(&#123;</span><br><span class="line">    center: mainView.center,</span><br><span class="line">    scale: mainView.scale * <span class="number">2</span> * <span class="built_in">Math</span>.max(mainView.width /</span><br><span class="line">      mapView.width,</span><br><span class="line">      mainView.height / mapView.height)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>watchUtils这个对象，是位于esri/core/watchUtils模块下的一个类。</p><p>它代表的含义是：监听某个对象，当这个对象的某个属性是true时，执行给定的方法。</p><p>查阅API得知，这个类提供了when这个静态方法，when方法的意义是：</p><p>所以，在本例中，意思就是：</p><p>当mainView这个3D视图对象的”stationary”属性是true时，刷新mapView这个2D视图对象。</p><p>刷新2D视图对象主要用的是上一篇中说到的goTo()方法，本例只指定了center和scale这两个属性组成的Object匿名对象。</p><p>SceneView类的stationary属性是布尔类型的，意义是当前视图是否已经静止（一般视图会由鼠标拖拽或者goTo()方法产生动态效果，一旦停止下来，stationary就会变成true）</p><p>总结一下。</p><p>这个例子大概思路就是：</p><p>·先实例化两个map和两个view，对3D的mainView在创建完成后使用then()方法缩放到指定位置。</p><p>·其中，对2D的mapView创建完成后使用then()方法，分别监听两个view的extent属性，还监听3D视图的stationary属性。</p><p>·当extent属性发生变化时，2D视图上方范围框先进行变化，然后2D地图紧随变化。</p><p>·当3D视图静止下来后，刷新2D视图。</p><p>监听还算比较好理解，需要注意的不多，注意到watch和watchUtils.when这两个方法返回的都是WatchHandle对象。待以后研究多了监听后，再仔细看看别的监听方法。</p><p>难点就在于then方法。</p><hr><p>难点。</p><p>then()方法怎么来的？这要从ES6（全名ECMAScript 2015）的新规范Promise对象说起。ECMAScript是JavaScript的标准，JS是ES的实现。</p><p>Promise是什么？这个东西说复杂也很复杂，它是：</p><p>为了处理异步操作多层回调函数的写法枯燥、难以阅读维护而产生的，由CommonJS社区发起的一个新规范的类。</p><p>最显著的特征是它实例化的对象都有then()和catch()方法（PromiseA+规范？好像是)</p><p>在AJS中，继承了Promise的类有：</p><p>全部的Layers</p><p>MapView、SceneView、LayerView</p><p>ViewAnimation</p><p>能返回Promise对象的类数不胜数。</p><p>所以说，为什么要用Promise？</p><p>这又要从异步操作说起了。</p><p>————</p><p>在AJS 4.x中，数据（Map类）和视图（View类）是分开的，3.x版本绘图渲染是Map自己完成的。</p><p>由于View视图类被分离开，绘图逻辑就成了它的主要功能。当然，绘图不会很快，往往有一个过程，尤其是超大数据量的绘图的时候会有一个比较长的等待过程。</p><p>所以，在JS里，较长的处理会丢给异步处理（就是同时进行好几个操作）</p><p>但是但是，我们知道JS是单线程的，它是怎么处理异步处理的呢？简单说说，JS的异步处理其实是个“伪异步”，是先完成同步代码才执行异步代码的。</p><p>通常，异步代码会做一些计算量比较大的事情，而同步代码则做一些不怎么耗时间的初始化工作。就是说</p><p>同步代码花少量的时间去初始化一些事情，其间有n个异步任务丢给异步队列。当同步代码完成初始化后（时间短），异步代码开始按顺序执行。</p><p>比如：界面的构建交给同步代码，而其间有n个后台数据交换、处理、计算的任务，就丢给异步队列去准备。当界面构造好（时间往往很短，几乎是秒速），异步代码就在后面开始执行。</p><p>这先看到的界面会让体验好很多，如果异步代码（就是耗时比较大的任务）放在同步代码里执行，那么由于同步的性质，必须等待这些耗时大的任务执行完成才能继续往下走（js的特点，单线程）</p><p>【在本例中】</p><p>初始化view，我不知道在云端是怎么运行的（因为我用的是CDN来运行AJS程序），但是我知道view的实例化肯定是用了异步操作。</p><p>即<em>先完成网页的加载（出现3D地球和2D地图，同步），再进行视图的渲染（山体拔高等，异步）。</em></p><p>sometimes，异步操作当然会有一个结果，比如异步在后面花好长时间算出个矩阵，但是同步代码已经结束了，异步任务丢过去的时候结果还没出来，怎么获取它？</p><p>我们可以用一个方法去获取它。这个方法，古时候叫回调函数。</p><p>在没有Promise类的时候，通常用回调函数这种办法实现（也能用事件、监听）异步是很正常的一种。</p><p>但是当回调函数本身也是个异步操作的时候，就会显得晕头转向。</p><p><em>异步第一层，有结果要用回调函数返回给同步代码-&gt;回调函数是第二层，这个回调函数里头需要用二级回调函数返回结果给第一层-&gt;……</em></p><p>举个例子：</p><blockquote><p>我是领导，我现在有两件事：有个事儿要做，和喝茶。</p><p>这两件事不冲突，虽然这个事儿很无聊，耗时大（如文字录入）。</p><p>所以我把这个事儿丢给经理（异步第一层），我继续喝茶（同步）</p><p>异步第一层就是经理要做这个事，但是这个事情绝大部分是无聊的，最后的整理比较简单。</p><p>所以经理就把这个无聊的部分丢给职员（异步第二层），等待职员把这部分做完的同时，也去喝茶（同步）。</p><p>于是，职员的结果就是二级回调函数，职员把结果完成后，“回调”给经理。</p><p>经理拿着职员的结果整理好，“回调”给领导。（第二层异步完成）</p><p>此时领导茶已经喝完了（同步完成），而任务也完成了（第一层异步完成）。</p></blockquote><p>这里如果用老的写法将会非常的烦，如果用Promise的then写法就是</p><blockquote><p>领导要做事儿.then(function(){让经理去做})</p><p>.then(function(){让职工做});</p></blockquote><p>链式写法，简单，容易看，也容易维护。</p><p>then里面的function就是回调函数，告诉异步任务完成后，要怎么处理异步结果的一段代码。</p><p>最后看看then方法的语法：</p><blockquote><p>then(function resolve, function rejected);</p></blockquote><p>我们一般只用前一个参数，即异步成功要怎么处理。而后一个参数是异步任务处理失败后要做什么。</p><p>甚至AJS官方还给出了处理中要做什么的第三个参数…这个就不说那么多了。</p><p>——</p><p>大概清楚是这么个过程后，我们知道View对象是Promise对象（继承），而且有异步操作的过程。</p><p>所以，mainView.then(function(){…});的意义就是</p><p>当3D视图在服务器端异步操作成功后，使用goTo()缩放到指定的位置。</p><p>文末，我还想说说监听，监听在AJS 3.x版本里是通过事件完成的，而AJS 4.x全新使用了watch一派写法。有关这些可以参考AJS 4.2的Guide文档。</p><p>最后的最后，关于异步和回调函数部分我也是学了一天后才给出的模糊定义，希望大家能看懂吧…我也不是很能理解，官方给的多层then()是这样的：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170213015641832-1292521096.png" alt="img"></p><p>出处：<a href="https://developers.arcgis.com/javascript/latest/guide/working-with-promises/index.html" target="_blank" rel="noopener">点我</a></p><p>then里头当然是方法，无参的。只有子一层的结果完成的时候，父一层的then才能凭借子一层的结果的回调完成异步。</p><p>给一些我阅读中觉得不错的对异步、回调函数讲解的文章：</p><blockquote><p><a href="http://www.cnblogs.com/lvdabao/p/es6-promise-1.html" target="_blank" rel="noopener">大白话讲解Promise</a></p><p><a href="http://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">ECMAScript 6入门</a></p><p><a href="http://www.cnblogs.com/fliu/articles/5246113.html" target="_blank" rel="noopener">Javascript异步编程的4种方法</a></p><p><a href="https://zhidao.baidu.com/question/1960024181274839300.html?fr=ala&amp;word=JavaScript为什么需要回调&amp;device=mobile&amp;ssid=0&amp;from=2001a&amp;uid=0&amp;pu=usm@0,sz@320_1003,ta@iphone_2_6.0_1_10.9&amp;bd_page_type=1&amp;baiduid=16B0F240A58D2AE4A6FDFB8BF05431C1&amp;tj=zhidao_2_0_10_l1" target="_blank" rel="noopener">百度知道-JS中回调函数怎么理解</a></p><p><a href="http://www.cnblogs.com/chrischjh/p/4648395.html" target="_blank" rel="noopener">Javascript异步编程之—异步原理</a></p><p><a href="http://blog.csdn.net/liwusen/article/details/54142748" target="_blank" rel="noopener">JS中的回调函数，以及ES6中通过promise处理回调</a></p></blockquote><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[6] goTo()地图动画</title>
    <link href="https://ibrucekong.github.io/posts/929677808/"/>
    <id>https://ibrucekong.github.io/posts/929677808/</id>
    <published>2019-05-10T11:01:11.000Z</published>
    <updated>2019-05-10T11:01:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6388084.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6388084.html</a></strong></p><hr><p>这是个很有意思的例子，不过例子给的比较复杂，需要查很多API，我会在文章最后给出关键的类和属性解释。</p><p>同样发现一个很有意思的事儿：博客园似乎有爬虫，我4号发布的blogs，5号就在百度和google搜索页面上看到了转载或者复制。</p><p>这篇文章逻辑组织不太好，想知道怎么做缩放动画的可以直接拉到尾部看结论。</p><p>当然，这篇代码比较多，不建议手机看。</p><hr><p>进入正题，goTo()动画，官方的例子是在SceneView中实现的。</p><p>照例，给出require的第一个字符串数组参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(</span><br><span class="line">　　[</span><br><span class="line">　　　　<span class="string">"esri/Map"</span>,</span><br><span class="line">　　　　<span class="string">"esri/views/SceneView"</span>,</span><br><span class="line">　　　　<span class="string">"dojo/query"</span>,</span><br><span class="line">　　　　<span class="string">"dojo/on"</span></span><br><span class="line">　　　　<span class="string">"dojo/domReady!"</span></span><br><span class="line">　　]</span><br><span class="line">　　<span class="function"><span class="keyword">function</span>(<span class="params">Map,SceneView,query,on</span>)</span></span><br><span class="line"><span class="function">　　</span>&#123;</span><br><span class="line">　　　　<span class="comment">//你的代码</span></span><br><span class="line">　　&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p> 除了上一次熟悉的Map类和SceneView类，还多出来了query和on这俩，字面意思可以猜测是查询和事件有关。继续往下看。</p><p> 为了实现动画移动摄像机，就要在html页面组织一些按钮。</p><p> 于是，在html的body标签内如下组织：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"optionsDiv"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"default"</span>&gt;</span>Default flight<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"linearSlow"</span>&gt;</span>Linear slow flight<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"linearFast"</span>&gt;</span>Linear fast flight<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"expoIncrease"</span>&gt;</span>Exponentially increasing speed flight<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"fixedDuration"</span>&gt;</span>10 seconds flight<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"bounceBerlin"</span>&gt;</span>Bounce to Berlin<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"viewDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6个按钮，分别是：默认漫游、较慢漫游、较快漫游、渐渐加快漫游、10秒钟漫游、弹性缩放到柏林</p><p>于是，在require的第二个函数参数里，就这样给这些button添加事件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">funtion(<span class="built_in">Map</span>,SceneView,query,on)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 仍然是实例化两个对象，map和view</span></span><br><span class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">        basemap: <span class="string">"osm"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> view = <span class="keyword">new</span> SceneView(&#123;</span><br><span class="line">          container: <span class="string">"viewDiv"</span>,</span><br><span class="line">          map: map,</span><br><span class="line">          zoom: <span class="number">4</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    on(dojo.query(<span class="string">"#default"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;);    </span><br><span class="line">    on(dojo.query(<span class="string">"#linearSlow"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;);   </span><br><span class="line">    on(dojo.query(<span class="string">"#linearFast"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;);   </span><br><span class="line">    on(dojo.query(<span class="string">"#expoIncrease"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;);   </span><br><span class="line">    on(dojo.query(<span class="string">"#fixedDuration"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;);</span><br><span class="line">    on(dojo.query(<span class="string">"#bounceBerlin"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;);</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>仅仅是一个on(dojo.query(), , function(){})方法即可实现为DOM元素添加对应的事件。这里，指定了“click”事件。</p><blockquote><p>关于dojo.query()，参考博客自 - <a href="http://blog.csdn.net/dojotoolkit/article/details/6265337" target="_blank" rel="noopener">http://blog.csdn.net/dojotoolkit/article/details/6265337</a></p><p>这里借用了CSS的语法，dojo.query(“#default”)，这样就能获取到元素了.</p><p>需要注意的是query方法获取到的是数组，如果只有一个那就是它本身。</p><p>单个按ID查找DOM元素的方法是dojo.byId()</p></blockquote><hr><p>我们继续。获取html中定义的按钮元素后添加了事件以及函数体后，自然就是为它添加动画效果了。</p><p>我们取完整函数体看看，有什么异同。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">on(dojo.query(<span class="string">"#default"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          view.goTo(shiftCamera(<span class="number">60</span>));</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        on(dojo.query(<span class="string">"#linearSlow"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          view.goTo(shiftCamera(<span class="number">60</span>),</span><br><span class="line">            &#123;</span><br><span class="line">              speedFactor: <span class="number">0.1</span>,</span><br><span class="line">              easing: <span class="string">"linear"</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        on(dojo.query(<span class="string">"#linearFast"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          view.goTo(shiftCamera(<span class="number">60</span>),</span><br><span class="line">            &#123;</span><br><span class="line">              speedFactor: <span class="number">6</span>,</span><br><span class="line">              easing: <span class="string">"linear"</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        on(dojo.query(<span class="string">"#expoIncrease"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          view.goTo(shiftCamera(<span class="number">60</span>),</span><br><span class="line">            &#123;</span><br><span class="line">              duration: <span class="number">4000</span>,</span><br><span class="line">              easing: <span class="string">"in-expo"</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        on(dojo.query(<span class="string">"#fixedDuration"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          view.goTo(shiftCamera(<span class="number">30</span>),</span><br><span class="line">          &#123;</span><br><span class="line">            duration: <span class="number">10000</span>,</span><br><span class="line">            maxDuration: <span class="number">10000</span> </span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义时间函数体</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">customEasing</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span> - <span class="built_in">Math</span>.abs(<span class="built_in">Math</span>.sin(<span class="number">-1.7</span> + t * <span class="number">4.5</span> * <span class="built_in">Math</span>.PI)) * <span class="built_in">Math</span>.pow(</span><br><span class="line">            <span class="number">0.5</span>, t * <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        on(dojo.query(<span class="string">"#bounceBerlin"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          view.goTo(&#123;</span><br><span class="line">            position: &#123;</span><br><span class="line">              x: <span class="number">13.40</span>,</span><br><span class="line">              y: <span class="number">52.52</span>,</span><br><span class="line">              z: <span class="number">700000</span>,</span><br><span class="line">              spatialReference: &#123;</span><br><span class="line">                wkid: <span class="number">4326</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            heading: <span class="number">0</span>,</span><br><span class="line">            tilt: <span class="number">0</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            speedFactor: <span class="number">0.3</span>,</span><br><span class="line">            easing: customEasing</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>我们可以发现有很多东西是多出来的。以默认漫游按钮为切入点，发现使用了view这个对象的goTo()方法，参数未知，看来是一个有返回值的方法。查看官方API和本例代码得知goTo()方法和shiftCamera()方法的含义：</p><blockquote><p>goTo()方法</p><p>将视图转移到给定的目标。参数可以是：Geometry或Geometry数组、Graphic或Graphic数组、Viewpoint对象、Camera对象。</p><p>本例中就使用了Camera对象（shiftCamera方法的返回值就是一个Camera）或Object对象（缩放到柏林）。</p><p>以上的参数是“target”，即目标。</p><p>后面还有一些可选的参数，用{}括起来作为一个Object对象：</p><p>animate（boolean）、speedFactor（number类型）、duration（numer类型）、maxDuration（number类型）、easing（string或方法体）</p><p>speedFactor是速度因子，很好理解，默认是1.</p><p>duration是持续时间，如果有这个，那么speedFactor就会被覆盖。</p><p>maxDuration是最大持续时间。</p><p>easing是缓动方式。</p><p>通常，easing必选，speedFactor和duration、maxDuration三选一。</p><p>参数均可选。</p><p>shiftCamera()方法</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; function shiftCamera(deg)&#123;</span><br><span class="line">&gt;      var camera = view.camera.clone();</span><br><span class="line">&gt;      camera.position.longitude += deg;</span><br><span class="line">&gt;      return camera;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>给定一个deg（旋转角，角度制），camera的position的longitude值加上deg值。当然，deg要和longitude类型一样。</p><p>position是一个空间点（Point类，继承自Geometry），longitude是经度。AJS4.2是默认用Web Mercator或WGS 84参考系的。</p><p>本例中默认漫游传入了60度，即每次按按钮就会把视角旋转60度。</p></blockquote><hr><p>我们再来看看第2-第5个漫游按钮。</p><p>它们除了shiftCamera方法返回的Camera对象（target）外，还多了一个{}Object对象（option）。</p><p>本例中，除了弹性缩放到柏林这个按钮外，其余都是用Camera对象和Object对象组合的方式，达到动画效果。</p><p>我们当然可以直接用{}来定义一个Camera对象，就像弹性缩放到柏林这个按钮的方法体内写的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">on(dojo.query(<span class="string">"#bounceBerlin"</span>), <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  view.goTo(&#123;             <span class="comment">//这一层大括号定义的是Camera对象</span></span><br><span class="line">    position:</span><br><span class="line">    &#123;           <span class="comment">//这一层大括号定义的是Camera的position属性</span></span><br><span class="line">      x: <span class="number">13.40</span>,</span><br><span class="line">      y: <span class="number">52.52</span>,</span><br><span class="line">      z: <span class="number">700000</span>,</span><br><span class="line">      spatialReference:</span><br><span class="line">      &#123;            <span class="comment">//这一层是空间参考</span></span><br><span class="line">        wkid: <span class="number">4326</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    heading: <span class="number">0</span>,        <span class="comment">//Camera.heading</span></span><br><span class="line">    tilt: <span class="number">0</span>           <span class="comment">//Camera.tilt</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;      <span class="comment">//这一层大括号就是跟上面类似的Object对象了</span></span><br><span class="line">    speedFactor: <span class="number">0.3</span>,</span><br><span class="line">    easing: customEasing</span><br><span class="line">  &#125;);<span class="comment">//这个小括号结束的是goTo的范围</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在Object对象中，easing参数可以指定为一个方法体（返回值是number即可）。这里customEasing就是这样的一个方法。（看起来略复杂）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">customEasing</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">1</span> - <span class="built_in">Math</span>.abs(<span class="built_in">Math</span>.sin(<span class="number">-1.7</span> + t * <span class="number">4.5</span> * <span class="built_in">Math</span>.PI)) * <span class="built_in">Math</span>.pow(<span class="number">0.5</span>, t * <span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（插一句：如果在C#中，可不能随便这样给个方法名就行了，要用委托才能操作方法）</p><p>关于easing这个参数的string值，大家可以自行到API查询，我简单列出这几个枚举：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linear, in-cubic, out-cubic, in-out-cubic, in-expo, out-expo, in-out-expo</span><br></pre></td></tr></table></figure><p>都可以自己试试，估计就是速度的不同而已。官方推荐小于1s的动画就用自己定义的方法体，超过1s的就用上面的枚举就行了。</p><hr><p>总结。</p><p>地图缩放动画的核心就是view对象的goTo()方法的使用。</p><p>goTo()方法在MapView类和SceneView类中都有提供，但是在它们的父类View类中没有。</p><p>本文就对官方的API和例子进行学习，主要了解goTo()方法的参数的使用。</p><p>用法：view对象.goTo(target, option);</p><p>可以是：{定义Camera对象}+{Option参数}传入（前5个按钮）</p><p>也可以是：直接传一个Camera对象+{Option参数}（最后一个按钮）。</p><p>Option参数中的easing是“必选”的（不然就没动画效果了呀），speedFactor、duration、maxDuration是三选一。</p><p>Camera对象可以自己用方法体返回，也可以直接用js的大括号定义。</p><p>改变Camera对象的一些属性值，如经纬度，就可以达到改变视角。</p><p>至于其他的，如Geometry、Graphic、Viewpoint就没有进行学习了，参考API可以解决，本文只是解读官方的例子达到入门效果。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[5] 官方API大章节概述与内容转译</title>
    <link href="https://ibrucekong.github.io/posts/1307306721/"/>
    <id>https://ibrucekong.github.io/posts/1307306721/</id>
    <published>2019-05-10T10:42:30.000Z</published>
    <updated>2019-05-10T10:42:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363915.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363915.html</a></strong></p><hr><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170204053145370-164038531.png" alt="img"></p><p>内容如上，截图自ESRI官网，连接：<a href="https://developers.arcgis.com/javascript/latest/sample-code/index.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2</a>（可能会跳转到4.3或者更高最新版本，如果有需要，到CSDN可以下载到4.2的离线文档）</p><p>【Get Started】</p><p>类似于绪论一样的东西，抽取了最需要关注的几个例子。如：加载Map和View，加载layers，使用弹出窗口，视觉化，与使用窗口小部件。（wtf居然没有分析你想搞事情啊web除了展示难道不应该有（）&amp;&amp;*……@）好吧，4.2刚出的时候分析功能确实不太全。</p><p><a href="http://www.cnblogs.com/onsummer/p/6363912.html" target="_blank" rel="noopener">【Mapping and Views】</a> </p><p>最基础的，知道地图和视图的区别，能使用2D和3D地图，对地图的布局有一定的了解，对地图的动画也有小小的使用示例。还介绍了2D3D视图同步、鹰眼、指北针等功能。这一章是最基础的了，其中第一小节介绍了入口函数的参数意义。</p><p>【Layers】</p><p>这一章很庞大，和地理数据有关。按顺序读下去：</p><p>支持多图层叠加显示</p><p>支持要素图层、场景图层（直接把影像拔高，推出了一个盒子形状的立体物件的场景图层）、矢量瓦片图层（这个很厉害啊）、影像图层、流图层、CSV图层、OpenStreet地图图层、Web瓦片图层、点云图层（这个更厉害1.1亿的激光雷达点云数据都能加载进来）</p><p>其中，对MapImageLayer和ImageryLayer有着重的介绍，前者不知道是什么东西，后者是影像图层（栅格图层）。这也是数据中最关键的了。</p><p>最后我想问一下：图层这种东西，是怎么创建的（查API应该可以查到如何创建实例）？数据又如何从硬盘中获取？需要服务器环境吗？（尚待解决）</p><p>回答上一句提到的问题。图层通过ArcGIS Server发布的各种服务创建，也可以通过Online或者Portal上的ID创建。</p><p>【Visualization】</p><p>这一章是符号的定制和色彩、样式的管理，主要是视觉方面的工作，在Web上不可能弄得很丑，Web最重要的功能就是“演示”，可视化这章就是为此而生。这一章内容繁多但是不难，简单看过去就是自定义符号、色彩设置、色带设置等，和桌面版的差不多。短时间内没法看完，以后待功能性章节完成学习后再进行攻读。</p><p><a href="http://www.cnblogs.com/onsummer/p/6399346.html" target="_blank" rel="noopener">【Popups】</a> </p><p>Popups意思为弹出窗口，第一个就以坐标的显示为例子。</p><p>弹出窗口也是一个相当基础的功能，因为有的查询功能的结果就需要用这种输出方式。</p><p>紧接的是：使用弹出小窗口的模板、对popups的位置进行固定（Dock，上下左右相对固定）</p><p>然后是在popups上加需要的内容，官方演示了表格、多媒体、文档和图表。</p><p>最后，在弹出窗口上也是可以添加按钮的（官方演示了Zoom功能和测量功能），也可以定制自己的功能（跳转到别的地方什么的）</p><p>【Graphics】</p><p>这章简单，和GDI差不多的东西，往视图中添加图形。支持2D和3D视图添加。</p><p><a href="http://www.cnblogs.com/onsummer/p/6399661.html" target="_blank" rel="noopener">【Searching】</a> </p><p>这章就是空间查询了。不过是基于widget的查询，底层似乎没给出。</p><p>使用Search widget可以查询，这功能在国内的地图厂商上都有，并且他们很像。不同的是，这是WebGIS，而不是商用GIS，功能是可以自己定制的。</p><p>当然，也可以对3D、2D地图进行筛选查询、点击查询。</p><p>ESRI也提供了最古老的方式——在表格上显示查询结果。</p><p><a href="http://www.cnblogs.com/onsummer/p/6414565.html" target="_blank" rel="noopener">【Analysis】</a></p><p>这一章是空间分析，虽然不及Desktop上的ArcMap和ArcGIS Pro那么强悍，不过对于基础的业务倒也足够。</p><p>ESRI已经说了，空间分析仍会在未来的版本中发布更新以与3.x产品线追平。</p><p>WebGIS的空间分析主要是：缓冲区分析和网络分析。例子中的网络分析是求解最短路径，比桌面版的操作友好多了（见本人的ArcGIS 网络分析专辑）。</p><p>此外官方还提供了：可视域分析、热点分析、查询高程（点高程变化和线路海拔变化等）。</p><p>【Widgets】</p><p>这属于UI的定制，大布局上可以用第三方JS库，在地图上的UI控件就交给ESRI吧。</p><p>粗看下去，主要有：</p><p>Home按钮控件、图层列表控件、图例控件、定位控件、地图打印到本地磁盘控件、追踪定位控件（平面的）、导航定位控件（用于导航）、快速布局控件（widget太多了可以用一个东西管理，view对象的ui属性）</p><p>ESRI强大到：widget似乎是可以自定义的（支持第三方JS库！如Angular、React），我看到了custom的字样，但是没有仔细往下看，因为提供的控件和功能已经满足大多数的需求了。甚至，widget还可以给它弄个皮肤。</p><p>颤抖吧人类。</p><p>【More 3D】</p><p>这章跟数字高程模型有关，能使用大地高程进行3D可视化，并控制摄像机的位置和角度。</p><p>同时，也可以把高程信息叠加到要素类上，进行高程3D显示。</p><p>我还看到了一个好玩的东西：控制太阳（就是控制日照角度，根据时间），其实就是环境的控制。</p><p>AJS的3D引擎是可以拓展的，甚至提及了Threejs公共3D引擎库（Threejs差评，文档忒少难读）。</p><p>ESRI提供了WebGL的检测功能，因为3D的支持需要WebGL，如果浏览器不支持，那肯定是不行的。</p><p>【Other】</p><p>这里是一些杂项，如从服务器上获取资料、许可，连接服务器等。</p><hr><p>API从esri这个大类分下去，有以下一级模块及与一级模块并列的类：</p><p>类：Basemap、Camera、Color、config、Graphic、Ground、kernel、PopupTemplate、request、Viewpoint、WebMap、WebScene</p><p>一级模块：/core  /geometry /identity /layers /portal /renderers /support /symbols /tasks /views /webmap /webscene /widgets</p><p>一些重要的二三级模块展示如下</p><p>/core： /accessorSupport /workers</p><p>/geometry： /support</p><p>/layers： /support</p><p>/renderers： /smartMapping/statistics      /smartMapping/symbology       /support</p><p>/symbols： /support</p><p>/tasks： /support</p><p>/views： /3d    /layers   /ui</p><p>/widgets： /support</p><p>对于API Reference，等用到一定时候会做类图，未完待续。其实官方的API已经很不错了，但是就是没有中文版，需要用过的人去做一些工作。</p><p>最后，善用API Reference。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[4] 第二章其余感兴趣的例子</title>
    <link href="https://ibrucekong.github.io/posts/642960823/"/>
    <id>https://ibrucekong.github.io/posts/642960823/</id>
    <published>2019-05-10T10:22:13.000Z</published>
    <updated>2019-05-10T10:22:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363914.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363914.html</a></strong></p><hr><blockquote><p>目录如下（点击即可超链接跳转）：</p><p><a href="http://www.cnblogs.com/onsummer/p/6391517.html" target="_blank" rel="noopener">视图存档</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6391517.html" target="_blank" rel="noopener">2D地图添加指南针</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6391517.html" target="_blank" rel="noopener">视图移动</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6389054.html" target="_blank" rel="noopener">鹰眼</a> 【重要】</p><p><a href="http://www.cnblogs.com/onsummer/p/6391509.html" target="_blank" rel="noopener">2D3D视图同步</a> 【重要】</p><p><a href="http://www.cnblogs.com/onsummer/p/6391513.html" target="_blank" rel="noopener">同视图不同数据同步</a> 【重要】</p></blockquote><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[3] 官方第二章Mapping and Views概览与解释</title>
    <link href="https://ibrucekong.github.io/posts/814364469/"/>
    <id>https://ibrucekong.github.io/posts/814364469/</id>
    <published>2019-04-24T07:15:36.000Z</published>
    <updated>2019-04-24T07:15:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363912.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363912.html</a></strong></p><hr><p>目录如下：</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/3-1.png" alt="img"></p><p>连接：<a href="https://developers.arcgis.com/javascript/latest/sample-code/scene-local/index.html" target="_blank" rel="noopener">第二章 Mapping and Views</a></p><p>根据本人体会，</p><p>【这一章节主要是介绍地图（Map）和视图（View）的。】</p><p>其中，Get started with MapView（2D）和 Get started with SceneView（3D）两节介绍了如何加载ESRI服务器或者开源的地图和视图。这两节介绍了很重要的概念：Map和View，Map即地理数据，而View代表视图。</p><p><em>View主要有两种，MapView和SceneView，前者是2D的，而后者是3D的，区别就是投影到哪里，前者投影到平面上，而后者投影到球体上，类似ArcScene和ArcGlobe。</em></p><p><code>Load a WebMap</code>和<code>Load a WebScene</code>是加载某服务器上的Web地图或3D场景，官方的意思是支持ArcGIS Online or ArcGIS for Portal item导入为WebMap或WebScene，唯一的识别码就是ID。</p><p><code>Save a WebScene</code>，顾名思义，保存场景，几行代码即可保存场景（可以覆盖保存）。</p><p><code>WebScene slides</code>，这小节演示了给当前场景拍个照片然后存起来，需要的时候点击这个div（图片）即可读档。</p><p><code>Create a local scene</code>，这个不是很懂，貌似是把两个以上的scene叠加，形成一个新的，然后添加到SceneView中。</p><p><code>Map rotation</code>，这小节给2D地图（Map）添加了指北针小工具（wigdet？），允许2D地图旋转，可以用指北针恢复正北方向。</p><p><code>Using goTo() in a SceneView</code>，这小节演示了地图缩放动画。</p><p><code>Overview map</code>，这小节演示了如何使用鹰眼功能（其实就是2DMap和3DScene同步）。</p><p><code>View padding</code>，这小节演示了如何移动View的位置（例如需要一个面板在右边的时候，可以把地图的中心向左移动一些）</p><p><code>Custom basemap</code>，这小节使用了Basemap这个类，创造了Basemap实例后就可以把Map对象的基础数据替换成自己的数据了。</p><p><code>Synchronize two views</code>，这小节演示了如何把3D的SceneView和2D的MapView同步显示。</p><p><code>Swap web maps in the same view</code>，这小节演示了同一个view（如MapView）下，不同地理数据的切换（坐标不变）。例子：度娘地图中卫星地图和街道图的切换。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[2] 显示3D地图</title>
    <link href="https://ibrucekong.github.io/posts/1049908487/"/>
    <id>https://ibrucekong.github.io/posts/1049908487/</id>
    <published>2019-04-24T03:25:12.000Z</published>
    <updated>2019-04-24T03:25:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363910.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363910.html</a></strong></p><hr><p>3D地图又叫场景。</p><p>由上一篇可知，</p><p>require入口函数的第一个参数是字符串数组</p><p><code>[&quot;esri/Map&quot;, &quot;esri/views/MapView&quot;, &quot;dojo/domReady!&quot;]</code></p><p>这里，MapView就是2D的地图视图。</p><p>所以，将2D地图改为3D地图，其实很简单，只需要把这个字符串数组的第二个引用改为”esri/views/SceneView”</p><p>然后在第二个参数中修改对应的view代码即可。</p><p>下面给出第二个参数（函数）的新代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">Map, SceneView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span>, </span><br><span class="line">    ground: <span class="string">"world-elevation"</span></span><br><span class="line">  &#125;);<span class="comment">//仍然使用osm基础地图</span></span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> SceneView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>,     </span><br><span class="line">    map: map,               </span><br><span class="line">    scale: <span class="number">50000000</span>,         </span><br><span class="line">    center: [<span class="number">113.5</span>, <span class="number">30</span>] </span><br><span class="line">  &#125;);<span class="comment">//比例尺为1：5000万</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里可以发现，view对象不是MapView类了，而是SceneView类。</p><p>而且Map对象构造函数内出现了一个新的东西——ground。</p><p>下面是ground的资料：</p><p>ground属性是表面数据，它可以是Ground类的实例。</p><p>下面是SceneView类的资料：</p><p>SceneView与MapView同样继承自View类。<a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html" target="_blank" rel="noopener">SceneView</a></p><p>同样的，给出完整的html代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span><br><span class="line">&lt;title&gt;Get started <span class="keyword">with</span> SceneView - Create a <span class="number">3</span>D map&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">  html, body, #viewDiv &#123;</span></span><br><span class="line"><span class="regexp">    padding: 0;</span></span><br><span class="line"><span class="regexp">    margin: 0;</span></span><br><span class="line"><span class="regexp">    height: 100%;</span></span><br><span class="line"><span class="regexp">    width: 100%;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://js.arcgis.com/4.2/esri/css/main.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://js.arcgis.com/4.2/"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">require</span>([</span><br><span class="line">  <span class="string">"esri/Map"</span>,</span><br><span class="line">  <span class="string">"esri/views/SceneView"</span>,</span><br><span class="line">  <span class="string">"dojo/domReady!"</span></span><br><span class="line">], <span class="function"><span class="keyword">function</span>(<span class="params">Map, SceneView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span>,</span><br><span class="line">    ground: <span class="string">"world-elevation"</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> SceneView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>, </span><br><span class="line">    map: map, </span><br><span class="line">    scale: <span class="number">50000000</span>, </span><br><span class="line">    center: [<span class="number">113.5</span>, <span class="number">30</span>]  </span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"viewDiv"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>运行成功大概是这样的（稍微修改了比例尺为15万，坐标为114.3和30.5没错就是武汉）</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/2-1.png" alt="img"></p><hr><p>​      ps：如果感觉像平面的话可以把比例尺调回500w或者1000w，地面起伏不太明显可以调basemap为别的地图，坐标定位到山区。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[1] 显示地图</title>
    <link href="https://ibrucekong.github.io/posts/161947747/"/>
    <id>https://ibrucekong.github.io/posts/161947747/</id>
    <published>2019-04-24T02:52:30.000Z</published>
    <updated>2019-04-24T02:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363886.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363886.html</a></strong></p><hr><p>ArcGIS API for JavaScript 4.2直接从官网的Sample中学习，API Reference也是从官网翻译理解过来，鉴于网上截稿前还没有人发布过4.2的学习笔记，我就试试吧。</p><p>什么是ArcGIS API for JS？这里就不多介绍了，最关键的一点是4.x版本与3.x版本的变化，按官方的意思是重新写了底层。</p><p>笔记中规定：</p><p>ArcGIS API for JavaScript简称AJS</p><p>使用CDN（即不配置本地环境）进行测试开发</p><p>其余根据需要进行修改、增删。</p><hr><p>要将地图显示在html页面上，那就要有一个块元素承接并执行渲染。</p><p>本节以最简单、最低需求的2D地图显示为例。</p><p>首先在html页面中肯定要有一个div，官方命名为“viewDiv”。然后就在js代码中对这个div进行输出即可。先贴出js代码的骨架部分（展开即可查看代码）</p><p>这部分代码将位于4.2的js文件引用之下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span></span><br><span class="line">(</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"esri/Map"</span>,</span><br><span class="line">      <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">      <span class="string">"dojo/domReady!"</span></span><br><span class="line">    ] ,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">Map, MapView</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//你的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>现在对require入口函数的第一个参数（字符串数组）中的三个字符串的含义进行解释。</p><p>这三个字符串与C#中的using命名空间、C++中的include头文件、Java中的#import类似，是对第二个参数所需要的功能进行引用。</p><p>具体为什么是这三个字符串，后面再解释。</p><p>第二个参数是一个函数（C#里会传委托吧大概忽略这个括号），这个函数的函数体如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">Map, MapView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span> <span class="comment">// 基础地图类型</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>,  <span class="comment">// 承接地图的块元素的ID</span></span><br><span class="line">    map: map,  <span class="comment">// 地图对象，由上方new出</span></span><br><span class="line">    zoom: <span class="number">8</span>,  <span class="comment">// 缩放级别</span></span><br><span class="line">    center: [<span class="number">114</span>, <span class="number">30</span>]  <span class="comment">// 中心经纬度</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们对这里的两个实例化的对象map、view进行解释说明。</p><p>【map对象是地图的数据部分，而view则是地图的可视化部分。】</p><p>map对象的创建参数，在本例中是basemap，查询参考可以知道使用了osm这一个类型的基础地图。basemap是一个类，在参考文档中也可以查询到。官方使用的是streets地图，而114，30附近streets是没有的，我切换到了osm地图。</p><p>view对象构造时，拥有4个参数，注释中容易懂，就不做多的解释了，重要的是map对象是由上面new实例化出来的。</p><p>至于JS的function参数和奇怪的构造函数，我也不多解释了，总之，Map和MapView两个名词，是esri/Map模块和esri/views模块下的两个类而已。</p><p>这便是在第一个参数数组中前两个字符串的含义了。</p><p><code>[&quot;esri/Map&quot;, &quot;esri/views/MapView&quot;, &quot;dojo/domReady!&quot;] //第三个字符串暂时不解释</code></p><blockquote><p>【Map类和MapView类的引用】</p><p>对Map类的信息截图如下：</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/1-1.png" alt="img"></p><p>继承自Accessor，子类有WebMap和WebScene。</p><p>构造函数的参数有一个：basemap类型的参数</p><p>对于Map对象的属性和方法，可以参考下文：</p><p><a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html" target="_blank" rel="noopener">Map</a></p><p>同理，MapView对象参考下文如下：</p><p><a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html" target="_blank" rel="noopener">MapView</a></p><p>MapView对象构造函数、属性和函数也写的很详细了。MapView继承自View类，而View类则继承自Accessor类。</p></blockquote><p>以上便为第二个参数的笔记。</p><p>现在，贴出完整的html页面代码，可以自行复制粘贴到本地html文件，双击打开即可看到地图。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span><br><span class="line">&lt;title&gt;Get started <span class="keyword">with</span> MapView - Create a <span class="number">2</span>D map&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">  html, body, #viewDiv &#123;</span></span><br><span class="line"><span class="regexp">    padding: 0;</span></span><br><span class="line"><span class="regexp">    margin: 0;</span></span><br><span class="line"><span class="regexp">    height: 100%;</span></span><br><span class="line"><span class="regexp">    width: 100%;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://js.arcgis.com/4.2/esri/css/main.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://js.arcgis.com/4.2/"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">require</span>([</span><br><span class="line">  <span class="string">"esri/Map"</span>,</span><br><span class="line">  <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">  <span class="string">"dojo/domReady!"</span></span><br><span class="line">], <span class="function"><span class="keyword">function</span>(<span class="params">Map, MapView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>, </span><br><span class="line">    map: map,   </span><br><span class="line">    zoom: <span class="number">8</span>,</span><br><span class="line">    center: [<span class="number">114</span>, <span class="number">30</span>] </span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"viewDiv"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>不出意外的话，会是这样子：</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/1-2.png" alt="img"></p><p>本人使用chrome 56浏览器，这是在网吧的机器，Win7+Chrome 55.</p><hr><p>补充：</p><p>link和第一个script标签是对官方样式表和类库的引用，没有这俩是运行不了的。</p><p>因为AJS是基于dojo的，所以需要在require的第一个字符串数组参数的第三个元素中使用dojo/domReady!，具体是为什么，官方例子有写，作为应用级别的开发就不深入了，有兴趣的同学可以试看AJS的框架什么的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[0] AJS4.2概述、新特性、未来产品线计划与AJS笔记目录</title>
    <link href="https://ibrucekong.github.io/posts/962944946/"/>
    <id>https://ibrucekong.github.io/posts/962944946/</id>
    <published>2019-04-23T04:32:10.000Z</published>
    <updated>2019-04-23T04:32:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6391528.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6391528.html</a></strong></p><hr><blockquote><p>放着好好的成熟的AJS 3.19不学，为什么要去碰乳臭未干的AJS 4.2？</p><p>4.2全线基础学习请点击<a href="http://www.cnblogs.com/onsummer/p/6391528.html#My" target="_blank" rel="noopener">【直达】</a></p><p>4.3及更高版本的补充学习请关注我的博客。</p></blockquote><h1 id="ArcGIS-API-for-JavaScript-4-2概述"><a href="#ArcGIS-API-for-JavaScript-4-2概述" class="headerlink" title="ArcGIS API for JavaScript 4.2概述"></a>ArcGIS API for JavaScript 4.2概述</h1><p>AJS 4.2，即ArcGIS API for JavaScript 4.2，是美国ESRI公司针对WebGIS市场推出的、利用JavaScript和Dojo开发的一款产品，它在2016年12月发布。而AJS 4.0 beta则在一年前就发布了。</p><p>关于AJS3和AJS4选择的问题，现在可能AJS4还不够3某些方面厉害，尤其是Analysis部分等，这肯定的ESRI未来几年要巩固的方向。毫无疑问。如果急在眉梢需要开发一款2D数据处理很强的WebGIS应用，那么我还是推荐用AJS 3.19，毕竟已经很成熟了，AJS3的文档也满天飞。如果要适应未来5年的潮流，我建议还是从AJS4学起，假如没学过AJS3的话。</p><p>学了AJS3也无所谓，AJS4有很多亮点的。</p><p>所谓初生牛犊不怕虎，啃就是了。</p><p>但凡有一定面向对象开发能力的地理信息系统相关的人都可以迅速上手AJS，这是我的感受。这篇blog是我读第一个AJS程序到现在为止写的，过去了不到10天，除去中间没看的时间静用时3天。所以，AJS不算很难。ps：我有C#+ArcObjects的基础，能独立完成一个Winform ArcEngine小项目。</p><h1 id="AJS-4新特性"><a href="#AJS-4新特性" class="headerlink" title="AJS 4新特性"></a>AJS 4新特性</h1><p>AJS4.X（下文简称AJS4）是16年正式发布的产品，其新特性是：</p><p>\1. 3D支持</p><p>这是在3.x版本（下文简称AJS3）里没有的，支持构建3D地图和3D场景了。有关更多3D内容可以查询官方的发布日志。</p><p>\2. 简化API</p><p>把AJS3中不规范的类名规范化了，并简化了一批类名，重分类了一些类所在模块，更易用。详情见官方网站中AJS3-AJS4变化表。</p><p>\3. 直接使用属性</p><p>像C#的属性一样，可以直接用“.”运算符调用属性进行取值、赋值，而不用再调setProperty()、getProperty()这种不简洁的写法。</p><p>\4. 对事件监听有变化</p><p>在AJS4中已经不再通过propertyname-change事件监听属性变化，现在只需要使用.watch(property, callback)方法来监听特定的属性更改。当属性发生变化时，回调函数将会接一系列参数，包括，受新值、旧值、属性名、监听对象。</p><p>\5. 数据和视图分开</p><p>在AJS3中，Map和Layer对象要处理绘制地图，但是在AJS4中被单独剥离出来称为View对象了（2D为MapView，3D为SceneView）</p><p>View.map属性可以引用Map对象，一个Map对象可以被多个View引用。</p><p>\6. 仅支持AMD模式</p><p>AMD，不是超微半导体那个AMD，是异步模块定义的意思。由于AJS 4采用了Dojo框架和ECMAScript6（即最新规范的JavaScript）实现，AJS就得以支持开发大型Web平台。</p><p>具体这个东西是什么，各位看官还请移步比我更强的博客中查阅【Asynchronous Module Definition】</p><p>\7. Promise</p><p>异步操作的福音，then()方法简直就是多层回调的救命稻草——夸张了点。不过Promise作为2015年ECMAScript新标准中的一个，能马上被AJS采用，确实不错，紧跟潮流。</p><p>有些地理处理任务是在服务器端异步完成的，甚至异步内的回调函数还可能是异步的，多层异步的回调函数可不太好写。官方就以buffer为例说明了then()的好处。</p><p>有些类继承了Promise类，而有的属性就是Promise类型的，有大量的方法返回值类型也是Promise类型的。</p><h1 id="AJS-4-2新特性"><a href="#AJS-4-2新特性" class="headerlink" title="AJS 4.2新特性"></a>AJS 4.2新特性</h1><p>\1. 支持自定义widget</p><p>官方给出的例子中，就可以利用前端框架React和AngularJS创建第三方widget。</p><p>\2. 更多widget</p><p>LayerList和Print，即图层列表和打印小部件提供了！</p><p>\3. 升级矢量瓦片图层并提供支持</p><p>\4. MapView和SceneView提供了更多的事件兹磁。</p><p>\5. 激光雷达点云数据的支持</p><p>\6. 高程查询API</p><p>\7. 允许自定义goTo()方法</p><h1 id="AJS-4-3以及更高版本未来将支持的特性"><a href="#AJS-4-3以及更高版本未来将支持的特性" class="headerlink" title="AJS 4.3以及更高版本未来将支持的特性"></a>AJS 4.3以及更高版本未来将支持的特性</h1><p>数据编辑（Editing）</p><p>绘图工具（Draw and EditTools）</p><p>支持更多的图层类型：GeoRSSLayer, KMLLayer, WMSLayer 和 WMTSLayer</p><p>支持更多的着色器（Renderer）</p><p>支持更多的小部件：BasemapGallery, Directions, FeatureTable, OverviewMap, analysis widgets etc.（卧槽最后两个要爆炸快点出啊）</p><p>支持图例控件</p><p>编辑WebMap（Writing WebMap）</p><p>其他的不太好翻译，就直接复制粘贴了：Temporal awareness: rendering and filtering/GeoEnrichment/Extensions for Operations dashboard/DataReviewer tasks</p><p>————</p><p>更为细致一些的内容：</p><p>我摘抄一些觉得重要的，其余直接参考官方的对比表吧。</p><p>graphicsUtils、栅格影像的空间参考、获取Popups的标题和内容、更多鼠标键盘事件、启用/禁用导航、修改Graphics、FeatureLayer的选择功能/编辑功能/查询附件、BookmarkItem小部件、Bookmarks小部件、ColorPiker小部件、高程滑块小部件、LayerSwipe小部件、测距小部件、透明小部件、比例尺小部件、符号选择器小部件、时间滑块小部件等。</p><h1 id="AJS-4-产品升级时间线"><a href="#AJS-4-产品升级时间线" class="headerlink" title="AJS 4 产品升级时间线"></a>AJS 4 产品升级时间线</h1><p>按照ESRI的习惯，3~4个月发布一次新版本的话，2017年能看到AJS 4.3和4.4的发布，一个是在3月，一个是在7月（AJS4.3和AJS4.4时间官方已经给出）。</p><p>//2017.03.06已发布4.3</p><p>而AJS3则会在2017年停止更新，但是仍然会提供CDN支持直到AJS4完全替代它。AJS3估计还有1-2个版本更新了，更新的内容也不是很起眼，所以完全算是一款成熟的API，剩下的只是小修小补。</p><p>看下图便知：</p><p><img src="https://images2015.cnblogs.com/blog/1097074/201702/1097074-20170213064313910-565181704.png" alt="img"></p><p>（图截取自2016年1月的文件）</p><p>图中的表格可以看出，AJS1和AJS2已经退休了，AJS3仍然在提供支持，AJS4是2016年3月发布的测试版。</p><p>AJS3将于2年后退休，而AJS4将于3年多后退休。</p><p>AJS3将在2017年1月进入成熟运行阶段。</p><p>AJS4将于2018年5月进入成熟运行阶段，截至写这篇博客时，还有大概一年多点时间看着AJS4的成长。</p><p>为什么AJS3和AJS4只差1年就退休了呢？而发布时间却差了整整4年。我猜，AJS4只是ESRI对3D的一次试水，关键还是与ArcGIS Pro的结合，以及为AJS5做准备。WebGIS已经是ESRI的重心所在，它怎么可能不发力于此呢？尤其是3D这块、大数据这块、云计算这块。</p><h1 id="我的AJS-4-2学习笔记目录"><a href="#我的AJS-4-2学习笔记目录" class="headerlink" title="我的AJS 4.2学习笔记目录"></a>我的AJS 4.2学习笔记目录</h1><p>方便查阅，点击就跳转。</p><p><a href="http://www.cnblogs.com/onsummer/p/6391528.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[0] ★AJS4.2概述、新特性、未来产品线计划与AJS笔记目录</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6363886.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[1] 显示地图</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6363910.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[2] 显示3D地图</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6363912.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[3] ★官方第二章Mapping and Views概览与解释</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6363914.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[4] 第二章其余感兴趣的例子</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6363915.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[5] 官方API大章节概述与内容转译</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6388084.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[6] goTo()地图动画</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6389054.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[7] 鹰眼（缩略图）</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6391509.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[8] 2D与3D视图同步</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6391513.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[9] 同一种视图不同数据（Map）同步</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6391517.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[10] 2D添加指北针widget、视图保存、视图padding（第二章完结）</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6399346.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[11] ★官方第五章Popups（弹窗）概览与解释</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6399628.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[12] View的弹窗（Popup）</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6399632.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[13] Layer的弹窗（PopupTemplate）</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6399651.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[14] 弹窗的位置、为弹窗添加元素</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6399654.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[15] 弹窗内容的格式与自定义格式</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6399654.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[16] 弹窗自定义功能按钮及为要素自定义按钮（第五章完结）</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6399661.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[17] ★官方第七章Searching（空间查询）概览与解释</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421297.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[18] 搜索小部件</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421459.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[19] 搜索小部件——使用更多数据源</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421488.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[20] 使用缓冲区结合Query对象进行地震点查询【重温异步操作思想】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421503.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[21] 对3D场景上的3D要素进行点击查询【Query类学习】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421507.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[22] 使用【QueryTask类】进行空间查询</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421513.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[23] 没有地图如何进行查询？【FindTask类的使用】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421517.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[24] IdentifyTask类的使用（第七章完结）</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6414565.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[25] ★官方第八章Analysis（空间查询）概览与解释</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421532.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[26] 缓冲区分析【基于geometryEngine类】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6421540.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[27] 网络分析之最短路径分析【使用RouteTask类】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6682666.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[28] 可视域分析【使用Geoprocessor】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6682674.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[29] 热点(密度)分析——以报警频率为例【使用Geoprocessor】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6682677.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[30] 点和线高程查询（第八章完结）</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6682682.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[31] (补充学习)Task类</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6685048.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[32] ★(补充学习)Graphic章概述</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6685056.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[33] ★(补充学习)Layer章概述</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6685069.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[34] (补充学习)弹窗章节再思考</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6685078.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[35] (补充学习)其他杂七杂八</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6685083.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[36] AJS4.x更高版本新特性后续学习目录</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6685088.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.2学习笔记[37] AJS类图（使用XMind制作）</a></p><p>—————— 以下为姐妹篇——————</p><p><a href="http://www.cnblogs.com/onsummer/p/6670519.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.3 与 ArcGIS Server 联动使用【地图服务】</a>   对Server的各种服务在AJS中的使用，请查看这篇的末尾。</p><p><a href="http://www.cnblogs.com/onsummer/p/6511911.html" target="_blank" rel="noopener">ArcGIS API for JavaScript 4.3 与 3.20 新特性【2017.03.06】</a></p><p><a href="http://www.cnblogs.com/onsummer/p/6819059.html" target="_blank" rel="noopener">使用ArcGIS for Server 10.4 发布NAServer</a> 顺带介绍了AJS中三个网络分析Task</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>修改Docker下的MySQL密码校验方式</title>
    <link href="https://ibrucekong.github.io/posts/2058601592/"/>
    <id>https://ibrucekong.github.io/posts/2058601592/</id>
    <published>2019-01-09T08:31:16.000Z</published>
    <updated>2019-01-09T08:31:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Docker学习：</strong></p><p>由于MySQL在版本升级后，验证加密的方式改变了，在使用Navicat连接时会报错，因此下记录解决方法。</p><a id="more"></a><p>当使用docker的MySQL时，遇到了navicat无法连接mysql的情况，给出了两种解决方法，一是升级navicat驱动，暂时跳过该方法；二是修改mysql密码校验方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 首先启动docker的mysql数据库服务</span><br><span class="line">$ docker start docker-mysql</span><br><span class="line"># 进入docker-mysql的命令行模式</span><br><span class="line">$ docker exec -it docker-mysql bash</span><br><span class="line"># 默认进入root用户下</span><br><span class="line">$ root@921c40c1c9d6:/#</span><br><span class="line"># 进入mysql命令，回车输入docker-mysql密码</span><br><span class="line">$ mysql -u root -p</span><br><span class="line"># 进入mysql数据库表</span><br><span class="line">$ use mysql;</span><br><span class="line"># 修改密码方式</span><br><span class="line">$ alter user &apos;root&apos;@&apos;%&apos; identified with mysql_native_password by &apos;your password&apos;;</span><br><span class="line"># 两次 exit 退出命令行界面</span><br></pre></td></tr></table></figure><p>使用Navicat连接mysql数据库成功。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Docker学习：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于MySQL在版本升级后，验证加密的方式改变了，在使用Navicat连接时会报错，因此下记录解决方法。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="终端" scheme="https://ibrucekong.github.io/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="Docker" scheme="https://ibrucekong.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker无法使用vim</title>
    <link href="https://ibrucekong.github.io/posts/2392351684/"/>
    <id>https://ibrucekong.github.io/posts/2392351684/</id>
    <published>2019-01-09T07:57:46.000Z</published>
    <updated>2019-01-09T07:57:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Docker学习：</strong></p><p>从Docker仓库中下载的容器，由于需要进行自定义设置，但是环境却没有提供能编辑的功能，连VIM都未提供，记录在设置MySQL时遇到没有VIM环境的解决方法。</p><a id="more"></a><p>当使用docker的MySQL时，遇到了navicat无法连接mysql的情况，给出了两种解决方法;</p><ul><li>一是升级navicat驱动；</li><li>二是修改mysql密码校验方式。</li></ul><p>当时想看看mysql容器的配置文件，结果使用<code>vim</code>都报<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash: vi: command not found</span><br></pre></td></tr></table></figure></p><p>显然是mysql基于的Linux容器没有安装vim，下面来联网安装一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 安装vim</span><br><span class="line">$ apt update</span><br><span class="line">$ apt install vim</span><br></pre></td></tr></table></figure></p><p>然后可以愉快的编辑了。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Docker学习：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从Docker仓库中下载的容器，由于需要进行自定义设置，但是环境却没有提供能编辑的功能，连VIM都未提供，记录在设置MySQL时遇到没有VIM环境的解决方法。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="终端" scheme="https://ibrucekong.github.io/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="Docker" scheme="https://ibrucekong.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Splice和Slice引发的血案</title>
    <link href="https://ibrucekong.github.io/posts/2464790768/"/>
    <id>https://ibrucekong.github.io/posts/2464790768/</id>
    <published>2019-01-08T03:41:24.000Z</published>
    <updated>2019-01-08T03:41:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一字千里，何况是在代码里：</strong></p><p>生活中一字之差，意思能千差万别，在代码中差了一字，运行结果更是差之千里。</p><a id="more"></a><p>在项目中遇到了对数据进行Copy，实现浅拷贝想到了用Slice，但是却错写成了Splice，引发了一系列问题。</p><p>下面借花献佛，讲解一下slice和splice的区别：</p><blockquote><p> slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素。</p><p>注意：该方法不会改变原数组，而是返回一个子数组，如果想删除数组中的一段元素，应该使用Array.splice()方法。</p><p>start参数：必须，规定从何处开始选取，如果为负数，规定从数组尾部算起的位置，-1是指最后一个元素。<br>end参数：可选（如果该参数没有指定，那么切分的数组包含从start倒数组结束的所有元素，如果这个参数为负数，那么规定是从数组尾部开始算起的元素）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.slice(<span class="number">1</span>));<span class="comment">//[2,3,4,5]  选择序列号从1到最后的所有元素组成的新数组。</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.slice(<span class="number">1</span>,<span class="number">3</span>))<span class="comment">//[2,3]  不包含end，序列号为3的元素</span></span><br></pre></td></tr></table></figure><blockquote><p>splice()：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）</p><p>splice（index,howmany,item1,…itemX）</p><p>index参数：必须，整数，规定添加或者删除的位置，使用负数，从数组尾部规定位置。<br>howmany参数：必须，要删除的数量，如果为0，则不删除项目。<br>tem1,…itemX参数：可选，向数组添加的新项目。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.splice(<span class="number">2</span>,<span class="number">1</span>,<span class="string">"hello"</span>));<span class="comment">//[3]  返回的新数组</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);<span class="comment">//[1, 2, "hello", 4, 5]  改变了原数组</span></span><br></pre></td></tr></table></figure><p>原文：<a href="https://blog.csdn.net/xiaoqingpang/article/details/79108005" target="_blank" rel="noopener">https://blog.csdn.net/xiaoqingpang/article/details/79108005</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;一字千里，何况是在代码里：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生活中一字之差，意思能千差万别，在代码中差了一字，运行结果更是差之千里。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="编程语言" scheme="https://ibrucekong.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="心得" scheme="https://ibrucekong.github.io/tags/%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>再见,我的青春 ——《请回答1988》</title>
    <link href="https://ibrucekong.github.io/posts/139445933/"/>
    <id>https://ibrucekong.github.io/posts/139445933/</id>
    <published>2018-12-13T10:34:07.000Z</published>
    <updated>2019-01-31T05:20:50.355Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/1988.jpg" alt=""><br></div><p><strong>暗恋终究有风险,但愿青春无悔：</strong></p><p>提起韩剧,很多人下意识会认为是无脑爱情剧,豆瓣评分也会很低,特别是对于只看美剧的男生来讲,漫威、DC的烧钱特效,好不过瘾,看韩剧简直就是天方夜谭。但是对于《请回答》系列的《请回答1988》,豆瓣评分及其之高,堪称神剧,不信来刷,我在第一集等你。</p><a id="more"></a><div style="text-align: center;"><img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/1988-douban.png" alt="1988"></div><p>《请回答1988》当前的豆瓣评分是<a href="https://movie.douban.com/subject/26302614/" target="_blank" rel="noopener">9.7</a>,该剧在官方定义中是一部爱情喜剧,而多数人在刷剧时,却硬生生的把喜剧刷成了泪目剧,每一集的感动时间就像美剧《Supernatural》中兄弟两个的感动时间一样(Hey, 美人丁)。此剧与2015年11月6日在韩国上映,是一部距离我们比较近的韩剧,而不是那种被冠以经典二字的老剧,不像《越狱》《行尸走肉》《权力的游戏》那么早就面世那么早,但是却同样拥有着巨大魔力俘获了众多人的心。</p><div style="text-align: center;"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/1988-all.png" alt="1988"></div><p>首次接触《请回答1988》是在2017年12月份,对于韩剧中的细腻(腻歪),不如美剧宏大场面看的那么爽、那么疯狂,而我又对剧很挑剔,看的美剧要么经典,要么上当时的TOP,所以对于韩剧稍微有点不待见的节奏。可是,看了《请回答1988》第一集过后,深陷其中,引人入胜,无法自拔。</p><p>最近用了半个月的时间二刷,在下班之余、睡前(害的熬夜)刷完,看的很过瘾。</p><div style="text-align: center;font-weight: bold;font-size: 1.5rem; color: red"><br>    以下是豆瓣相关链接<br></div><br>对于好剧好电影,在刷完之后总会去点评网站细细品味在观看时未能察觉到的、未能留意到的细节。下面从国内的豆瓣上摘取了一些经典评论,如果喜欢,并且不怕剧透的可以去品读下。<br><br><blockquote><a href="https://movie.douban.com/review/7743563/" target="_blank" rel="noopener">那一场无疾而终的暗恋-88恋爱解析–有片叶子(作者)</a><br><br>   1988对我来说不是一个爱情剧，它理所当然的应该是一个怀旧青春剧。<br>   在青春中，爱情只是其中的一部分，甚至在青春的爱情里，闪光的不是结局，而是那青涩懵懂的过程。<br><br>   18集毫无疑问是属于正焕的，雨中的独白，错过的时机，自我剖析的悔恨，正焕的爱情在独白中已经交代，而后餐厅借戒指的表白……<br></blockquote><br><br>看来大家的入笔都是从狗焕开始,毕竟青春爱情剧还是要有感情线,在这一个没有男主的剧中狗焕却是隐形的贯穿其中,狗焕的爱情从刚一开始到红灯亮起时就注定了暗恋风险太大,想要追悔依然天不助。<br><br><blockquote><a href="https://movie.douban.com/review/7676474/" target="_blank" rel="noopener">细数1988中的事件背景和人物 不断更新–作者(小柒)</a><br><br>   1988完结了，因为正焕不是最后的老公纷纷去打1分的你们，你们就忘记了刚开始看这部剧的时候给你们自己带来的感动了吗?<br></blockquote><br><br>答主开头就为该剧抱不平(都9.7分了,还不满意…是,不满意),表示为狗焕不是最后的老公而打1分的人的愤慨,然后晒出狗焕和德善剧中无缘,但现实却摆脱了狗的称谓,勇敢的向德善发起爱情宣言。并对每一集进行了剖析,指出每一集中的事件的背景和人物,对于如此用心良苦的编剧,点赞！<br><br><blockquote> <a href="https://movie.douban.com/review/7754487/" target="_blank" rel="noopener">神剧请回答1988埋的梗你看懂了多少–凰Suk(作者)</a><br><br>   其实个人并不建议想看少女心和爱情线的小伙伴们看1988，如果想看爱情喜剧那你大可以去找洪氏姐妹，想看成功商业爱情剧去找金编剧，而请回答系列，玩儿的一直是情怀，相比97和94，88表达的东西更多更杂也更贴近生活，这也是为什么88在韩网和内地平台上分数不如97和94，因为大部分人都想单纯地看看爱情线，冒冒粉红色泡泡。<br><br>   开始对剧中的梗进行分析……<br></blockquote><br><br>该答主剖析的梗很到位,开头先给出了看此剧的态度,说少女❤和爱情线的小伙不建议看,我是不赞同的,对于美好的事物每个人都有欣赏的权利,尽管是(单身)狗。<br><br><blockquote><a href="https://movie.douban.com/review/7741010/" target="_blank" rel="noopener">最后幸好是你–青木(作者)</a><br><br>   作为2015年韩国最受期待的现象级大剧《请回答1988》落下了帷幕。“正八”党没等来逆转，德善还是属于崔泽。这样的结局一度让“焕善党”把《88》推上了风口浪尖，他们不明白为什么前面的正牌男主到了后面基本沦为了男四，前面的铺垫，前面的伏笔，前面的勾勒，到后来连交代都省去喂了狗。于是质疑，诋毁就开始铺天盖地。<br>   我不属于“泽善粉”也不属于“焕善粉”，不过说实话最开始的时候，按照《请回答XX》这个系列的尿性，基本大家都认为老公应该是狗焕，我也这么认为，心底里最大的期望也不过是不要太虐阿泽，毕竟阿泽几乎是用出了下棋以外所有的时间和生命去爱着德善。但不知道为何心底里总有德善和阿泽在一起的希冀..<br></blockquote><br><br>答主首先喊出了弹幕中出现最多的两个党派“狗善党”、“泽善粉”,并对编剧把狗焕”丑帅”的人物刻画的轻车熟路表达了赞许。<br><br>说到党派站队,我还是倾向于站“焕善党”的,可能我是从狗焕的身上看到了太多自己的影子,认同感油然而生,勿拍砖。特别在最后,德善推门进来看到一群小伙伴再看英雄本色时,恍然如梦,顿时一怔,想到狗焕,若此为梦,可还木讷！<br><br>最后,特别要感谢一下《请回答1988》的编剧,简直神人,对人物内心的拿捏恰到好处;再者感谢剧中的每一位演员,神剧情没有演员的完美演绎也不会称为神剧;然后感谢那些还在为此剧疯狂的人,因为物以类聚,人以群分,对于好剧的感染力使得大家同在一个”屋檐下”。<br><br>从第一集又看到第一集,希望下一次的第一集有你一起看,我在第一集等你。<br><br><strong>断断续续的续…</strong><br><br><blockquote>搞怪的不是红绿灯，不是时机，而是我数不清的犹豫<br><br> “哎一古，成社长。哎一古，金社长。”<br><br> 德善的抖腿舞，啊哈哈<br><br> 三兄弟的《消防车》<br><br>咩～咩～咩～～～<br><br>冬天最温馨的事就是和《请回答》一起度过…<br><br>把最好的都给了朋友、兄弟和国家，狗焕你留下了啥…<br><br>男生站”狗善党“（看到自己的影子），女生站”泽善党“（女生的看法）<br><br>啊，1988的后劲太TM大了…<br><br>大人们只是在忍，只是在忙着大人们的事，只是在用故作坚强来承担年龄的重任，大人们也会疼。<br><br>永远没有顾客的凤凰堂，确实双门洞的最大赢者。<br><br>1988是一部后劲很大的剧。<br><br>1988里面没有坏人，如果非要说有，那就是时光。<br><br>娃娃鱼懂所有人，所有人却不懂娃娃鱼。<br><br></blockquote><br>歌单很多，大家网上找找&gt;&gt;&gt;&gt;<a href="https://music.163.com/#/playlist?id=2531631787" target="_blank" rel="noopener">〖请回答1988〗这几首就好了</a><br><br><br><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;div style=&quot;text-align: center;padding: 0; margin: 0;&quot;&gt;&lt;br&gt;    &lt;img class=&quot;wechat-qrcode&quot; src=&quot;https://coding.net/u/ibrucekong/p/images/git/raw/master/1988.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;暗恋终究有风险,但愿青春无悔：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;提起韩剧,很多人下意识会认为是无脑爱情剧,豆瓣评分也会很低,特别是对于只看美剧的男生来讲,漫威、DC的烧钱特效,好不过瘾,看韩剧简直就是天方夜谭。但是对于《请回答》系列的《请回答1988》,豆瓣评分及其之高,堪称神剧,不信来刷,我在第一集等你。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="韩剧" scheme="https://ibrucekong.github.io/tags/%E9%9F%A9%E5%89%A7/"/>
    
      <category term="请回答1988" scheme="https://ibrucekong.github.io/tags/%E8%AF%B7%E5%9B%9E%E7%AD%941988/"/>
    
  </entry>
  
  <entry>
    <title>吾爱破解论坛2018年11月11日开放注册通知</title>
    <link href="https://ibrucekong.github.io/posts/3256505474/"/>
    <id>https://ibrucekong.github.io/posts/3256505474/</id>
    <published>2018-10-30T03:10:05.000Z</published>
    <updated>2018-10-30T03:10:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>吾爱破解论坛注册喜讯：</strong><br>吾爱开放注册又又来了，此次是2018年第三次开放注册，在今年前两次未能成功上车的小伙伴，这次可要抓住了，又是正值周末，又是天时地利人和，赶快整理好自己的注册资料，期待“11.11”的到来吧。</p><a id="more"></a><div style="text-align: center;font-weight: bold;font-size: 2rem; color: red"><br>    喜讯、喜讯、喜讯<br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    <span>吾爱破解论坛开通开放注册</span><br>    <span>2018年11月11日12:00-14:00和20:00-22:00</span><br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem;padding-top: 0;margin-top: 0;height: 106px;line-height: 106px"><a href="https://www.52pojie.cn/?fromuid=575811" style="text-align: center;" target="_blank" rel="noopener">我要吾爱</a></div><br><div></div><p><strong><em>注册注意事项：</em></strong></p><ol><li>吸取上次上车失败的教训！！！</li><li>注意不要错过注册时间</li><li>认真读注册须知（需要等10分钟）</li><li>事先把注册信息写在本子或word里（独一无二的邮箱和用户名） <a href="https://www.52pojie.cn/misc.php?mod=faq&amp;action=faq&amp;id=15&amp;messageid=16" target="_blank" rel="noopener">需要准备什么</a></li><li>耐心检查填写内容（看是否都符合要求）</li><li>邮箱验证阶段，有的要到邮箱的垃圾箱中查看有没有验证邮件，而有的邮箱则需要设置白名单才能收到验证邮件 <a href="https://www.52pojie.cn/thread-98585-1-1.html" target="_blank" rel="noopener">帮助</a></li><li>提醒一下，在注册成功后，要记得保持活跃度哦，不要只在官网签到，还要有互动（发帖、回复），不然会被清理的。</li></ol><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    祝愿小伙伴们都能获得自己的吾爱账号！<br></div><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;吾爱破解论坛注册喜讯：&lt;/strong&gt;&lt;br&gt;吾爱开放注册又又来了，此次是2018年第三次开放注册，在今年前两次未能成功上车的小伙伴，这次可要抓住了，又是正值周末，又是天时地利人和，赶快整理好自己的注册资料，期待“11.11”的到来吧。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="活动" scheme="https://ibrucekong.github.io/tags/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="吾爱破解" scheme="https://ibrucekong.github.io/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>济南的中秋</title>
    <link href="https://ibrucekong.github.io/posts/4186109665/"/>
    <id>https://ibrucekong.github.io/posts/4186109665/</id>
    <published>2018-09-21T08:39:57.000Z</published>
    <updated>2018-09-21T08:39:57.000Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/jinan-mid-autumn.png" alt=""><br></div><a id="more"></a><p><br><br><br><br><br></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <span style="font-size: 3rem;color: #696969;background-image: -webkit-linear-gradient(92deg, #d4290e, #ff71fb);-webkit-background-clip: text;-webkit-text-fill-color: transparent;-webkit-animation: hue 60s infinite linear;">中秋一人，亦可三人成酒！</span><br></div><p><br></p><p><br></p><p><br></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;div style=&quot;text-align: center;padding: 0; margin: 0;&quot;&gt;&lt;br&gt;    &lt;img class=&quot;wechat-qrcode&quot; src=&quot;https://coding.net/u/ibrucekong/p/images/git/raw/master/jinan-mid-autumn.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="中秋" scheme="https://ibrucekong.github.io/tags/%E4%B8%AD%E7%A7%8B/"/>
    
      <category term="济南" scheme="https://ibrucekong.github.io/tags/%E6%B5%8E%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>BIMserver入门笔记 - 02登录及模型展示</title>
    <link href="https://ibrucekong.github.io/posts/3230248873/"/>
    <id>https://ibrucekong.github.io/posts/3230248873/</id>
    <published>2018-09-17T05:35:54.000Z</published>
    <updated>2018-09-17T05:35:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>BIMserver登录及模型展示：</strong><br>BIMserver资料较少，没有成熟的接口文档，没有成熟的示例程序，但是BIMserver为我们提供了一个运维程序、示例数据，在Github中的<a href="https://github.com/opensourceBIM" target="_blank" rel="noopener">opensourceBIM</a>这个开源组织，给开发者提供了不少源码级的学习内容。从运维程序中我们可以梳理出BIMserver的执行过程，方便我们二次开发。</p><a id="more"></a><ol><li><p><a href="../3869274485/">BIMserver入门笔记 - 01环境搭建、数据导入及预览</a></p></li><li><p>BIMserver入门笔记 - 02登录及模型展示</p></li></ol><p>从上一节我们了解了BIMserver的安装配置和运维的使用，但是在项目中我们不可能去直接用BIMserver的运行界面，需要我根据自己的项目需求来自定义自己的BIM展示界面和功能，所以我们就要从开发者角度去审视BIMserver。</p><h3 id="准备什么"><a href="#准备什么" class="headerlink" title="准备什么"></a>准备什么</h3><p>既然是开发者，前端就至少要懂前端的，后端至少要懂后端的，最好两者都熟悉。准备工作除了能搭建起BIMserver环境，还要有以下的几个特点（建议）：</p><ul><li>一件趁手的兵器——IDE（前端就WebStorm咯，涉及到后台就IDEA咯）</li><li>一个性能不错的本子——内存和CPU性能要好，关键还要有不错的显卡</li></ul><h3 id="需要什么"><a href="#需要什么" class="headerlink" title="需要什么"></a>需要什么</h3><ul><li><p>一个敢于钻研的劲头</p></li><li><p>一个不服输、有韧性的心</p></li></ul><p><em>新兴的技术或者前沿的技术，必要要耐得住性子</em></p><p>除了精神上的鼓舞，我还要掌握一些查资料的技能，特别是在对BIMserver二次开发中，资料少之又少，整个腾讯就两个群（一个群人数不超过一只手的手指头数）。另外官方也没有提供<code>Step by step</code>和接口文档，示例代码也是少的可怜，Stack Overflow、CSDN和博客园中资料也是凤毛麟角，所以二次开发的参考资料还是去查看官方的<a href="https://github.com/opensourceBIM/BIMserver/tree/parent-1.5.88/PluginBase/src/org/bimserver/shared/interfaces" target="_blank" rel="noopener">接口源码</a>，比如最常用的<a href="https://github.com/opensourceBIM/BIMserver/blob/parent-1.5.88/PluginBase/src/org/bimserver/shared/interfaces/ServiceInterface.java" target="_blank" rel="noopener">接口源码</a>。</p><h3 id="万里长征第一步"><a href="#万里长征第一步" class="headerlink" title="万里长征第一步"></a>万里长征第一步</h3><p>万事开头难，先起个<a href="https://github.com/ibrucekong/hellobim/" target="_blank" rel="noopener">Hellobim</a>吧！</p><h4 id="设计布局"><a href="#设计布局" class="headerlink" title="设计布局"></a>设计布局</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"maincontainer"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"topsection"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hellobim<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"contentwrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colmid"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colright"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"col1wrap"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"col1pad"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"viewerContainer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"treeContainer"</span> <span class="attr">class</span>=<span class="string">"bimsurfer-static-tree"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dataContainer"</span> <span class="attr">class</span>=<span class="string">"bimsurfer-metadata"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="变量配置"><a href="#变量配置" class="headerlink" title="变量配置"></a>变量配置</h4><p>由于JavaScript代码比较多，所以拆分成了三部分，一个是变量配置模块，一个是登录模块，一个是模型加载展示。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> projectName = <span class="string">'test1'</span>; <span class="comment">// address地址下的BIMserver服务中必须有test1项目，而且还要有模型</span></span><br><span class="line"><span class="keyword">var</span> address = <span class="string">"http://192.168.1.116:8082"</span>; <span class="comment">// 这三个是在安装BIMserver时配置的地址、账户和密码</span></span><br><span class="line"><span class="keyword">var</span> account = <span class="string">"admin@163.com"</span>;</span><br><span class="line"><span class="keyword">var</span> password = <span class="string">"1234567890"</span>;</span><br><span class="line"><span class="keyword">var</span> token, poid, lastRevisionId; <span class="comment">// 这三个是在模型加载时需要用到的</span></span><br><span class="line"><span class="keyword">var</span> metadata; <span class="comment">// 这是右侧元数据</span></span><br></pre></td></tr></table></figure><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录代码</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">loadFromBimserver</span>(<span class="params">address, username, password, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> BimServerClient(address);</span><br><span class="line">    client.init(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      client.login(username, password, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 根据项目名称获取该项目的模型场景</span></span><br><span class="line">        client.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getAllProjects"</span>, &#123;</span><br><span class="line">          onlyTopLevel: <span class="literal">true</span>,</span><br><span class="line">          onlyActive: <span class="literal">true</span></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">projects</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> totalFound = <span class="number">0</span>;</span><br><span class="line">          projects.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">project</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (project.name === projectName) &#123;</span><br><span class="line">              token = client.token;</span><br><span class="line">              poid = project.oid;</span><br><span class="line">              lastRevisionId = project.lastRevisionId;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.error(error);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    loadFromBimserver(address, account, password);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="模型加载及展示"><a href="#模型加载及展示" class="headerlink" title="模型加载及展示"></a>模型加载及展示</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载模型并展示</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">"bimsurfer/src/BimSurfer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/BimServerModelLoader"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/StaticTreeRenderer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/MetaDataRenderer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/lib/domReady!"</span>],</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">BimSurfer, BimServerModelLoader, StaticTreeRenderer, MetaDataRenderer</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">processBimSurferModel</span>(<span class="params">bimSurferModel</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      bimSurferModel.getTree().then(<span class="function"><span class="keyword">function</span> (<span class="params">tree</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> domtree = <span class="keyword">new</span> StaticTreeRenderer(&#123;</span><br><span class="line">          domNode: <span class="string">'treeContainer'</span></span><br><span class="line">        &#125;);</span><br><span class="line">        domtree.addModel(&#123;<span class="attr">name</span>: <span class="string">""</span>, <span class="attr">id</span>: lastRevisionId, <span class="attr">tree</span>: tree&#125;);</span><br><span class="line">        domtree.build();</span><br><span class="line">        metadata = <span class="keyword">new</span> MetaDataRenderer(&#123;</span><br><span class="line">          domNode: <span class="string">'dataContainer'</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        metadata.addModel(&#123;<span class="attr">name</span>: <span class="string">""</span>, <span class="attr">id</span>: lastRevisionId, <span class="attr">model</span>: bimSurferModel&#125;);</span><br><span class="line"></span><br><span class="line">        bimSurfer.on(<span class="string">"selection-changed"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">selected</span>) </span>&#123;</span><br><span class="line">          domtree.setSelected(selected, domtree.SELECT_EXCLUSIVE);</span><br><span class="line">          metadata.setSelected(selected);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        domtree.on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">oid, selected</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (selected.length) &#123;</span><br><span class="line">            bimSurfer.viewFit(&#123;</span><br><span class="line">              ids: selected,</span><br><span class="line">              animate: <span class="literal">true</span></span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">          bimSurfer.setSelection(&#123;</span><br><span class="line">            ids: selected,</span><br><span class="line">            clear: <span class="literal">true</span>,</span><br><span class="line">            selected: <span class="literal">true</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bimSurfer = <span class="keyword">new</span> BimSurfer(&#123;</span><br><span class="line">      domNode: <span class="string">"viewerContainer"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.bimSurfer = bimSurfer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bimServerClient = <span class="keyword">new</span> BimServerClient(address, <span class="literal">null</span>);</span><br><span class="line">    bimServerClient.init(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      bimServerClient.setToken(token, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> modelLoader = <span class="keyword">new</span> BimServerModelLoader(bimServerClient, bimSurfer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> models = &#123;&#125;; <span class="comment">// roid -&gt; Model</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> nrProjects;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadModels</span>(<span class="params">models, totalBounds</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> center = [</span><br><span class="line">            (totalBounds.min[<span class="number">0</span>] + totalBounds.max[<span class="number">0</span>]) / <span class="number">2</span>,</span><br><span class="line">            (totalBounds.min[<span class="number">1</span>] + totalBounds.max[<span class="number">1</span>]) / <span class="number">2</span>,</span><br><span class="line">            (totalBounds.min[<span class="number">2</span>] + totalBounds.max[<span class="number">2</span>]) / <span class="number">2</span></span><br><span class="line">          ];</span><br><span class="line"></span><br><span class="line">          <span class="keyword">var</span> globalTransformationMatrix = [</span><br><span class="line">            <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">            <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">            <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">            -center[<span class="number">0</span>], -center[<span class="number">1</span>], -center[<span class="number">2</span>], <span class="number">1</span></span><br><span class="line">          ];</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> roid <span class="keyword">in</span> models) &#123;</span><br><span class="line">            <span class="keyword">var</span> model = models[roid];</span><br><span class="line">            modelLoader.setGlobalTransformationMatrix(globalTransformationMatrix);</span><br><span class="line">            modelLoader.loadFullModel(model).then(<span class="function"><span class="keyword">function</span> (<span class="params">bimSurferModel</span>) </span>&#123;</span><br><span class="line">              processBimSurferModel(bimSurferModel);</span><br><span class="line">              <span class="comment">//填充下拉框</span></span><br><span class="line">              getModelOidAndName(bimSurferModel);</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getModelOidAndName</span>(<span class="params">thisModel</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> modelObj = thisModel.apiModel.objects;</span><br><span class="line">          <span class="built_in">Object</span>.keys(modelObj).forEach(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (modelObj[key].object.hasChildren === <span class="literal">undefined</span>) &#123;</span><br><span class="line">              <span class="keyword">var</span> option = <span class="built_in">document</span>.createElement(<span class="string">"option"</span>);</span><br><span class="line">              $(option).val(key);</span><br><span class="line">              <span class="keyword">if</span> (modelObj[key].object.Name === <span class="literal">undefined</span> || modelObj[key].object.Name === <span class="string">""</span>) &#123;</span><br><span class="line">                $(option).text(key);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(option).text(modelObj[key].object.Name);</span><br><span class="line">              &#125;</span><br><span class="line">              $(<span class="string">'#select'</span>).append(option);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getAllRelatedProjects"</span>, &#123;<span class="attr">poid</span>: poid&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">projects</span>) </span>&#123;</span><br><span class="line">          nrProjects = projects.length;</span><br><span class="line">          <span class="keyword">var</span> totalBounds = &#123;</span><br><span class="line">            min: [<span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE],</span><br><span class="line">            max: [-<span class="built_in">Number</span>.MAX_VALUE, -<span class="built_in">Number</span>.MAX_VALUE, -<span class="built_in">Number</span>.MAX_VALUE]</span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line">          projects.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">project</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (project.lastRevisionId !== <span class="number">-1</span>) &#123;</span><br><span class="line">              <span class="comment">//lastRevisionId</span></span><br><span class="line">              bimServerClient.getModel(project.oid, project.lastRevisionId, project.schema, <span class="literal">false</span>, <span class="function"><span class="keyword">function</span> (<span class="params">model</span>) </span>&#123;</span><br><span class="line">                models[project.lastRevisionId] = model;</span><br><span class="line"></span><br><span class="line">                bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getModelMinBounds"</span>, &#123;<span class="attr">roid</span>: project.lastRevisionId&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">minBounds</span>) </span>&#123;</span><br><span class="line">                  bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getModelMaxBounds"</span>, &#123;<span class="attr">roid</span>: project.lastRevisionId&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">maxBounds</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.x &lt; totalBounds.min[<span class="number">0</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">0</span>] = minBounds.x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.y &lt; totalBounds.min[<span class="number">1</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">1</span>] = minBounds.y;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.z &lt; totalBounds.min[<span class="number">2</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">2</span>] = minBounds.z;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.x &gt; totalBounds.max[<span class="number">0</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">0</span>] = maxBounds.x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.y &gt; totalBounds.max[<span class="number">1</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">1</span>] = maxBounds.y;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.z &gt; totalBounds.max[<span class="number">2</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">2</span>] = maxBounds.z;</span><br><span class="line">                    &#125;</span><br><span class="line">                    nrProjects--;</span><br><span class="line">                    <span class="keyword">if</span> (nrProjects === <span class="number">0</span>) &#123;</span><br><span class="line">                      loadModels(models, totalBounds);</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              nrProjects--;</span><br><span class="line">              <span class="keyword">if</span> (nrProjects === <span class="number">0</span>) &#123;</span><br><span class="line">                loadModels(models, totalBounds);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><p>在index.html中右击，选择 <code>Run &#39;index.html&#39;</code>或者Ctrl + Shift + F10启动页面，效果如图：</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-hellobim-01.png" alt=""></p><p>点击任意部件，部件高亮并且可以查看部件的信息。</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-hellobim-02.png" alt=""></p><p><em>界面丑，待优化，至少模型加载并展示了嘛</em></p><p><em>能力有限，如有错误或疑问请在评论区指出，谢谢。</em></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;BIMserver登录及模型展示：&lt;/strong&gt;&lt;br&gt;BIMserver资料较少，没有成熟的接口文档，没有成熟的示例程序，但是BIMserver为我们提供了一个运维程序、示例数据，在Github中的&lt;a href=&quot;https://github.com/opensourceBIM&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;opensourceBIM&lt;/a&gt;这个开源组织，给开发者提供了不少源码级的学习内容。从运维程序中我们可以梳理出BIMserver的执行过程，方便我们二次开发。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="BIM" scheme="https://ibrucekong.github.io/tags/BIM/"/>
    
      <category term="BIMserver" scheme="https://ibrucekong.github.io/tags/BIMserver/"/>
    
  </entry>
  
</feed>
