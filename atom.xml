<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ibrucekong</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ibrucekong.github.io/"/>
  <updated>2019-04-24T07:15:36.000Z</updated>
  <id>https://ibrucekong.github.io/</id>
  
  <author>
    <name>ibrucekong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[3] 官方第二章Mapping and Views概览与解释</title>
    <link href="https://ibrucekong.github.io/posts/814364469/"/>
    <id>https://ibrucekong.github.io/posts/814364469/</id>
    <published>2019-04-24T07:15:36.000Z</published>
    <updated>2019-04-24T07:15:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363912.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363912.html</a></strong></p><hr><p>目录如下：</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/3-1.png" alt="img"></p><p>连接：<a href="https://developers.arcgis.com/javascript/latest/sample-code/scene-local/index.html" target="_blank" rel="noopener">第二章 Mapping and Views</a></p><p>根据本人体会，</p><p>【这一章节主要是介绍地图（Map）和视图（View）的。】</p><p>其中，Get started with MapView（2D）和 Get started with SceneView（3D）两节介绍了如何加载ESRI服务器或者开源的地图和视图。这两节介绍了很重要的概念：Map和View，Map即地理数据，而View代表视图。</p><p><em>View主要有两种，MapView和SceneView，前者是2D的，而后者是3D的，区别就是投影到哪里，前者投影到平面上，而后者投影到球体上，类似ArcScene和ArcGlobe。</em></p><p><code>Load a WebMap</code>和<code>Load a WebScene</code>是加载某服务器上的Web地图或3D场景，官方的意思是支持ArcGIS Online or ArcGIS for Portal item导入为WebMap或WebScene，唯一的识别码就是ID。</p><p><code>Save a WebScene</code>，顾名思义，保存场景，几行代码即可保存场景（可以覆盖保存）。</p><p><code>WebScene slides</code>，这小节演示了给当前场景拍个照片然后存起来，需要的时候点击这个div（图片）即可读档。</p><p><code>Create a local scene</code>，这个不是很懂，貌似是把两个以上的scene叠加，形成一个新的，然后添加到SceneView中。</p><p><code>Map rotation</code>，这小节给2D地图（Map）添加了指北针小工具（wigdet？），允许2D地图旋转，可以用指北针恢复正北方向。</p><p><code>Using goTo() in a SceneView</code>，这小节演示了地图缩放动画。</p><p><code>Overview map</code>，这小节演示了如何使用鹰眼功能（其实就是2DMap和3DScene同步）。</p><p><code>View padding</code>，这小节演示了如何移动View的位置（例如需要一个面板在右边的时候，可以把地图的中心向左移动一些）</p><p><code>Custom basemap</code>，这小节使用了Basemap这个类，创造了Basemap实例后就可以把Map对象的基础数据替换成自己的数据了。</p><p><code>Synchronize two views</code>，这小节演示了如何把3D的SceneView和2D的MapView同步显示。</p><p><code>Swap web maps in the same view</code>，这小节演示了同一个view（如MapView）下，不同地理数据的切换（坐标不变）。例子：度娘地图中卫星地图和街道图的切换。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[2] 显示3D地图</title>
    <link href="https://ibrucekong.github.io/posts/1049908487/"/>
    <id>https://ibrucekong.github.io/posts/1049908487/</id>
    <published>2019-04-24T03:25:12.000Z</published>
    <updated>2019-04-24T03:25:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363910.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363910.html</a></strong></p><hr><p>3D地图又叫场景。</p><p>由上一篇可知，</p><p>require入口函数的第一个参数是字符串数组</p><p><code>[&quot;esri/Map&quot;, &quot;esri/views/MapView&quot;, &quot;dojo/domReady!&quot;]</code></p><p>这里，MapView就是2D的地图视图。</p><p>所以，将2D地图改为3D地图，其实很简单，只需要把这个字符串数组的第二个引用改为”esri/views/SceneView”</p><p>然后在第二个参数中修改对应的view代码即可。</p><p>下面给出第二个参数（函数）的新代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">Map, SceneView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span>, </span><br><span class="line">    ground: <span class="string">"world-elevation"</span></span><br><span class="line">  &#125;);<span class="comment">//仍然使用osm基础地图</span></span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> SceneView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>,     </span><br><span class="line">    map: map,               </span><br><span class="line">    scale: <span class="number">50000000</span>,         </span><br><span class="line">    center: [<span class="number">113.5</span>, <span class="number">30</span>] </span><br><span class="line">  &#125;);<span class="comment">//比例尺为1：5000万</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里可以发现，view对象不是MapView类了，而是SceneView类。</p><p>而且Map对象构造函数内出现了一个新的东西——ground。</p><p>下面是ground的资料：</p><p>ground属性是表面数据，它可以是Ground类的实例。</p><p>下面是SceneView类的资料：</p><p>SceneView与MapView同样继承自View类。<a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html" target="_blank" rel="noopener">SceneView</a></p><p>同样的，给出完整的html代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span><br><span class="line">&lt;title&gt;Get started <span class="keyword">with</span> SceneView - Create a <span class="number">3</span>D map&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">  html, body, #viewDiv &#123;</span></span><br><span class="line"><span class="regexp">    padding: 0;</span></span><br><span class="line"><span class="regexp">    margin: 0;</span></span><br><span class="line"><span class="regexp">    height: 100%;</span></span><br><span class="line"><span class="regexp">    width: 100%;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://js.arcgis.com/4.2/esri/css/main.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://js.arcgis.com/4.2/"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">require</span>([</span><br><span class="line">  <span class="string">"esri/Map"</span>,</span><br><span class="line">  <span class="string">"esri/views/SceneView"</span>,</span><br><span class="line">  <span class="string">"dojo/domReady!"</span></span><br><span class="line">], <span class="function"><span class="keyword">function</span>(<span class="params">Map, SceneView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span>,</span><br><span class="line">    ground: <span class="string">"world-elevation"</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> SceneView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>, </span><br><span class="line">    map: map, </span><br><span class="line">    scale: <span class="number">50000000</span>, </span><br><span class="line">    center: [<span class="number">113.5</span>, <span class="number">30</span>]  </span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"viewDiv"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>运行成功大概是这样的（稍微修改了比例尺为15万，坐标为114.3和30.5没错就是武汉）</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/2-1.png" alt="img"></p><hr><p>​      ps：如果感觉像平面的话可以把比例尺调回500w或者1000w，地面起伏不太明显可以调basemap为别的地图，坐标定位到山区。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API for JavaScript 4.2学习笔记[1] 显示地图</title>
    <link href="https://ibrucekong.github.io/posts/161947747/"/>
    <id>https://ibrucekong.github.io/posts/161947747/</id>
    <published>2019-04-24T02:52:30.000Z</published>
    <updated>2019-04-24T02:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ArcGIS API for JavaScript 4.x：</strong><br>从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。</p><a id="more"></a><p>本系列是转载至博客园原创作者-<a href="https://home.cnblogs.com/u/onsummer/" target="_blank" rel="noopener">秋意正寒</a>-致敬!</p><p><strong>原地址：<a href="https://www.cnblogs.com/onsummer/p/6363886.html" target="_blank" rel="noopener">https://www.cnblogs.com/onsummer/p/6363886.html</a></strong></p><hr><p>ArcGIS API for JavaScript 4.2直接从官网的Sample中学习，API Reference也是从官网翻译理解过来，鉴于网上截稿前还没有人发布过4.2的学习笔记，我就试试吧。</p><p>什么是ArcGIS API for JS？这里就不多介绍了，最关键的一点是4.x版本与3.x版本的变化，按官方的意思是重新写了底层。</p><p>笔记中规定：</p><p>ArcGIS API for JavaScript简称AJS</p><p>使用CDN（即不配置本地环境）进行测试开发</p><p>其余根据需要进行修改、增删。</p><hr><p>要将地图显示在html页面上，那就要有一个块元素承接并执行渲染。</p><p>本节以最简单、最低需求的2D地图显示为例。</p><p>首先在html页面中肯定要有一个div，官方命名为“viewDiv”。然后就在js代码中对这个div进行输出即可。先贴出js代码的骨架部分（展开即可查看代码）</p><p>这部分代码将位于4.2的js文件引用之下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span></span><br><span class="line">(</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"esri/Map"</span>,</span><br><span class="line">      <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">      <span class="string">"dojo/domReady!"</span></span><br><span class="line">    ] ,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">Map, MapView</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//你的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>现在对require入口函数的第一个参数（字符串数组）中的三个字符串的含义进行解释。</p><p>这三个字符串与C#中的using命名空间、C++中的include头文件、Java中的#import类似，是对第二个参数所需要的功能进行引用。</p><p>具体为什么是这三个字符串，后面再解释。</p><p>第二个参数是一个函数（C#里会传委托吧大概忽略这个括号），这个函数的函数体如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">Map, MapView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span> <span class="comment">// 基础地图类型</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>,  <span class="comment">// 承接地图的块元素的ID</span></span><br><span class="line">    map: map,  <span class="comment">// 地图对象，由上方new出</span></span><br><span class="line">    zoom: <span class="number">8</span>,  <span class="comment">// 缩放级别</span></span><br><span class="line">    center: [<span class="number">114</span>, <span class="number">30</span>]  <span class="comment">// 中心经纬度</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们对这里的两个实例化的对象map、view进行解释说明。</p><p>【map对象是地图的数据部分，而view则是地图的可视化部分。】</p><p>map对象的创建参数，在本例中是basemap，查询参考可以知道使用了osm这一个类型的基础地图。basemap是一个类，在参考文档中也可以查询到。官方使用的是streets地图，而114，30附近streets是没有的，我切换到了osm地图。</p><p>view对象构造时，拥有4个参数，注释中容易懂，就不做多的解释了，重要的是map对象是由上面new实例化出来的。</p><p>至于JS的function参数和奇怪的构造函数，我也不多解释了，总之，Map和MapView两个名词，是esri/Map模块和esri/views模块下的两个类而已。</p><p>这便是在第一个参数数组中前两个字符串的含义了。</p><p><code>[&quot;esri/Map&quot;, &quot;esri/views/MapView&quot;, &quot;dojo/domReady!&quot;] //第三个字符串暂时不解释</code></p><blockquote><p>【Map类和MapView类的引用】</p><p>对Map类的信息截图如下：</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/1-1.png" alt="img"></p><p>继承自Accessor，子类有WebMap和WebScene。</p><p>构造函数的参数有一个：basemap类型的参数</p><p>对于Map对象的属性和方法，可以参考下文：</p><p><a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html" target="_blank" rel="noopener">Map</a></p><p>同理，MapView对象参考下文如下：</p><p><a href="https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html" target="_blank" rel="noopener">MapView</a></p><p>MapView对象构造函数、属性和函数也写的很详细了。MapView继承自View类，而View类则继承自Accessor类。</p></blockquote><p>以上便为第二个参数的笔记。</p><p>现在，贴出完整的html页面代码，可以自行复制粘贴到本地html文件，双击打开即可看到地图。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span><br><span class="line">&lt;title&gt;Get started <span class="keyword">with</span> MapView - Create a <span class="number">2</span>D map&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">  html, body, #viewDiv &#123;</span></span><br><span class="line"><span class="regexp">    padding: 0;</span></span><br><span class="line"><span class="regexp">    margin: 0;</span></span><br><span class="line"><span class="regexp">    height: 100%;</span></span><br><span class="line"><span class="regexp">    width: 100%;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://js.arcgis.com/4.2/esri/css/main.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://js.arcgis.com/4.2/"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">require</span>([</span><br><span class="line">  <span class="string">"esri/Map"</span>,</span><br><span class="line">  <span class="string">"esri/views/MapView"</span>,</span><br><span class="line">  <span class="string">"dojo/domReady!"</span></span><br><span class="line">], <span class="function"><span class="keyword">function</span>(<span class="params">Map, MapView</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(&#123;</span><br><span class="line">    basemap: <span class="string">"osm"</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> MapView(&#123;</span><br><span class="line">    container: <span class="string">"viewDiv"</span>, </span><br><span class="line">    map: map,   </span><br><span class="line">    zoom: <span class="number">8</span>,</span><br><span class="line">    center: [<span class="number">114</span>, <span class="number">30</span>] </span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"viewDiv"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>不出意外的话，会是这样子：</p><p><img src="https://dev.tencent.com/u/ibrucekong/p/images/git/raw/master/arcgis-api-for-js-4.x/1-2.png" alt="img"></p><p>本人使用chrome 56浏览器，这是在网吧的机器，Win7+Chrome 55.</p><hr><p>补充：</p><p>link和第一个script标签是对官方样式表和类库的引用，没有这俩是运行不了的。</p><p>因为AJS是基于dojo的，所以需要在require的第一个字符串数组参数的第三个元素中使用dojo/domReady!，具体是为什么，官方例子有写，作为应用级别的开发就不深入了，有兴趣的同学可以试看AJS的框架什么的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ArcGIS API for JavaScript 4.x：&lt;/strong&gt;&lt;br&gt;从3.x版本升级到4.x，变化比较大，学习、开发体验也会不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="ArcGIS API for JavaScript 4.x" scheme="https://ibrucekong.github.io/categories/ArcGIS-API-for-JavaScript-4-x/"/>
    
    
      <category term="ArcGIS" scheme="https://ibrucekong.github.io/tags/ArcGIS/"/>
    
      <category term="ArcGIS API for Javascript 4.2" scheme="https://ibrucekong.github.io/tags/ArcGIS-API-for-Javascript-4-2/"/>
    
      <category term="WebGIS" scheme="https://ibrucekong.github.io/tags/WebGIS/"/>
    
      <category term="AJS" scheme="https://ibrucekong.github.io/tags/AJS/"/>
    
  </entry>
  
  <entry>
    <title>修改Docker下的MySQL密码校验方式</title>
    <link href="https://ibrucekong.github.io/posts/2058601592/"/>
    <id>https://ibrucekong.github.io/posts/2058601592/</id>
    <published>2019-01-09T08:31:16.000Z</published>
    <updated>2019-01-09T08:31:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Docker学习：</strong></p><p>由于MySQL在版本升级后，验证加密的方式改变了，在使用Navicat连接时会报错，因此下记录解决方法。</p><a id="more"></a><p>当使用docker的MySQL时，遇到了navicat无法连接mysql的情况，给出了两种解决方法，一是升级navicat驱动，暂时跳过该方法；二是修改mysql密码校验方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 首先启动docker的mysql数据库服务</span><br><span class="line">$ docker start docker-mysql</span><br><span class="line"># 进入docker-mysql的命令行模式</span><br><span class="line">$ docker exec -it docker-mysql bash</span><br><span class="line"># 默认进入root用户下</span><br><span class="line">$ root@921c40c1c9d6:/#</span><br><span class="line"># 进入mysql命令，回车输入docker-mysql密码</span><br><span class="line">$ mysql -u root -p</span><br><span class="line"># 进入mysql数据库表</span><br><span class="line">$ use mysql;</span><br><span class="line"># 修改密码方式</span><br><span class="line">$ alter user &apos;root&apos;@&apos;%&apos; identified with mysql_native_password by &apos;your password&apos;;</span><br><span class="line"># 两次 exit 退出命令行界面</span><br></pre></td></tr></table></figure><p>使用Navicat连接mysql数据库成功。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Docker学习：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于MySQL在版本升级后，验证加密的方式改变了，在使用Navicat连接时会报错，因此下记录解决方法。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="终端" scheme="https://ibrucekong.github.io/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="Docker" scheme="https://ibrucekong.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker无法使用vim</title>
    <link href="https://ibrucekong.github.io/posts/2392351684/"/>
    <id>https://ibrucekong.github.io/posts/2392351684/</id>
    <published>2019-01-09T07:57:46.000Z</published>
    <updated>2019-01-09T07:57:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Docker学习：</strong></p><p>从Docker仓库中下载的容器，由于需要进行自定义设置，但是环境却没有提供能编辑的功能，连VIM都未提供，记录在设置MySQL时遇到没有VIM环境的解决方法。</p><a id="more"></a><p>当使用docker的MySQL时，遇到了navicat无法连接mysql的情况，给出了两种解决方法;</p><ul><li>一是升级navicat驱动；</li><li>二是修改mysql密码校验方式。</li></ul><p>当时想看看mysql容器的配置文件，结果使用<code>vim</code>都报<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash: vi: command not found</span><br></pre></td></tr></table></figure></p><p>显然是mysql基于的Linux容器没有安装vim，下面来联网安装一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 安装vim</span><br><span class="line">$ apt update</span><br><span class="line">$ apt install vim</span><br></pre></td></tr></table></figure></p><p>然后可以愉快的编辑了。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Docker学习：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从Docker仓库中下载的容器，由于需要进行自定义设置，但是环境却没有提供能编辑的功能，连VIM都未提供，记录在设置MySQL时遇到没有VIM环境的解决方法。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="终端" scheme="https://ibrucekong.github.io/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="Docker" scheme="https://ibrucekong.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Splice和Slice引发的血案</title>
    <link href="https://ibrucekong.github.io/posts/2464790768/"/>
    <id>https://ibrucekong.github.io/posts/2464790768/</id>
    <published>2019-01-08T03:41:24.000Z</published>
    <updated>2019-01-08T03:41:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一字千里，何况是在代码里：</strong></p><p>生活中一字之差，意思能千差万别，在代码中差了一字，运行结果更是差之千里。</p><a id="more"></a><p>在项目中遇到了对数据进行Copy，实现浅拷贝想到了用Slice，但是却错写成了Splice，引发了一系列问题。</p><p>下面借花献佛，讲解一下slice和splice的区别：</p><blockquote><p> slice(start,end)：方法可从已有数组中返回选定的元素，返回一个新数组，包含从start到end（不包含该元素）的数组元素。</p><p>注意：该方法不会改变原数组，而是返回一个子数组，如果想删除数组中的一段元素，应该使用Array.splice()方法。</p><p>start参数：必须，规定从何处开始选取，如果为负数，规定从数组尾部算起的位置，-1是指最后一个元素。<br>end参数：可选（如果该参数没有指定，那么切分的数组包含从start倒数组结束的所有元素，如果这个参数为负数，那么规定是从数组尾部开始算起的元素）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.slice(<span class="number">1</span>));<span class="comment">//[2,3,4,5]  选择序列号从1到最后的所有元素组成的新数组。</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.slice(<span class="number">1</span>,<span class="number">3</span>))<span class="comment">//[2,3]  不包含end，序列号为3的元素</span></span><br></pre></td></tr></table></figure><blockquote><p>splice()：该方法向或者从数组中添加或者删除项目，返回被删除的项目。（该方法会改变原数组）</p><p>splice（index,howmany,item1,…itemX）</p><p>index参数：必须，整数，规定添加或者删除的位置，使用负数，从数组尾部规定位置。<br>howmany参数：必须，要删除的数量，如果为0，则不删除项目。<br>tem1,…itemX参数：可选，向数组添加的新项目。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.splice(<span class="number">2</span>,<span class="number">1</span>,<span class="string">"hello"</span>));<span class="comment">//[3]  返回的新数组</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);<span class="comment">//[1, 2, "hello", 4, 5]  改变了原数组</span></span><br></pre></td></tr></table></figure><p>原文：<a href="https://blog.csdn.net/xiaoqingpang/article/details/79108005" target="_blank" rel="noopener">https://blog.csdn.net/xiaoqingpang/article/details/79108005</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;一字千里，何况是在代码里：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生活中一字之差，意思能千差万别，在代码中差了一字，运行结果更是差之千里。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="编程语言" scheme="https://ibrucekong.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="心得" scheme="https://ibrucekong.github.io/tags/%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>再见,我的青春 ——《请回答1988》</title>
    <link href="https://ibrucekong.github.io/posts/139445933/"/>
    <id>https://ibrucekong.github.io/posts/139445933/</id>
    <published>2018-12-13T10:34:07.000Z</published>
    <updated>2019-01-31T05:20:50.355Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/1988.jpg" alt=""><br></div><p><strong>暗恋终究有风险,但愿青春无悔：</strong></p><p>提起韩剧,很多人下意识会认为是无脑爱情剧,豆瓣评分也会很低,特别是对于只看美剧的男生来讲,漫威、DC的烧钱特效,好不过瘾,看韩剧简直就是天方夜谭。但是对于《请回答》系列的《请回答1988》,豆瓣评分及其之高,堪称神剧,不信来刷,我在第一集等你。</p><a id="more"></a><div style="text-align: center;"><img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/1988-douban.png" alt="1988"></div><p>《请回答1988》当前的豆瓣评分是<a href="https://movie.douban.com/subject/26302614/" target="_blank" rel="noopener">9.7</a>,该剧在官方定义中是一部爱情喜剧,而多数人在刷剧时,却硬生生的把喜剧刷成了泪目剧,每一集的感动时间就像美剧《Supernatural》中兄弟两个的感动时间一样(Hey, 美人丁)。此剧与2015年11月6日在韩国上映,是一部距离我们比较近的韩剧,而不是那种被冠以经典二字的老剧,不像《越狱》《行尸走肉》《权力的游戏》那么早就面世那么早,但是却同样拥有着巨大魔力俘获了众多人的心。</p><div style="text-align: center;"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/1988-all.png" alt="1988"></div><p>首次接触《请回答1988》是在2017年12月份,对于韩剧中的细腻(腻歪),不如美剧宏大场面看的那么爽、那么疯狂,而我又对剧很挑剔,看的美剧要么经典,要么上当时的TOP,所以对于韩剧稍微有点不待见的节奏。可是,看了《请回答1988》第一集过后,深陷其中,引人入胜,无法自拔。</p><p>最近用了半个月的时间二刷,在下班之余、睡前(害的熬夜)刷完,看的很过瘾。</p><div style="text-align: center;font-weight: bold;font-size: 1.5rem; color: red"><br>    以下是豆瓣相关链接<br></div><br>对于好剧好电影,在刷完之后总会去点评网站细细品味在观看时未能察觉到的、未能留意到的细节。下面从国内的豆瓣上摘取了一些经典评论,如果喜欢,并且不怕剧透的可以去品读下。<br><br><blockquote><a href="https://movie.douban.com/review/7743563/" target="_blank" rel="noopener">那一场无疾而终的暗恋-88恋爱解析–有片叶子(作者)</a><br><br>   1988对我来说不是一个爱情剧，它理所当然的应该是一个怀旧青春剧。<br>   在青春中，爱情只是其中的一部分，甚至在青春的爱情里，闪光的不是结局，而是那青涩懵懂的过程。<br><br>   18集毫无疑问是属于正焕的，雨中的独白，错过的时机，自我剖析的悔恨，正焕的爱情在独白中已经交代，而后餐厅借戒指的表白……<br></blockquote><br><br>看来大家的入笔都是从狗焕开始,毕竟青春爱情剧还是要有感情线,在这一个没有男主的剧中狗焕却是隐形的贯穿其中,狗焕的爱情从刚一开始到红灯亮起时就注定了暗恋风险太大,想要追悔依然天不助。<br><br><blockquote><a href="https://movie.douban.com/review/7676474/" target="_blank" rel="noopener">细数1988中的事件背景和人物 不断更新–作者(小柒)</a><br><br>   1988完结了，因为正焕不是最后的老公纷纷去打1分的你们，你们就忘记了刚开始看这部剧的时候给你们自己带来的感动了吗?<br></blockquote><br><br>答主开头就为该剧抱不平(都9.7分了,还不满意…是,不满意),表示为狗焕不是最后的老公而打1分的人的愤慨,然后晒出狗焕和德善剧中无缘,但现实却摆脱了狗的称谓,勇敢的向德善发起爱情宣言。并对每一集进行了剖析,指出每一集中的事件的背景和人物,对于如此用心良苦的编剧,点赞！<br><br><blockquote> <a href="https://movie.douban.com/review/7754487/" target="_blank" rel="noopener">神剧请回答1988埋的梗你看懂了多少–凰Suk(作者)</a><br><br>   其实个人并不建议想看少女心和爱情线的小伙伴们看1988，如果想看爱情喜剧那你大可以去找洪氏姐妹，想看成功商业爱情剧去找金编剧，而请回答系列，玩儿的一直是情怀，相比97和94，88表达的东西更多更杂也更贴近生活，这也是为什么88在韩网和内地平台上分数不如97和94，因为大部分人都想单纯地看看爱情线，冒冒粉红色泡泡。<br><br>   开始对剧中的梗进行分析……<br></blockquote><br><br>该答主剖析的梗很到位,开头先给出了看此剧的态度,说少女❤和爱情线的小伙不建议看,我是不赞同的,对于美好的事物每个人都有欣赏的权利,尽管是(单身)狗。<br><br><blockquote><a href="https://movie.douban.com/review/7741010/" target="_blank" rel="noopener">最后幸好是你–青木(作者)</a><br><br>   作为2015年韩国最受期待的现象级大剧《请回答1988》落下了帷幕。“正八”党没等来逆转，德善还是属于崔泽。这样的结局一度让“焕善党”把《88》推上了风口浪尖，他们不明白为什么前面的正牌男主到了后面基本沦为了男四，前面的铺垫，前面的伏笔，前面的勾勒，到后来连交代都省去喂了狗。于是质疑，诋毁就开始铺天盖地。<br>   我不属于“泽善粉”也不属于“焕善粉”，不过说实话最开始的时候，按照《请回答XX》这个系列的尿性，基本大家都认为老公应该是狗焕，我也这么认为，心底里最大的期望也不过是不要太虐阿泽，毕竟阿泽几乎是用出了下棋以外所有的时间和生命去爱着德善。但不知道为何心底里总有德善和阿泽在一起的希冀..<br></blockquote><br><br>答主首先喊出了弹幕中出现最多的两个党派“狗善党”、“泽善粉”,并对编剧把狗焕”丑帅”的人物刻画的轻车熟路表达了赞许。<br><br>说到党派站队,我还是倾向于站“焕善党”的,可能我是从狗焕的身上看到了太多自己的影子,认同感油然而生,勿拍砖。特别在最后,德善推门进来看到一群小伙伴再看英雄本色时,恍然如梦,顿时一怔,想到狗焕,若此为梦,可还木讷！<br><br>最后,特别要感谢一下《请回答1988》的编剧,简直神人,对人物内心的拿捏恰到好处;再者感谢剧中的每一位演员,神剧情没有演员的完美演绎也不会称为神剧;然后感谢那些还在为此剧疯狂的人,因为物以类聚,人以群分,对于好剧的感染力使得大家同在一个”屋檐下”。<br><br>从第一集又看到第一集,希望下一次的第一集有你一起看,我在第一集等你。<br><br><strong>断断续续的续…</strong><br><br><blockquote>搞怪的不是红绿灯，不是时机，而是我数不清的犹豫<br><br> “哎一古，成社长。哎一古，金社长。”<br><br> 德善的抖腿舞，啊哈哈<br><br> 三兄弟的《消防车》<br><br>咩～咩～咩～～～<br><br>冬天最温馨的事就是和《请回答》一起度过…<br><br>把最好的都给了朋友、兄弟和国家，狗焕你留下了啥…<br><br>男生站”狗善党“（看到自己的影子），女生站”泽善党“（女生的看法）<br><br>啊，1988的后劲太TM大了…<br><br>大人们只是在忍，只是在忙着大人们的事，只是在用故作坚强来承担年龄的重任，大人们也会疼。<br><br>永远没有顾客的凤凰堂，确实双门洞的最大赢者。<br><br>1988是一部后劲很大的剧。<br><br>1988里面没有坏人，如果非要说有，那就是时光。<br><br>娃娃鱼懂所有人，所有人却不懂娃娃鱼。<br><br></blockquote><br>歌单很多，大家网上找找&gt;&gt;&gt;&gt;<a href="https://music.163.com/#/playlist?id=2531631787" target="_blank" rel="noopener">〖请回答1988〗这几首就好了</a><br><br><br><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;div style=&quot;text-align: center;padding: 0; margin: 0;&quot;&gt;&lt;br&gt;    &lt;img class=&quot;wechat-qrcode&quot; src=&quot;https://coding.net/u/ibrucekong/p/images/git/raw/master/1988.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;暗恋终究有风险,但愿青春无悔：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;提起韩剧,很多人下意识会认为是无脑爱情剧,豆瓣评分也会很低,特别是对于只看美剧的男生来讲,漫威、DC的烧钱特效,好不过瘾,看韩剧简直就是天方夜谭。但是对于《请回答》系列的《请回答1988》,豆瓣评分及其之高,堪称神剧,不信来刷,我在第一集等你。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="韩剧" scheme="https://ibrucekong.github.io/tags/%E9%9F%A9%E5%89%A7/"/>
    
      <category term="请回答1988" scheme="https://ibrucekong.github.io/tags/%E8%AF%B7%E5%9B%9E%E7%AD%941988/"/>
    
  </entry>
  
  <entry>
    <title>吾爱破解论坛2018年11月11日开放注册通知</title>
    <link href="https://ibrucekong.github.io/posts/3256505474/"/>
    <id>https://ibrucekong.github.io/posts/3256505474/</id>
    <published>2018-10-30T03:10:05.000Z</published>
    <updated>2018-10-30T03:10:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>吾爱破解论坛注册喜讯：</strong><br>吾爱开放注册又又来了，此次是2018年第三次开放注册，在今年前两次未能成功上车的小伙伴，这次可要抓住了，又是正值周末，又是天时地利人和，赶快整理好自己的注册资料，期待“11.11”的到来吧。</p><a id="more"></a><div style="text-align: center;font-weight: bold;font-size: 2rem; color: red"><br>    喜讯、喜讯、喜讯<br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    <span>吾爱破解论坛开通开放注册</span><br>    <span>2018年11月11日12:00-14:00和20:00-22:00</span><br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem;padding-top: 0;margin-top: 0;height: 106px;line-height: 106px"><a href="https://www.52pojie.cn/?fromuid=575811" style="text-align: center;" target="_blank" rel="noopener">我要吾爱</a></div><br><div></div><p><strong><em>注册注意事项：</em></strong></p><ol><li>吸取上次上车失败的教训！！！</li><li>注意不要错过注册时间</li><li>认真读注册须知（需要等10分钟）</li><li>事先把注册信息写在本子或word里（独一无二的邮箱和用户名） <a href="https://www.52pojie.cn/misc.php?mod=faq&amp;action=faq&amp;id=15&amp;messageid=16" target="_blank" rel="noopener">需要准备什么</a></li><li>耐心检查填写内容（看是否都符合要求）</li><li>邮箱验证阶段，有的要到邮箱的垃圾箱中查看有没有验证邮件，而有的邮箱则需要设置白名单才能收到验证邮件 <a href="https://www.52pojie.cn/thread-98585-1-1.html" target="_blank" rel="noopener">帮助</a></li><li>提醒一下，在注册成功后，要记得保持活跃度哦，不要只在官网签到，还要有互动（发帖、回复），不然会被清理的。</li></ol><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    祝愿小伙伴们都能获得自己的吾爱账号！<br></div><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;吾爱破解论坛注册喜讯：&lt;/strong&gt;&lt;br&gt;吾爱开放注册又又来了，此次是2018年第三次开放注册，在今年前两次未能成功上车的小伙伴，这次可要抓住了，又是正值周末，又是天时地利人和，赶快整理好自己的注册资料，期待“11.11”的到来吧。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="活动" scheme="https://ibrucekong.github.io/tags/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="吾爱破解" scheme="https://ibrucekong.github.io/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>济南的中秋</title>
    <link href="https://ibrucekong.github.io/posts/4186109665/"/>
    <id>https://ibrucekong.github.io/posts/4186109665/</id>
    <published>2018-09-21T08:39:57.000Z</published>
    <updated>2018-09-21T08:39:57.000Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/jinan-mid-autumn.png" alt=""><br></div><a id="more"></a><p><br><br><br><br><br></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <span style="font-size: 3rem;color: #696969;background-image: -webkit-linear-gradient(92deg, #d4290e, #ff71fb);-webkit-background-clip: text;-webkit-text-fill-color: transparent;-webkit-animation: hue 60s infinite linear;">中秋一人，亦可三人成酒！</span><br></div><p><br></p><p><br></p><p><br></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;div style=&quot;text-align: center;padding: 0; margin: 0;&quot;&gt;&lt;br&gt;    &lt;img class=&quot;wechat-qrcode&quot; src=&quot;https://coding.net/u/ibrucekong/p/images/git/raw/master/jinan-mid-autumn.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="中秋" scheme="https://ibrucekong.github.io/tags/%E4%B8%AD%E7%A7%8B/"/>
    
      <category term="济南" scheme="https://ibrucekong.github.io/tags/%E6%B5%8E%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>BIMserver入门笔记 - 02登录及模型展示</title>
    <link href="https://ibrucekong.github.io/posts/3230248873/"/>
    <id>https://ibrucekong.github.io/posts/3230248873/</id>
    <published>2018-09-17T05:35:54.000Z</published>
    <updated>2018-09-17T05:35:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>BIMserver登录及模型展示：</strong><br>BIMserver资料较少，没有成熟的接口文档，没有成熟的示例程序，但是BIMserver为我们提供了一个运维程序、示例数据，在Github中的<a href="https://github.com/opensourceBIM" target="_blank" rel="noopener">opensourceBIM</a>这个开源组织，给开发者提供了不少源码级的学习内容。从运维程序中我们可以梳理出BIMserver的执行过程，方便我们二次开发。</p><a id="more"></a><ol><li><p><a href="../3869274485/">BIMserver入门笔记 - 01环境搭建、数据导入及预览</a></p></li><li><p>BIMserver入门笔记 - 02登录及模型展示</p></li></ol><p>从上一节我们了解了BIMserver的安装配置和运维的使用，但是在项目中我们不可能去直接用BIMserver的运行界面，需要我根据自己的项目需求来自定义自己的BIM展示界面和功能，所以我们就要从开发者角度去审视BIMserver。</p><h3 id="准备什么"><a href="#准备什么" class="headerlink" title="准备什么"></a>准备什么</h3><p>既然是开发者，前端就至少要懂前端的，后端至少要懂后端的，最好两者都熟悉。准备工作除了能搭建起BIMserver环境，还要有以下的几个特点（建议）：</p><ul><li>一件趁手的兵器——IDE（前端就WebStorm咯，涉及到后台就IDEA咯）</li><li>一个性能不错的本子——内存和CPU性能要好，关键还要有不错的显卡</li></ul><h3 id="需要什么"><a href="#需要什么" class="headerlink" title="需要什么"></a>需要什么</h3><ul><li><p>一个敢于钻研的劲头</p></li><li><p>一个不服输、有韧性的心</p></li></ul><p><em>新兴的技术或者前沿的技术，必要要耐得住性子</em></p><p>除了精神上的鼓舞，我还要掌握一些查资料的技能，特别是在对BIMserver二次开发中，资料少之又少，整个腾讯就两个群（一个群人数不超过一只手的手指头数）。另外官方也没有提供<code>Step by step</code>和接口文档，示例代码也是少的可怜，Stack Overflow、CSDN和博客园中资料也是凤毛麟角，所以二次开发的参考资料还是去查看官方的<a href="https://github.com/opensourceBIM/BIMserver/tree/parent-1.5.88/PluginBase/src/org/bimserver/shared/interfaces" target="_blank" rel="noopener">接口源码</a>，比如最常用的<a href="https://github.com/opensourceBIM/BIMserver/blob/parent-1.5.88/PluginBase/src/org/bimserver/shared/interfaces/ServiceInterface.java" target="_blank" rel="noopener">接口源码</a>。</p><h3 id="万里长征第一步"><a href="#万里长征第一步" class="headerlink" title="万里长征第一步"></a>万里长征第一步</h3><p>万事开头难，先起个<a href="https://github.com/ibrucekong/hellobim/" target="_blank" rel="noopener">Hellobim</a>吧！</p><h4 id="设计布局"><a href="#设计布局" class="headerlink" title="设计布局"></a>设计布局</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"maincontainer"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"topsection"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hellobim<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"contentwrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colmid"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colright"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"col1wrap"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"col1pad"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"viewerContainer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"treeContainer"</span> <span class="attr">class</span>=<span class="string">"bimsurfer-static-tree"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dataContainer"</span> <span class="attr">class</span>=<span class="string">"bimsurfer-metadata"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="变量配置"><a href="#变量配置" class="headerlink" title="变量配置"></a>变量配置</h4><p>由于JavaScript代码比较多，所以拆分成了三部分，一个是变量配置模块，一个是登录模块，一个是模型加载展示。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> projectName = <span class="string">'test1'</span>; <span class="comment">// address地址下的BIMserver服务中必须有test1项目，而且还要有模型</span></span><br><span class="line"><span class="keyword">var</span> address = <span class="string">"http://192.168.1.116:8082"</span>; <span class="comment">// 这三个是在安装BIMserver时配置的地址、账户和密码</span></span><br><span class="line"><span class="keyword">var</span> account = <span class="string">"admin@163.com"</span>;</span><br><span class="line"><span class="keyword">var</span> password = <span class="string">"1234567890"</span>;</span><br><span class="line"><span class="keyword">var</span> token, poid, lastRevisionId; <span class="comment">// 这三个是在模型加载时需要用到的</span></span><br><span class="line"><span class="keyword">var</span> metadata; <span class="comment">// 这是右侧元数据</span></span><br></pre></td></tr></table></figure><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录代码</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">loadFromBimserver</span>(<span class="params">address, username, password, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> BimServerClient(address);</span><br><span class="line">    client.init(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      client.login(username, password, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 根据项目名称获取该项目的模型场景</span></span><br><span class="line">        client.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getAllProjects"</span>, &#123;</span><br><span class="line">          onlyTopLevel: <span class="literal">true</span>,</span><br><span class="line">          onlyActive: <span class="literal">true</span></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">projects</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> totalFound = <span class="number">0</span>;</span><br><span class="line">          projects.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">project</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (project.name === projectName) &#123;</span><br><span class="line">              token = client.token;</span><br><span class="line">              poid = project.oid;</span><br><span class="line">              lastRevisionId = project.lastRevisionId;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.error(error);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    loadFromBimserver(address, account, password);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="模型加载及展示"><a href="#模型加载及展示" class="headerlink" title="模型加载及展示"></a>模型加载及展示</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载模型并展示</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">"bimsurfer/src/BimSurfer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/BimServerModelLoader"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/StaticTreeRenderer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/MetaDataRenderer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/lib/domReady!"</span>],</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">BimSurfer, BimServerModelLoader, StaticTreeRenderer, MetaDataRenderer</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">processBimSurferModel</span>(<span class="params">bimSurferModel</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      bimSurferModel.getTree().then(<span class="function"><span class="keyword">function</span> (<span class="params">tree</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> domtree = <span class="keyword">new</span> StaticTreeRenderer(&#123;</span><br><span class="line">          domNode: <span class="string">'treeContainer'</span></span><br><span class="line">        &#125;);</span><br><span class="line">        domtree.addModel(&#123;<span class="attr">name</span>: <span class="string">""</span>, <span class="attr">id</span>: lastRevisionId, <span class="attr">tree</span>: tree&#125;);</span><br><span class="line">        domtree.build();</span><br><span class="line">        metadata = <span class="keyword">new</span> MetaDataRenderer(&#123;</span><br><span class="line">          domNode: <span class="string">'dataContainer'</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        metadata.addModel(&#123;<span class="attr">name</span>: <span class="string">""</span>, <span class="attr">id</span>: lastRevisionId, <span class="attr">model</span>: bimSurferModel&#125;);</span><br><span class="line"></span><br><span class="line">        bimSurfer.on(<span class="string">"selection-changed"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">selected</span>) </span>&#123;</span><br><span class="line">          domtree.setSelected(selected, domtree.SELECT_EXCLUSIVE);</span><br><span class="line">          metadata.setSelected(selected);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        domtree.on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">oid, selected</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (selected.length) &#123;</span><br><span class="line">            bimSurfer.viewFit(&#123;</span><br><span class="line">              ids: selected,</span><br><span class="line">              animate: <span class="literal">true</span></span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">          bimSurfer.setSelection(&#123;</span><br><span class="line">            ids: selected,</span><br><span class="line">            clear: <span class="literal">true</span>,</span><br><span class="line">            selected: <span class="literal">true</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bimSurfer = <span class="keyword">new</span> BimSurfer(&#123;</span><br><span class="line">      domNode: <span class="string">"viewerContainer"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.bimSurfer = bimSurfer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bimServerClient = <span class="keyword">new</span> BimServerClient(address, <span class="literal">null</span>);</span><br><span class="line">    bimServerClient.init(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      bimServerClient.setToken(token, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> modelLoader = <span class="keyword">new</span> BimServerModelLoader(bimServerClient, bimSurfer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> models = &#123;&#125;; <span class="comment">// roid -&gt; Model</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> nrProjects;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadModels</span>(<span class="params">models, totalBounds</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> center = [</span><br><span class="line">            (totalBounds.min[<span class="number">0</span>] + totalBounds.max[<span class="number">0</span>]) / <span class="number">2</span>,</span><br><span class="line">            (totalBounds.min[<span class="number">1</span>] + totalBounds.max[<span class="number">1</span>]) / <span class="number">2</span>,</span><br><span class="line">            (totalBounds.min[<span class="number">2</span>] + totalBounds.max[<span class="number">2</span>]) / <span class="number">2</span></span><br><span class="line">          ];</span><br><span class="line"></span><br><span class="line">          <span class="keyword">var</span> globalTransformationMatrix = [</span><br><span class="line">            <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">            <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">            <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">            -center[<span class="number">0</span>], -center[<span class="number">1</span>], -center[<span class="number">2</span>], <span class="number">1</span></span><br><span class="line">          ];</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> roid <span class="keyword">in</span> models) &#123;</span><br><span class="line">            <span class="keyword">var</span> model = models[roid];</span><br><span class="line">            modelLoader.setGlobalTransformationMatrix(globalTransformationMatrix);</span><br><span class="line">            modelLoader.loadFullModel(model).then(<span class="function"><span class="keyword">function</span> (<span class="params">bimSurferModel</span>) </span>&#123;</span><br><span class="line">              processBimSurferModel(bimSurferModel);</span><br><span class="line">              <span class="comment">//填充下拉框</span></span><br><span class="line">              getModelOidAndName(bimSurferModel);</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getModelOidAndName</span>(<span class="params">thisModel</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> modelObj = thisModel.apiModel.objects;</span><br><span class="line">          <span class="built_in">Object</span>.keys(modelObj).forEach(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (modelObj[key].object.hasChildren === <span class="literal">undefined</span>) &#123;</span><br><span class="line">              <span class="keyword">var</span> option = <span class="built_in">document</span>.createElement(<span class="string">"option"</span>);</span><br><span class="line">              $(option).val(key);</span><br><span class="line">              <span class="keyword">if</span> (modelObj[key].object.Name === <span class="literal">undefined</span> || modelObj[key].object.Name === <span class="string">""</span>) &#123;</span><br><span class="line">                $(option).text(key);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(option).text(modelObj[key].object.Name);</span><br><span class="line">              &#125;</span><br><span class="line">              $(<span class="string">'#select'</span>).append(option);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getAllRelatedProjects"</span>, &#123;<span class="attr">poid</span>: poid&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">projects</span>) </span>&#123;</span><br><span class="line">          nrProjects = projects.length;</span><br><span class="line">          <span class="keyword">var</span> totalBounds = &#123;</span><br><span class="line">            min: [<span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE],</span><br><span class="line">            max: [-<span class="built_in">Number</span>.MAX_VALUE, -<span class="built_in">Number</span>.MAX_VALUE, -<span class="built_in">Number</span>.MAX_VALUE]</span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line">          projects.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">project</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (project.lastRevisionId !== <span class="number">-1</span>) &#123;</span><br><span class="line">              <span class="comment">//lastRevisionId</span></span><br><span class="line">              bimServerClient.getModel(project.oid, project.lastRevisionId, project.schema, <span class="literal">false</span>, <span class="function"><span class="keyword">function</span> (<span class="params">model</span>) </span>&#123;</span><br><span class="line">                models[project.lastRevisionId] = model;</span><br><span class="line"></span><br><span class="line">                bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getModelMinBounds"</span>, &#123;<span class="attr">roid</span>: project.lastRevisionId&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">minBounds</span>) </span>&#123;</span><br><span class="line">                  bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getModelMaxBounds"</span>, &#123;<span class="attr">roid</span>: project.lastRevisionId&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">maxBounds</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.x &lt; totalBounds.min[<span class="number">0</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">0</span>] = minBounds.x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.y &lt; totalBounds.min[<span class="number">1</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">1</span>] = minBounds.y;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.z &lt; totalBounds.min[<span class="number">2</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">2</span>] = minBounds.z;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.x &gt; totalBounds.max[<span class="number">0</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">0</span>] = maxBounds.x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.y &gt; totalBounds.max[<span class="number">1</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">1</span>] = maxBounds.y;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.z &gt; totalBounds.max[<span class="number">2</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">2</span>] = maxBounds.z;</span><br><span class="line">                    &#125;</span><br><span class="line">                    nrProjects--;</span><br><span class="line">                    <span class="keyword">if</span> (nrProjects === <span class="number">0</span>) &#123;</span><br><span class="line">                      loadModels(models, totalBounds);</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              nrProjects--;</span><br><span class="line">              <span class="keyword">if</span> (nrProjects === <span class="number">0</span>) &#123;</span><br><span class="line">                loadModels(models, totalBounds);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><p>在index.html中右击，选择 <code>Run &#39;index.html&#39;</code>或者Ctrl + Shift + F10启动页面，效果如图：</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-hellobim-01.png" alt=""></p><p>点击任意部件，部件高亮并且可以查看部件的信息。</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-hellobim-02.png" alt=""></p><p><em>界面丑，待优化，至少模型加载并展示了嘛</em></p><p><em>能力有限，如有错误或疑问请在评论区指出，谢谢。</em></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;BIMserver登录及模型展示：&lt;/strong&gt;&lt;br&gt;BIMserver资料较少，没有成熟的接口文档，没有成熟的示例程序，但是BIMserver为我们提供了一个运维程序、示例数据，在Github中的&lt;a href=&quot;https://github.com/opensourceBIM&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;opensourceBIM&lt;/a&gt;这个开源组织，给开发者提供了不少源码级的学习内容。从运维程序中我们可以梳理出BIMserver的执行过程，方便我们二次开发。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="BIM" scheme="https://ibrucekong.github.io/tags/BIM/"/>
    
      <category term="BIMserver" scheme="https://ibrucekong.github.io/tags/BIMserver/"/>
    
  </entry>
  
  <entry>
    <title>BIMserver入门笔记 - 01环境搭建、数据导入及预览</title>
    <link href="https://ibrucekong.github.io/posts/3869274485/"/>
    <id>https://ibrucekong.github.io/posts/3869274485/</id>
    <published>2018-09-15T09:20:22.000Z</published>
    <updated>2018-09-15T09:20:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>轻松搭建BIMserver开发环境：</strong><br>BIMserver在国内开发资料太少，关于环境搭建的有一些，我也是参照着这些教程一步步的搭建，该笔记把遇到的一些坑给记录下来，方便以后参考。</p><a id="more"></a><ol><li><p>BIMserver入门笔记 - 01环境搭建、数据导入及预览</p></li><li><p><a href="../3230248873/">BIMserver入门笔记 - 02登录及模型展示</a></p></li></ol><p>现在的工作就是，什么热就干什么（什么… 小李你说啥，Tom热~~），这年头就这样，能把自己的产品给推出去，并且能加码推出去就是胜利。</p><p>BIM在行业里应用不多，大家都在积极的储备该技术，都指望着自己能厚积薄发。</p><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><p>这里给出官方开源<a href="https://github.com/opensourceBIM/BIMserver" target="_blank" rel="noopener">地址</a>，下载相应版本的发布版本（这里以<a href="https://github.com/opensourceBIM/BIMserver/releases/tag/parent-1.5.88" target="_blank" rel="noopener">v1.5.88</a>为例，下载资料已经整理好了，点击<a href="https://github.com/ibrucekong/bimserver-env" target="_blank" rel="noopener">下载</a>）。</p><p><em>由于BIMserver的开发环境搭建时对版本的兼容性要求比较高，小版本不一样都会出错</em></p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ol><li><p>选择一个文件夹命名<code>BIMserver</code>，且整个文件夹的路径中没有空格和中文；</p></li><li><p>将<code>bimserver-env</code>文件夹下的文件都拷贝进来</p></li><li><p>双击<code>bimserverjar-1.5.88.jar</code>，<code>Address</code>内容改为<code>你的IP</code>，然后点击<code>Start</code></p></li><li><p>等服务启动成功后，点击<code>Launch Webbrowser</code>，打开平台自带的运维界面</p><p>这是一个主要的配置过程，过程就用图片来说明了，如下：</p><p>a. 找一个没有中文、没有空格的路径，存放jar文件</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-01.png" alt=""> </p><p>b. 全程使用IP作为服务发布的地址，先获取IP再说</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-02.png" alt=""> </p><p>c. 双击启动jar，将Address中的localhost改为刚才获取的IP，点击右下角的start按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-03.png" alt=""> </p><p>d. 当看到信息窗口中打印 Server started successfully即可，并点击 Launch Webbrowser</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-04.png" alt=""> </p><p>e. 打开BIMserver的运维安装界面，填写服务名称、服务描述，其他默认即可，点击Next</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-05.png" alt=""> </p><p>f. 设置管理员账号、密码，进入下一步</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-06.png" alt=""> </p><p>g. 设置email服务，忽略，点击Next</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-07.png" alt=""> </p><p>h. 勾选掉所有的插件的勾，点击upload JAR files of plugins，进行离线安装插件</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-08.png" alt=""> </p><p>i. 由于每次只能打开一个插件，所以需要耐心的将每一个插件选择好（不要有遗漏哦）</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-09.png" alt=""> </p><p>j. 这是插件列表，最好数一下</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-10.png" alt=""> </p><p>k. 默认，下一步</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-11.png" alt=""> </p><p>l. 点击 Setup，开始安装</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-12.png" alt=""> </p><p>m. 安装过程中，打印了一行红色的字体，忽略，不用管，会继续安装</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-13.png" alt=""> </p><p>n. 直至出现以下内容，表示安装成功，点击箭头指向的链接</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-14.png" alt=""> </p><p>o. 刷新后，出现这些内容，主要使用的是bimviews，点击打开</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-15.png" alt=""> </p><p>p. 需要身份验证，填写安装时填写的账号、密码</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-16.png" alt=""> </p><p>q. 登录成功后，界面中是工程列表，但是没有工程</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-17.png" alt=""> </p><p>r. 找到如图的新建项目的按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-18.png" alt=""> </p><p>s. 输入项目名称、项目描述，其他默认，点击Add</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-19.png" alt=""> </p><p>t. 项目创建成功，点击箭头所指的按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-20.png" alt=""> </p><p>u. 选择 Checkin… 进行模型的导入</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-21.png" alt=""> </p><p>v. 导入模型有两种方式，一种是本地文件，一种是URL，这里以本地文件为例进行演示</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-22.png" alt=""> </p><p>w. 选择需要导入的模型文件</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-23.png" alt=""> </p><p>x. 选择好后，文件类型和注释都有默认值，直接点击Checkin new revision</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-24.png" alt=""> </p><p>y. 这个导入速度和使用的电脑性能有关</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-25.png" alt=""> </p><p>z. 导入成功后，点击3D这个按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-26.png" alt=""> </p><p>aa. 在左侧布局中，有可以展开的树结构，和有控制显隐的眼睛</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-27.png" alt=""> </p><p>ab. 模型展示效果，左键拖拽旋转，中键拖拽平移</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-28.png" alt=""> </p><p>ac. 通过隐藏外面的部件，可以看到内部的细节</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-29.png" alt=""> </p></li></ol><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>BIMserver的文件夹 [不要有中文，不要有空格]*3 （假设说了三次）</li><li>服务地址最好填写为IP（管他呢，写localhost也行，但是总感觉后面会需要改为IP或域名）</li><li>记住账号，密码</li><li>安装插件式需要科学上网的（就因为这个，博主专门为搭建准备了完备的安装包和离线文件）</li></ol><p><em>能力有限，如有错误或疑问请在评论区指出，谢谢。</em></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;轻松搭建BIMserver开发环境：&lt;/strong&gt;&lt;br&gt;BIMserver在国内开发资料太少，关于环境搭建的有一些，我也是参照着这些教程一步步的搭建，该笔记把遇到的一些坑给记录下来，方便以后参考。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="BIM" scheme="https://ibrucekong.github.io/tags/BIM/"/>
    
      <category term="BIMserver" scheme="https://ibrucekong.github.io/tags/BIMserver/"/>
    
  </entry>
  
  <entry>
    <title>前端地图应用中几种监听事件</title>
    <link href="https://ibrucekong.github.io/posts/1380263657/"/>
    <id>https://ibrucekong.github.io/posts/1380263657/</id>
    <published>2018-08-30T02:26:07.000Z</published>
    <updated>2018-08-30T02:26:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>轻松绑定解除事件监听：</strong><br>在前端使用JavaScript给一个元素绑定、解除监听事件最为常用的是addEventListener，解除也很容易。在前端地图开发中，也会遇到很多事件绑定、解除的问题，下面我们就来讨论一下在这些环境下的事件监听是怎么实现的。</p><a id="more"></a><p>从事GIS方向，和地图打交道比较多，对于各种地图的监听事件的使用比较多，对于常用的事件监听方法梳理了以下内容，作为笔记保存。</p><h3 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h3><blockquote><p> JavaScript使我们有能力创建动态页面，网页中的每一个元素都可以产生某些触发JavaScript函数的事件。我们可以认为事件是可以被JavaScript侦测到的一种行为。</p></blockquote><h3 id="地图开发中的事件监听"><a href="#地图开发中的事件监听" class="headerlink" title="地图开发中的事件监听"></a>地图开发中的事件监听</h3><ul><li>百度</li><li>高德</li><li>谷歌</li><li>ArcGIS</li></ul><h3 id="事件监听的使用"><a href="#事件监听的使用" class="headerlink" title="事件监听的使用"></a>事件监听的使用</h3><h4 id="原生事件监听"><a href="#原生事件监听" class="headerlink" title="原生事件监听"></a>原生事件监听</h4><p>在Web项目中要对dom元素绑定监听事件，有onclick，原生方法一般使用attachEvent和addEventListener。其中attachEvent使用与IE早期版本，比如IE6、7、8，而addEventListener适用于IE9、10、11，还有FireFox、Chrome、Safari和Opera等现代浏览器。</p><ol><li><p>直接添加</p><p>a. html方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 最简单的是在dom上添加 onclick 属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"clickMe"</span> <span class="attr">onclick</span>=<span class="string">"check(this)"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>b. javascript方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给元素添加 onclick 事件 ： onclick还可以是 ondblclick、ondrag等</span></span><br><span class="line">element.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>attachEvent</p><p>在早期IE中，使用attachEvent作为添加监听的一种方式，对一个元素绑定监听可以按照以下方式进行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"onclick"、"onmouseover"、"onkeyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.attachEvent(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"onclick"、"onmouseover"、"onkeyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.attachEvent(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>addEventListener</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"keyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.addEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"keyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.removeEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>小结</li></ol><p>从以上两个方法我们可以看出其中存在着一些差别：</p><ol><li>兼容性方面，attachEvent仅支持早期的IE版本，而addEventListener支持的较为广泛；</li><li>attachEvent在事件类型上，比addEventListener多一个字符”on”，需要额外注意；</li><li>两者绑定监听都需要实名函数，匿名函数的绑定关系是无法移除的。</li></ol><h4 id="百度事件监听"><a href="#百度事件监听" class="headerlink" title="百度事件监听"></a>百度事件监听</h4><p>在百度地图中对dom元素的监听，官方给出的是addEventListener和removeEventListener，使用方法和原生的addEventListener类似，但是地图API事件监听是独立的，与原生的dom事件不同，而且还增加很多自定义的事件类型。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.addEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.removeEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，如果要能解绑事件，绑定监听时就需要使用实名函数，匿名函数是无法解绑的。</p><h4 id="高德事件监听"><a href="#高德事件监听" class="headerlink" title="高德事件监听"></a>高德事件监听</h4><p>高德在事件监听上提供了众多的方法，使用最多的就是on/off组合，另外还有addDomListener、addListener、addListenerOnce、removeListener和trigger，此次主要介绍一下最为常用的使用方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.on(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.off(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的，在 绑定和解绑时都应该使用实名函数，除非之后不需要解绑。</p><h4 id="谷歌事件监听"><a href="#谷歌事件监听" class="headerlink" title="谷歌事件监听"></a>谷歌事件监听</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">var</span> evt = google.maps.event.addListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* evt 绑定监听时的句柄</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">google.maps.event.removeListener(evt)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到谷歌这里，绑定监听就不如百度和高德那样，而是通过绑定监听返回的句柄进行解绑操作。这样的话，在绑定监听时的回调函数就可以是匿名函数，也可以是实名函数了。所以说上帝为你关闭的一扇大门，肯定会给你打开一扇窗户，不会让你为难的。</p><h4 id="ArcGIS中的事件监听"><a href="#ArcGIS中的事件监听" class="headerlink" title="ArcGIS中的事件监听"></a>ArcGIS中的事件监听</h4><p>ArcGIS的事件监听有两种方式，一种是很早之前的版本connect style，一种是on style。其中connect是通过dojo进行实现，不过现在更加推荐on来实现。</p><ol><li>connect style</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"onClick"、"onMouseOver"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">var</span> evt = dojo.connect(element, event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* evt 绑定监听时的句柄</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">dojo.disconnect(evt)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>on style</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouse-over"等</span></span><br><span class="line"><span class="comment">* function 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">var</span> evt = element.on(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* evt 绑定监听时的句柄</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">evt.remove()；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中connect style和on style对于event格式不一样，除了方法名不一样外，在调用方面也存在一定的不同，需要额外注意，不要混淆。</p><h3 id="事件监听总结"><a href="#事件监听总结" class="headerlink" title="事件监听总结"></a>事件监听总结</h3><p>从上到下看过来，就会发现事件监听也是大同小异，调用方式、事件名称都是次要，关键是考虑好事件绑定后要不要解除，一般来讲都需要绑定实名函数（也有例外，比如谷歌和ArcGIS），方便解除监听事件。</p><p>从事开发行业，特别是GIS行业，几乎在所有的项目中都会使用事件监听（主要指地图事件监听），所以希望小伙伴都能扎实的掌握好该技能。</p><p><em>能力有限，如有错误或疑问请在评论区指出，谢谢。</em></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;轻松绑定解除事件监听：&lt;/strong&gt;&lt;br&gt;在前端使用JavaScript给一个元素绑定、解除监听事件最为常用的是addEventListener，解除也很容易。在前端地图开发中，也会遇到很多事件绑定、解除的问题，下面我们就来讨论一下在这些环境下的事件监听是怎么实现的。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="事件监听" scheme="https://ibrucekong.github.io/tags/%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/"/>
    
  </entry>
  
  <entry>
    <title>IE和Chrome带有多个参数的互相跳转</title>
    <link href="https://ibrucekong.github.io/posts/1077207737/"/>
    <id>https://ibrucekong.github.io/posts/1077207737/</id>
    <published>2018-08-23T08:35:20.000Z</published>
    <updated>2018-08-23T08:35:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>IE &amp; Chrome的互相跳转：</strong><br>简单需求，简单实现。从IE跳转到Chrome，介绍使用<code>ActiveXObject</code>进行操作跳转，并实现多个参数的传递；从Chrome跳转到IE，介绍使用修改注册表的形式进行操作。</p><a id="more"></a><h3 id="IE-to-Chrome"><a href="#IE-to-Chrome" class="headerlink" title="IE to Chrome"></a>IE to Chrome</h3><p>在IE中打开Chrome方法简单且粗暴，<code>talk is cheap, show me the code</code>。</p><h4 id="单参or无参"><a href="#单参or无参" class="headerlink" title="单参or无参"></a>单参or无参</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">// 无参</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-no-param.png" alt="无参"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">// 单参</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com?id=1&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-one-param.png" alt="单参"></p><p>上述情况都没问题，一切都很顺利，下面来看看多参的情况。</p><h4 id="多参传递"><a href="#多参传递" class="headerlink" title="多参传递"></a>多参传递</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 如果要传 id=1, name=bruce 两个参数</span><br><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com?id=1&amp;name=bruce&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-one-param.png" alt="多参"></p><p>什么鬼，我明明传了两个参数啊，怎么只显示了一个，只显示了第一个。What the hell is going on?</p><p>原来在cmd的世界里，它有自己的一套转义语法，可参考<a href="https://www.cnblogs.com/newsea/p/3866413.html" target="_blank" rel="noopener">链接</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">// 经过修正，将&amp;符号进行转义，使用^&amp;代替&amp;</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com?id=1^&amp;name=bruce&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-more-param.png" alt="多参"></p><p>看完在IE中打开Chrome了，现在来瞅瞅在Chrome中打开IE的方法吧。</p><h3 id="Chrome-to-IE"><a href="#Chrome-to-IE" class="headerlink" title="Chrome to IE"></a>Chrome to IE</h3><p>在Chrome中打开IE，并传多参数，相比IE中打开Chrome要麻烦一些，大致分为以下几个方面。</p><h4 id="配置跳转环境"><a href="#配置跳转环境" class="headerlink" title="配置跳转环境"></a>配置跳转环境</h4><ol><li><p>regOpenIE.reg</p><p>1.1 在D盘下新建openIE文件夹，路径为<code>D:\openIE\</code></p><p>1.2 在openIE路径下新建<code>regOpenIE.reg</code>，并将如下内容复制进该文件：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE]</span><br><span class="line">@=&quot;URL:Alert Protocol&quot;</span><br><span class="line">&quot;URL Protocol&quot;=&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\DefaultIcon]</span><br><span class="line">@=&quot;iexplore.exe,1&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\shell]</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\shell\open]</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\shell\open\command]</span><br><span class="line">@=&quot;cmd /c set m=%1 &amp; \&quot;D:\\alert\\openIE.bat\&quot; %%m%% &amp; exit&quot;</span><br></pre></td></tr></table></figure><p>其中文本中的最后一行<code>D:\\alert\\openIE.bat\</code>是当前文件的目录。</p><ol start="2"><li>在openIE文件夹下新建<code>openIE.bat</code>，并将如下内容复制进该文件：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set m=%m:openIE:=%</span><br><span class="line">set m=&quot;%m:separator=&amp;%&quot;</span><br><span class="line">start &quot;&quot; &quot;C:\\Program Files\\internet explorer\\iexplore.exe&quot; %m%</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>其中文本中<code>start</code>一行中<code>C:\\Program Files\\internet explorer\\iexplore.exe</code>是你电脑中IE的路径，注意分隔符是双反斜杠。</p><h4 id="单参or无参-1"><a href="#单参or无参-1" class="headerlink" title="单参or无参"></a>单参or无参</h4><ol><li>在布局中加入以下内容。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;openIE:www.baidu.com&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-no-param.png" alt="无参"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;openIE:www.baidu.com?id=1&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-one-param.png" alt="单参"></p><h4 id="多参传递-1"><a href="#多参传递-1" class="headerlink" title="多参传递"></a>多参传递</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 和测试IE跳转Chrome一样，传 id=1, name=bruce 两个参数，看下效果是不是能出来</span><br><span class="line">&lt;a href=&quot;openIE:www.baidu.com?id=1&amp;name=bruce&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-one-param.png" alt="多参"></p><p>同样的思维，是不是<code>&amp;</code>又被转义或者影响到了呢，查阅资料，有<a href="https://blog.csdn.net/java_zys/article/details/51837899" target="_blank" rel="noopener">博主</a>给出了一个解决方案，使用无转义的字符去替代的方案(就是上面<code>openIE.bat</code>中第三行给出的内容)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;openIE:www.baidu.com?id=1separatorname=bruce&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-more-param.png" alt="多参"></p><p>使用参数中的<code>separator</code>代替<code>&amp;</code>，完成解析。</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>IE和Chrome的跳转可能还有其他方法，如果朋友找到更加简单的方法，请在下面回复告诉博主，感激不尽。</p><div style="text-align: center"><img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;IE &amp;amp; Chrome的互相跳转：&lt;/strong&gt;&lt;br&gt;简单需求，简单实现。从IE跳转到Chrome，介绍使用&lt;code&gt;ActiveXObject&lt;/code&gt;进行操作跳转，并实现多个参数的传递；从Chrome跳转到IE，介绍使用修改注册表的形式进行操作。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Chrome" scheme="https://ibrucekong.github.io/tags/Chrome/"/>
    
      <category term="IE" scheme="https://ibrucekong.github.io/tags/IE/"/>
    
      <category term="跳转" scheme="https://ibrucekong.github.io/tags/%E8%B7%B3%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>在Chrome中调试Ionic的Android应用</title>
    <link href="https://ibrucekong.github.io/posts/289005530/"/>
    <id>https://ibrucekong.github.io/posts/289005530/</id>
    <published>2018-08-08T02:05:36.000Z</published>
    <updated>2018-08-08T02:05:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Ionic的Android端调试：</strong><br>在以往Android原生开发时，App的调试用真机很是简单，即便是虚拟机调试，也是手到擒来；而如今，在混合应用横行的年代，动不动就是React-Native、Ionic、Vue、MUI等一系列的混合架构写出来的Android，还没对其调试过，公司采用Ionic研发并遇到一些坑，特将调试过程记录下来。</p><a id="more"></a><p>首先百度一番，度娘告知有以下两种方法进行调试：</p><ol><li><p>在项目根目录执行以下命令，调试信息将在console中打印出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic run android -l -c</span><br></pre></td></tr></table></figure></li><li><p>Chrome调试</p></li></ol><p>由于是从项目中拿到App对其调试，没有工程，所以第一种调试方法无法测试。</p><p>第二种方法是网上应用最多的，我们来看看需要哪些操作：</p><ol><li><p>首先真机或虚拟机连接电脑（手机开USB调试模式，并且允许电脑能访问手机），并且在命令行中确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices</span><br></pre></td></tr></table></figure><p>确保设备连接到电脑。</p></li><li><p>在Chrome中打开<code>chrome://inspect/#devices</code>，可以在Remote Target中看到已经连接的手机和手机中已经开启的应用线程。</p></li><li><p>找到需要调试的App，点击旁边的inspect（注意：电脑要能科学上网下载一些依赖，不然会显示404或一片空白，这些依赖会缓存下来，不清理缓存的话只需第一次运行时翻墙即可）</p></li><li><p>最重要的一点是，Ionic打的包一定是debug包，否则在Remote Target中是看不到该应用的，也就无法调试咯。</p></li></ol><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Ionic的Android端调试：&lt;/strong&gt;&lt;br&gt;在以往Android原生开发时，App的调试用真机很是简单，即便是虚拟机调试，也是手到擒来；而如今，在混合应用横行的年代，动不动就是React-Native、Ionic、Vue、MUI等一系列的混合架构写出来的Android，还没对其调试过，公司采用Ionic研发并遇到一些坑，特将调试过程记录下来。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Ionic" scheme="https://ibrucekong.github.io/tags/Ionic/"/>
    
      <category term="Android" scheme="https://ibrucekong.github.io/tags/Android/"/>
    
      <category term="Chrome" scheme="https://ibrucekong.github.io/tags/Chrome/"/>
    
      <category term="调试" scheme="https://ibrucekong.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>入坑公路车</title>
    <link href="https://ibrucekong.github.io/posts/1652333246/"/>
    <id>https://ibrucekong.github.io/posts/1652333246/</id>
    <published>2018-07-30T11:25:06.000Z</published>
    <updated>2018-07-30T11:25:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第一辆公路车：</strong><br>公路车第一次长草是在过了年的时候，以前也经常骑自行车，从小学三年级骑到大四毕业，车子就是很平常的平把山地车或者休闲车，对于小弯把公路车还真没接触过，这草说长就是疯长啊，果断收割。</p><a id="more"></a><p>草已经长了快半年了，在网上也刷了不少相关的帖子，一直没忍心入坑。顾虑有以下两点：</p><ol><li>买了主要通勤用，家里可以放心，停在公司真的是不放心；</li><li>平时练腿，健身健体，由于搬砖的工作性质，需要适当调节一下运动时间。</li></ol><p>就在昨天，小伙伴们已经购买了属于自己的拉轰电动，我也是差一点没忍住，当时三个人，但是电驴的配色只有两辆了，配色不够，我就“大方的”把机会让给他们俩了，更进一步的为我入坑公路车提供了绝佳的机会。</p><p>今天在另一个朋友的陪同下，来到“XX捷安特专卖店”。之前在网上也浏览过一些博客、帖子，针对捷安特的公路车也了解了一些，但是真到了专卖店里，和老板攀谈起来还是有些切啊。</p><p>由于预算（穷）的原因，心里只存放了SCR1、SCR2。首先，试骑了SCR2，此车入门偏下档次，就不再贴太多相关信息，骑了一圈就pass了；试骑SCR1，也是入门车，比SCR2贵1000钢镚，试骑比较了确实不一样，车架轻（前叉是碳纤维）而且稍有推背感（七哥说的，也确实是），最后选择了这款的原因有以下几点（又要吃土了）：</p><ol><li>车比较轻，前叉是碳纤维，有效降低车头重量，并且提高刚性和吸震性；</li><li>涂装也比较喜欢，SCR2是黑白，SCR1有亮绿和消光亮黑，选择了后者；</li><li>没有螳螂须，内走线，逼格再次提升；</li><li>车架由GIANT 自家的ALUXX SL铝材，有效降低了整车重量。</li></ol><p>由于对公路车还不够了解，有些优缺点还需要继续发掘。</p><p>配置详细信息如下：</p><table><thead><tr><th>描述</th><th>型号</th></tr></thead><tbody><tr><td>车架</td><td>GIANT ALUXX SL</td></tr><tr><td>前叉</td><td>碳纤维公路前叉</td></tr><tr><td>撤吧</td><td>铝合金管公路把</td></tr><tr><td>车首竖杆</td><td>铝合金竖杆</td></tr><tr><td>座垫</td><td>GIANT CONTACT 座垫</td></tr><tr><td>座垫杆</td><td>铝合金 D 型座垫杆</td></tr><tr><td>变速把手</td><td>SHIMANO ST-R3000</td></tr><tr><td>前变速器</td><td>SHIMANO FD-R3000</td></tr><tr><td>后变速器</td><td>SHIMANO RD-R3000</td></tr><tr><td>飞轮</td><td>SHIMANO CS-HG400-9</td></tr><tr><td>刹车</td><td>SHIMANO BR-R3000</td></tr><tr><td>大齿盘</td><td>铝合金中空一体齿盘</td></tr><tr><td>轮圈</td><td>铝合金高框圈</td></tr><tr><td>花鼓</td><td>铝合金培林花鼓</td></tr><tr><td>钢丝</td><td>HTSS 钢丝</td></tr><tr><td>轮胎</td><td>GIANT S-R4 700X25C轮胎</td></tr><tr><td>后避震器</td><td>无</td></tr><tr><td>SIZE</td><td>S码 700CX445</td></tr></tbody></table><p>入门级别的公路车，已经很满意了，毕竟花了那么多大洋，未来几个月要吃土了。</p><p>此处就不一一贴局部细节图了，只贴一些低像素的整车效果图：</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bike.png" alt="Giant SCR1"></p><p><em>车子有了，还差很多装备，骑行服、锁踏、锁鞋、心率计、功率计等等，试问：我需要吗？</em></p><p>另外说下我的计划（这就是浪的理由？）：</p><ol><li>平时保证通勤；</li><li>要有骑行计划，练踏频，练力量，健身咯；</li><li>这就是个附带效果了，争取三个月能减些脂肪，体重降2.5Kg；</li><li>有可能的话，最好能跟队骑行。</li></ol><p>看似简单的想法，但需要十足长期的努力，坚持很重要，加油！</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第一辆公路车：&lt;/strong&gt;&lt;br&gt;公路车第一次长草是在过了年的时候，以前也经常骑自行车，从小学三年级骑到大四毕业，车子就是很平常的平把山地车或者休闲车，对于小弯把公路车还真没接触过，这草说长就是疯长啊，果断收割。&lt;/p&gt;
    
    </summary>
    
      <category term="bike" scheme="https://ibrucekong.github.io/categories/bike/"/>
    
    
      <category term="自行车" scheme="https://ibrucekong.github.io/tags/%E8%87%AA%E8%A1%8C%E8%BD%A6/"/>
    
      <category term="公路车" scheme="https://ibrucekong.github.io/tags/%E5%85%AC%E8%B7%AF%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Ionic使用百度地图弹窗并响应点击事件</title>
    <link href="https://ibrucekong.github.io/posts/2994729501/"/>
    <id>https://ibrucekong.github.io/posts/2994729501/</id>
    <published>2018-07-15T07:54:27.000Z</published>
    <updated>2018-07-15T07:54:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Ionic响应百度地图弹窗中的点击事件：</strong><br>Ionic使用的语法TypeScript，有一套自己的生命周期，和ES5之前的使用习惯不相同，变量作用域不尽相同。在Ionic中使用百度地图，也会踩一些坑，最近在业务中遇到了这样的需求，百度地图弹窗中动态写的HTML布局的响应事件无法拿到。</p><a id="more"></a><h3 id="在Ionic中使用百度地图"><a href="#在Ionic中使用百度地图" class="headerlink" title="在Ionic中使用百度地图"></a>在Ionic中使用百度地图</h3><h4 id="初始化地图"><a href="#初始化地图" class="headerlink" title="初始化地图"></a>初始化地图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 1.首先在index.html中引入百度地图的URL（其中要有申请的KEY）</span><br><span class="line">// &lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=3.0&amp;ak=您的密钥&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">// 2.新建map组件，在ts文件中输入以下内容</span><br><span class="line">ionViewWillEnter()&#123;</span><br><span class="line">    let map = new BMap.Map(&quot;allmap&quot;);// allmap是在html布局中定义的&lt;div id=&quot;allmap&quot;&gt;&lt;/div&gt;</span><br><span class="line">    let point = new BMap.Point(116.417, 39.921);// 初始化地图</span><br><span class="line">    map.centerAndZoom(point, 15);// 初始化地图视图</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加Marker"><a href="#添加Marker" class="headerlink" title="添加Marker"></a>添加Marker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 3.在 map.centerAndZoom(point, 15) 的下一行继续添加以下内容</span><br><span class="line">let marker = new BMap.Marker(point);// 初始化Marker对象</span><br><span class="line">map.addOverlay(marker);// 将marker放置到地图上</span><br></pre></td></tr></table></figure><h4 id="为marker添加点击事件"><a href="#为marker添加点击事件" class="headerlink" title="为marker添加点击事件"></a>为marker添加点击事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 4.在 map.addOverlay(marker) 的下一行继续添加以下内容</span><br><span class="line">marker.addEventListener(&quot;click&quot;, function()&#123;</span><br><span class="line">    // TODO 做其他事情</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="弹出信息窗"><a href="#弹出信息窗" class="headerlink" title="弹出信息窗"></a>弹出信息窗</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 5.在 map.addOverlay(marker) 和 marker.addEventListener 之间插入以下内容</span><br><span class="line">let options = &#123;</span><br><span class="line">    width: 200,</span><br><span class="line">    height: 100,</span><br><span class="line">    title: &quot;测试弹窗的标题&quot;</span><br><span class="line">&#125;; // 定义弹出窗参数</span><br><span class="line">let htm = &apos;&lt;div&gt;内容：这是内容主体&lt;/div&gt;&lt;div&gt;&lt;button id=&quot;confirm&quot; onclick=&quot;test()&quot;&gt;确定&lt;/button&gt;&lt;/div&gt;&apos;;</span><br><span class="line">let infoWindow = new BMap.InfoWindow(htm, options); // 初始化弹出窗对象</span><br><span class="line"></span><br><span class="line">// 6.在 TODO 下面继续添加以下内容</span><br><span class="line">map.openInfoWindow(infoWindow, point); // 点击marker执行该行代码，弹出信息窗</span><br><span class="line"></span><br><span class="line">// 7.在该ts文件中，添加test方法</span><br><span class="line">test()&#123;</span><br><span class="line">    console.log(&quot;如果我再控制台中打印出来，说明弹窗中的button响应了，反之。&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制台没打印"><a href="#控制台没打印" class="headerlink" title="控制台没打印"></a>控制台没打印</h4><p>打印失败了！！！</p><p>有人分析说，<code>test</code>需要用<code>this</code>来调用，写成这个样子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let infoWindow = new BMap.InfoWindow(&apos;&lt;div&gt;内容：这是内容主体，啦啦啦&lt;/div&gt;&lt;div&gt;&lt;button id=&quot;confirm&quot; onclick=&quot;this.test()&quot;&gt;确定&lt;/button&gt;&lt;/div&gt;&apos;, options); // 初始化弹出窗对象</span><br></pre></td></tr></table></figure><p>同样的，还是失败了。</p><p>分析原因，是Ionic在初始化页面时，弹窗的布局信息并没有跟着初始化，而绑定的<code>test()</code>方法也没有初始化，所以绑定的方法无效。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>那怎么样才能保证能将<code>test()</code>方法绑定到<code>button</code>上的呢？</p><p>其实，我们可以曲线救国，让绑定事件在初始化弹窗之后，弹窗之前绑定，这样既可以有效的防止页面初始化带来的影响，又可以顺利绑定事件，下面是我的做法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">// 以上完整代码</span><br><span class="line">// 1.首先在index.html中引入百度地图的URL（其中要有申请的KEY）</span><br><span class="line">// &lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=3.0&amp;ak=您的密钥&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">// 2.新建map组件，在ts文件中输入以下内容</span><br><span class="line">ionViewWillEnter()&#123;</span><br><span class="line">    let map = new BMap.Map(&quot;allmap&quot;);// allmap是在html布局中定义的&lt;div id=&quot;allmap&quot;&gt;&lt;/div&gt;</span><br><span class="line">    let point = new BMap.Point(116.417, 39.921);// 初始化地图</span><br><span class="line">    map.centerAndZoom(point, 15);// 初始化地图视图</span><br><span class="line">    </span><br><span class="line">    // 3.在 map.centerAndZoom(point, 15) 的下一行继续添加以下内容</span><br><span class="line">    let marker = new BMap.Marker(point);// 初始化Marker对象</span><br><span class="line">    map.addOverlay(marker);// 将marker放置到地图上</span><br><span class="line">    </span><br><span class="line">    // 5.在 map.addOverlay(marker) 和 marker.addEventListener 之间插入以下内容</span><br><span class="line">    let options = &#123;</span><br><span class="line">        width: 200,</span><br><span class="line">        height: 100,</span><br><span class="line">        title: &quot;测试弹窗的标题&quot;</span><br><span class="line">    &#125;; // 定义弹出窗参数</span><br><span class="line">    let htm = &apos;&lt;div&gt;内容：这是内容主体&lt;/div&gt;&lt;div&gt;&lt;button id=&quot;confirm&quot;&gt;确定&lt;/button&gt;&lt;/div&gt;&apos;;</span><br><span class="line">    let infoWindow = new BMap.InfoWindow(htm, options); // 初始化弹出窗对象</span><br><span class="line"></span><br><span class="line">    // 4.在 map.addOverlay(marker) 的下一行继续添加以下内容</span><br><span class="line">    let that = this;</span><br><span class="line">    marker.addEventListener(&quot;click&quot;, function()&#123;</span><br><span class="line">        // TODO 做其他事情</span><br><span class="line">        // 绑定监听事件</span><br><span class="line">        document.getElementById(&quot;confirm&quot;).onclick = that.test;</span><br><span class="line">        map.openInfoWindow(infoWindow, point); // 点击marker执行该行代码，弹出信息窗</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 7.在该ts文件中，添加test方法</span><br><span class="line">test()&#123;</span><br><span class="line">    console.log(&quot;如果我再控制台中打印出来，说明弹窗中的button响应了，反之。&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样子再测试的话，控制台中就可以打印<code>如果我再控制台中打印出来，说明弹窗中的button响应了，反之。</code></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上问题在常规的B/S项目中不会发生，这是因为在Ionic项目中，使用的是Angular语法，即TypeScript（JavaScript的超集），该语法自己定义了一些新特性，使得开发效率更高，语法更简洁，再加上ES6（或更高）新特性，使得在动态生成的页面上绑定监听事件失效，所以可以通过延迟绑定或者适当时机绑定来解决。</p><p>Ionic做项目和以往的ES5或原生项目相比，效率更高、兼容多平台、开源组件更多、也更加美观，是一个比较好的路子。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Ionic响应百度地图弹窗中的点击事件：&lt;/strong&gt;&lt;br&gt;Ionic使用的语法TypeScript，有一套自己的生命周期，和ES5之前的使用习惯不相同，变量作用域不尽相同。在Ionic中使用百度地图，也会踩一些坑，最近在业务中遇到了这样的需求，百度地图弹窗中动态写的HTML布局的响应事件无法拿到。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Ionic" scheme="https://ibrucekong.github.io/tags/Ionic/"/>
    
      <category term="百度地图" scheme="https://ibrucekong.github.io/tags/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="点击事件" scheme="https://ibrucekong.github.io/tags/%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>吾爱破解论坛2018年7月21日暑假开放注册通知</title>
    <link href="https://ibrucekong.github.io/posts/2639421812/"/>
    <id>https://ibrucekong.github.io/posts/2639421812/</id>
    <published>2018-07-13T08:32:10.000Z</published>
    <updated>2018-07-13T08:32:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>吾爱破解论坛注册喜讯：</strong><br>吾爱开放注册又来了，此次是2018年第二次开放注册，3月13日没能上车的小伙伴，这次正值周六，天时地利人和，要整理好自己的注册资料，期待21日的到来吧。</p><a id="more"></a><div style="text-align: center;font-weight: bold;font-size: 2rem; color: red"><br>    喜讯、喜讯、喜讯<br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    <span>吾爱破解论坛开通开放注册</span><br>    <span>2018年7月21日12:00-14:00和20:00-22:00</span><br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem;padding-top: 0;margin-top: 0;height: 106px;line-height: 106px"><a href="https://www.52pojie.cn/?fromuid=575811" style="text-align: center;" target="_blank" rel="noopener">我要吾爱</a></div><br><div></div><br><strong><em>注册注意事项：</em></strong><br><br>1. 吸取上次上车失败的教训！！！<br>2. 注意不要错过注册时间<br>3. 认真读注册须知（需要等10分钟）<br>4. 事先把注册信息写在本子或word里（独一无二的邮箱和用户名） <a href="https://www.52pojie.cn/misc.php?mod=faq&amp;action=faq&amp;id=15&amp;messageid=16" target="_blank" rel="noopener">需要准备什么</a><br>5. 耐心检查填写内容（看是否都符合要求）<br>6. 邮箱验证阶段，有的要到邮箱的垃圾箱中查看有没有验证邮件，而有的邮箱则需要设置白名单才能收到验证邮件 <a href="https://www.52pojie.cn/thread-98585-1-1.html" target="_blank" rel="noopener">帮助</a><br><br><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    祝愿小伙伴们都能获得自己的吾爱账号！<br></div><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;吾爱破解论坛注册喜讯：&lt;/strong&gt;&lt;br&gt;吾爱开放注册又来了，此次是2018年第二次开放注册，3月13日没能上车的小伙伴，这次正值周六，天时地利人和，要整理好自己的注册资料，期待21日的到来吧。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="活动" scheme="https://ibrucekong.github.io/tags/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="吾爱破解" scheme="https://ibrucekong.github.io/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>在Linux中解决跨网段访问服务</title>
    <link href="https://ibrucekong.github.io/posts/3249349784/"/>
    <id>https://ibrucekong.github.io/posts/3249349784/</id>
    <published>2018-03-27T11:30:36.000Z</published>
    <updated>2018-03-27T11:30:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在Linux中解决跨网段访问服务：</strong><br>有这样一个场景：在局域网中，两台电脑，A电脑使用交换机（192.168.72.33），B电脑使用WiFi（192.168.1.21），两者的网段不同，导致电脑A无法ping通电脑B。今天就来讲讲怎么在Linux中解决这个问题。</p><a id="more"></a><p>这是我在生产环境中遇到的一个问题，刚开始接触，踩了不小的坑，耽误了很长时间，以此来记录一下。</p><p>针对以上问题的解决办法就是：添加一个路由！</p><p>在A电脑中打开终端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ route add default gw 192.168.72.1</span><br></pre></td></tr></table></figure></p><p>加上后，发现可以ping通了，但是重启机器后，又无法ping通了。原因是上面加的路由是临时的，并未在系统中永久保存，如果需要添加永久路由，按照以下方法：</p><ul><li><p>打开终端，执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/rc.local</span><br></pre></td></tr></table></figure></li><li><p>在文档后插入一行，输入<em>route add default gw 192.168.72.1</em></p></li><li>按ESC键退出编辑状态，输入<code>:wq</code>，回车保存即可。</li></ul><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;在Linux中解决跨网段访问服务：&lt;/strong&gt;&lt;br&gt;有这样一个场景：在局域网中，两台电脑，A电脑使用交换机（192.168.72.33），B电脑使用WiFi（192.168.1.21），两者的网段不同，导致电脑A无法ping通电脑B。今天就来讲讲怎么在Linux中解决这个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="https://ibrucekong.github.io/categories/tools/"/>
    
    
      <category term="Linux" scheme="https://ibrucekong.github.io/tags/Linux/"/>
    
      <category term="Route" scheme="https://ibrucekong.github.io/tags/Route/"/>
    
  </entry>
  
  <entry>
    <title>在Linux中如何使用SCP快速拷贝数据</title>
    <link href="https://ibrucekong.github.io/posts/1224017506/"/>
    <id>https://ibrucekong.github.io/posts/1224017506/</id>
    <published>2018-03-19T10:44:52.000Z</published>
    <updated>2018-03-19T10:44:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在Linux中快速拷贝数据的工具：</strong></p><p>根据工作上的需求：一个场景，两台电脑，万千碎片数据，该怎么从A电脑拷贝这些数据到B电脑？直接复制、粘贴？先打包、再复制粘贴？方法有很多，但是很少人去分析拷贝数据的快慢。</p><a id="more"></a><p>上面说的问题，在Linux、Windows、Mac环境下都存在，这里只从Linux的角度来实现下。为什么呢？不知大家注意上面“万千碎片数据”字眼了吗，一般这样的字眼基本上会出现在服务器的存储中，而当今服务器使用最多的操作系统就是Linux，所以本文只针对Linux之间互传为例进行说明。</p><h2 id="SCP是什么"><a href="#SCP是什么" class="headerlink" title="SCP是什么"></a>SCP是什么</h2><p>scp是secure copy的简写，用于Linux下进行远程拷贝的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的（稍微会影响一点速度）。</p><h2 id="为什么要用SCP"><a href="#为什么要用SCP" class="headerlink" title="为什么要用SCP"></a>为什么要用SCP</h2><ol><li>如果服务器上没有配置FTP服务器，没有开启web服务器，也没有做共享，无法通过常规的途径获取文件时，可以考虑使用scp。</li><li>需要将本机文件上传至远程服务器上，远程服务器没有开启FTP服务器或共享，无法通过常规方法上传时，可以考虑scp。</li></ol><h2 id="场景简介"><a href="#场景简介" class="headerlink" title="场景简介"></a>场景简介</h2><p>假设以下两台电脑是通过公网连接的，只需要把局域网的IP换成公网的IP即可。</p><table><thead><tr><th>字段</th><th>A电脑</th><th>B电脑</th></tr></thead><tbody><tr><td>场景</td><td>CentOS6.5</td><td>Ubuntu16.04</td></tr><tr><td>用户名</td><td>root</td><td>bruce</td></tr><tr><td>IP</td><td>192.168.1.20</td><td>192.168.1.21</td></tr><tr><td>数据目录</td><td>/home/backups/</td><td>/media/bruce/backups/</td></tr><tr><td>文件</td><td>某些png图片</td><td>某些png图片</td></tr></tbody></table><h2 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h2><table><thead><tr><th>命令参数</th><th></th></tr></thead><tbody><tr><td>-1</td><td>强制scp命令使用协议ssh1</td></tr><tr><td>-2</td><td>强制scp命令使用协议ssh2</td></tr><tr><td>-4</td><td>强制scp命令只使用IPv4寻址</td></tr><tr><td>-6</td><td>强制scp命令只使用IPv6寻址</td></tr><tr><td>-B</td><td>使用批处理模式（传输过程中不询问传输口令或短语）</td></tr><tr><td>-C</td><td>允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</td></tr><tr><td>-p</td><td>保留原文件的修改时间，访问时间和访问权限。</td></tr><tr><td>-q</td><td>不显示传输进度条。</td></tr><tr><td>-r</td><td>递归复制整个目录。</td></tr><tr><td>-v</td><td>详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</td></tr><tr><td>-c cipher</td><td>以cipher将数据传输进行加密，这个选项将直接传递给ssh。</td></tr><tr><td>-F config</td><td>指定一个替代的ssh_config配置文件，此参数直接传递给ssh。</td></tr><tr><td>-i file</td><td>从identity_file指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</td></tr><tr><td>-l limit</td><td>限定用户所能使用的带宽，以Kbit/s为单位。</td></tr><tr><td>-o option</td><td>如果习惯于使用ssh_config(5)中的参数传递方式。</td></tr><tr><td>-P port</td><td>注意是大写的P, port是指定数据传输用到的端口号。</td></tr><tr><td>-S program</td><td>指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</td></tr></tbody></table><h2 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h2><ol><li>获取服务器上文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root@192.168.1.20:/home/backups/1.png /media/bruce/backups/1.png</span><br></pre></td></tr></table></figure><p>按回车键：</p><p>如果是第一次试用scp，会提示是否使用传输，输入yes，回车；</p><p>然后接着提示输入root用户的密码（输入密码时是看不到字符出现的，输入好直接回车）</p><ol start="2"><li>获取服务器上的目录</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root@192.168.1.20:/home/backups/ /media/bruce/backups/</span><br></pre></td></tr></table></figure><ol start="3"><li>将本地文件上传至服务器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /media/bruce/backups/2.png root@192.168.1.20:/home/backups/2.png</span><br></pre></td></tr></table></figure><ol start="4"><li>将本地目录上传至服务器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /media/bruce/backups/ root@192.168.1.20:/home/backups/</span><br></pre></td></tr></table></figure><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;在Linux中快速拷贝数据的工具：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据工作上的需求：一个场景，两台电脑，万千碎片数据，该怎么从A电脑拷贝这些数据到B电脑？直接复制、粘贴？先打包、再复制粘贴？方法有很多，但是很少人去分析拷贝数据的快慢。&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="https://ibrucekong.github.io/categories/tools/"/>
    
    
      <category term="SCP" scheme="https://ibrucekong.github.io/tags/SCP/"/>
    
      <category term="Linux" scheme="https://ibrucekong.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建自己的博客天地(下)</title>
    <link href="https://ibrucekong.github.io/posts/3337762157/"/>
    <id>https://ibrucekong.github.io/posts/3337762157/</id>
    <published>2018-03-13T10:59:45.000Z</published>
    <updated>2018-03-13T10:59:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>建站，重在折腾：</strong></p><p>在建站这个系列中，上一篇主要讲了怎么搭建博客环境，初始化博客项目，怎么新增博文，以及怎么部署博客。本次主要讲解一下<code>config.yml</code>文件，怎么巧妙的使用<code>HTTPS</code>的图床，还有就是听起来高大尚的<strong>绑定域名</strong>。</p><a id="more"></a><p>上次在《从零开始搭建自己的博客天地(上)》中讲过Coding建站的文章，时隔那么久，估计很多小伙伴都遗忘了，这里提供了上篇文章的<a href="https://blog.brucekong.com/posts/3667539278/" target="_blank" rel="noopener">链接</a>，或者使用站内搜索功能 [Ctrl+F]：从零开始搭建自己的博客天地(上) ，阅读上篇之后再读此篇效果更好。</p><h2 id="解析config-yml文件"><a href="#解析config-yml文件" class="headerlink" title="解析config.yml文件"></a>解析config.yml文件</h2><p>关于其中的参数，大家可以参照官网提供的教程（<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">中文</a>、<a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">English</a>）<br>一般来讲，需要大家修改以下参数：</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">这个是你网站的标题</td></tr><tr><td style="text-align:left">subtitle</td><td style="text-align:left">这个是你网站的副标题</td></tr><tr><td style="text-align:left">description</td><td style="text-align:left">这个是你网站的描述信息</td></tr><tr><td style="text-align:left">author</td><td style="text-align:left">这个是你的名称</td></tr><tr><td style="text-align:left">url</td><td style="text-align:left">这个是你网站的地址</td></tr><tr><td style="text-align:left">theme</td><td style="text-align:left">这个是你引用哪个博客主题，设置为false表示不使用主题</td></tr><tr><td style="text-align:left">deploy</td><td style="text-align:left">这个是你想把博客部署到哪个托管平台上</td></tr></tbody></table><h2 id="使用图床管理博文图片"><a href="#使用图床管理博文图片" class="headerlink" title="使用图床管理博文图片"></a>使用图床管理博文图片</h2><p>当前使用比较多的图床系统包括七牛、又拍云、新浪、极简图床，其中七牛和又拍云是收费图床，后面两个是免费的，知乎大佬都给过说明，好与坏戳<a href="https://www.zhihu.com/question/21667151/answer/74657827" target="_blank" rel="noopener">我</a>。</p><p>图床是有了，但是支不支持HTTPS又是另一回事，关于这个问题，放给大家去研究，这里不再细说。</p><p>当然对于小白（比如我）来说，使用Coding仓库作为图床也是不错的，而且还支持HTTPS，但是唯一的缺点就是速度太慢了。</p><p>使用Coding方法：</p><ul><li>在Coding中新建一个仓库，例如叫images；</li><li>clone仓库到本地，将图片添加到仓库，并push到Coding；</li><li>打开网页端的images仓库，点击需要的使用的图片，得到链接（url）；</li><li>将url中的blob改成raw即可使用。</li></ul><p>这个方法不推荐使用，有条件的还是使用七牛，毕竟速度还是有保障的。</p><h2 id="域名使用"><a href="#域名使用" class="headerlink" title="域名使用"></a>域名使用</h2><p>为了让自己的博客显得更高大尚的话，可以将自己的博客绑定自己的域名。</p><p>在个人博客中使用域名，首先要购买一个域名，域名根据不同的组合，价格不一样，当然也有免费的。根据个人使用经验，不建议使用免费的，常言道：免费的既是最贵的。因为在大多数情况下，域名就代表了你的博客，但是大部分免费域名只是免费一年，之后是需要购买的，域名到期后，很多人都觉得不值得续费，但是又有很多信息都是绑定的这个域名，从而陷入两难的境地。所以我建议大家好好考虑，尽量购买一个自己中意的，能长期使用的域名。</p><p>罗里吧嗦了那么多，小编总结了以下几点：</p><ul><li>一定是自己中意的，并能保证持续使用的</li></ul><ul><li>尽量购买<code>com</code>、<code>net</code>、<code>site</code>、<code>cc</code>、<code>top</code>、<code>club</code>等一级域名作为博客域名</li><li>域名越短越好</li><li>尽量只使用字母或数字</li><li>域名能有一定的含义或容易记住</li></ul><p>小编是在阿里云上购买的域名，那小编就讲述一下自己是怎么将自己的域名绑定到自己的博客上的。</p><ul><li>首先，登陆阿里云官网，注册账号并登陆，并在<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">万网</a>上购买自己心仪的域名</li><li>然后，打开“控制台”（右上角处），在左侧列表中找到倒数第二行“域名与网站”，点击“云解析DNS”</li><li>在右侧看到购买的域名，点击“解析设置”</li><li>为确保成功，先删除所有的解析设置</li><li>点击右上角的”添加解析“，记录类型选择”CNAME“，主机记录填入”@“，解析路线默认即可，记录值填入”demo.coding.me”，确认即可。</li></ul><p><strong>注意：以上的所填内容，只填引号内部的</strong></p><p>到此，稍等半小时，等待解析设置生效。</p><p>然后去设置Coding中博客：</p><ul><li>在<code>博客根目录/source</code>下新建一个CNAME文本，输入你的域名（例如demo.com），push到Coding中</li><li>打开<code>https://coding.net/u/demo/p/demo.coding.me/git/pages/static</code>，在“自定义域名”处绑定自己的域名即可。</li></ul><p>稍等片刻，在浏览器中打开你的域名（demo.com），不出意外就能解析到你的博客了。</p><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;建站，重在折腾：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在建站这个系列中，上一篇主要讲了怎么搭建博客环境，初始化博客项目，怎么新增博文，以及怎么部署博客。本次主要讲解一下&lt;code&gt;config.yml&lt;/code&gt;文件，怎么巧妙的使用&lt;code&gt;HTTPS&lt;/code&gt;的图床，还有就是听起来高大尚的&lt;strong&gt;绑定域名&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="Hexo" scheme="https://ibrucekong.github.io/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://ibrucekong.github.io/tags/Blog/"/>
    
  </entry>
  
</feed>
