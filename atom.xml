<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ibrucekong</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ibrucekong.github.io/"/>
  <updated>2018-10-30T03:10:05.000Z</updated>
  <id>https://ibrucekong.github.io/</id>
  
  <author>
    <name>ibrucekong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>吾爱破解论坛2018年11月11日开放注册通知</title>
    <link href="https://ibrucekong.github.io/posts/3256505474/"/>
    <id>https://ibrucekong.github.io/posts/3256505474/</id>
    <published>2018-10-30T03:10:05.000Z</published>
    <updated>2018-10-30T03:10:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>吾爱破解论坛注册喜讯：</strong><br>吾爱开放注册又又来了，此次是2018年第三次开放注册，在今年前两次未能成功上车的小伙伴，这次可要抓住了，又是正值周末，又是天时地利人和，赶快整理好自己的注册资料，期待“11.11”的到来吧。</p><a id="more"></a><div style="text-align: center;font-weight: bold;font-size: 2rem; color: red"><br>    喜讯、喜讯、喜讯<br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    <span>吾爱破解论坛开通开放注册</span><br>    <span>2018年11月11日12:00-14:00和20:00-22:00</span><br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem;padding-top: 0;margin-top: 0;height: 106px;line-height: 106px"><a href="https://www.52pojie.cn/?fromuid=575811" style="text-align: center;" target="_blank" rel="noopener">我要吾爱</a></div><br><div></div><p><strong><em>注册注意事项：</em></strong></p><ol><li>吸取上次上车失败的教训！！！</li><li>注意不要错过注册时间</li><li>认真读注册须知（需要等10分钟）</li><li>事先把注册信息写在本子或word里（独一无二的邮箱和用户名） <a href="https://www.52pojie.cn/misc.php?mod=faq&amp;action=faq&amp;id=15&amp;messageid=16" target="_blank" rel="noopener">需要准备什么</a></li><li>耐心检查填写内容（看是否都符合要求）</li><li>邮箱验证阶段，有的要到邮箱的垃圾箱中查看有没有验证邮件，而有的邮箱则需要设置白名单才能收到验证邮件 <a href="https://www.52pojie.cn/thread-98585-1-1.html" target="_blank" rel="noopener">帮助</a></li><li>提醒一下，在注册成功后，要记得保持活跃度哦，不要只在官网签到，还要有互动（发帖、回复），不然会被清理的。</li></ol><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    祝愿小伙伴们都能获得自己的吾爱账号！<br></div><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;吾爱破解论坛注册喜讯：&lt;/strong&gt;&lt;br&gt;吾爱开放注册又又来了，此次是2018年第三次开放注册，在今年前两次未能成功上车的小伙伴，这次可要抓住了，又是正值周末，又是天时地利人和，赶快整理好自己的注册资料，期待“11.11”的到来吧。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="活动" scheme="https://ibrucekong.github.io/tags/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="吾爱破解" scheme="https://ibrucekong.github.io/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>济南的中秋</title>
    <link href="https://ibrucekong.github.io/posts/4186109665/"/>
    <id>https://ibrucekong.github.io/posts/4186109665/</id>
    <published>2018-09-21T08:39:57.000Z</published>
    <updated>2018-09-21T08:39:57.000Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/jinan-mid-autumn.png" alt=""><br></div><a id="more"></a><p><br><br><br><br><br></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <span style="font-size: 3rem;color: #696969;background-image: -webkit-linear-gradient(92deg, #d4290e, #ff71fb);-webkit-background-clip: text;-webkit-text-fill-color: transparent;-webkit-animation: hue 60s infinite linear;">中秋一人，亦可三人成酒！</span><br></div><p><br></p><p><br></p><p><br></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;div style=&quot;text-align: center;padding: 0; margin: 0;&quot;&gt;&lt;br&gt;    &lt;img class=&quot;wechat-qrcode&quot; src=&quot;https://coding.net/u/ibrucekong/p/images/git/raw/master/jinan-mid-autumn.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="中秋" scheme="https://ibrucekong.github.io/tags/%E4%B8%AD%E7%A7%8B/"/>
    
      <category term="济南" scheme="https://ibrucekong.github.io/tags/%E6%B5%8E%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>BIMserver入门笔记 - 02登录及模型展示</title>
    <link href="https://ibrucekong.github.io/posts/3230248873/"/>
    <id>https://ibrucekong.github.io/posts/3230248873/</id>
    <published>2018-09-17T05:35:54.000Z</published>
    <updated>2018-09-17T05:35:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>BIMserver登录及模型展示：</strong><br>BIMserver资料较少，没有成熟的接口文档，没有成熟的示例程序，但是BIMserver为我们提供了一个运维程序、示例数据，在Github中的<a href="https://github.com/opensourceBIM" target="_blank" rel="noopener">opensourceBIM</a>这个开源组织，给开发者提供了不少源码级的学习内容。从运维程序中我们可以梳理出BIMserver的执行过程，方便我们二次开发。</p><a id="more"></a><ol><li><p><a href="../3869274485/">BIMserver入门笔记 - 01环境搭建、数据导入及预览</a></p></li><li><p>BIMserver入门笔记 - 02登录及模型展示</p></li></ol><p>从上一节我们了解了BIMserver的安装配置和运维的使用，但是在项目中我们不可能去直接用BIMserver的运行界面，需要我根据自己的项目需求来自定义自己的BIM展示界面和功能，所以我们就要从开发者角度去审视BIMserver。</p><h3 id="准备什么"><a href="#准备什么" class="headerlink" title="准备什么"></a>准备什么</h3><p>既然是开发者，前端就至少要懂前端的，后端至少要懂后端的，最好两者都熟悉。准备工作除了能搭建起BIMserver环境，还要有以下的几个特点（建议）：</p><ul><li>一件趁手的兵器——IDE（前端就WebStorm咯，涉及到后台就IDEA咯）</li><li>一个性能不错的本子——内存和CPU性能要好，关键还要有不错的显卡</li></ul><h3 id="需要什么"><a href="#需要什么" class="headerlink" title="需要什么"></a>需要什么</h3><ul><li><p>一个敢于钻研的劲头</p></li><li><p>一个不服输、有韧性的心</p></li></ul><p><em>新兴的技术或者前沿的技术，必要要耐得住性子</em></p><p>除了精神上的鼓舞，我还要掌握一些查资料的技能，特别是在对BIMserver二次开发中，资料少之又少，整个腾讯就两个群（一个群人数不超过一只手的手指头数）。另外官方也没有提供<code>Step by step</code>和接口文档，示例代码也是少的可怜，Stack Overflow、CSDN和博客园中资料也是凤毛麟角，所以二次开发的参考资料还是去查看官方的<a href="https://github.com/opensourceBIM/BIMserver/tree/parent-1.5.88/PluginBase/src/org/bimserver/shared/interfaces" target="_blank" rel="noopener">接口源码</a>，比如最常用的<a href="https://github.com/opensourceBIM/BIMserver/blob/parent-1.5.88/PluginBase/src/org/bimserver/shared/interfaces/ServiceInterface.java" target="_blank" rel="noopener">接口源码</a>。</p><h3 id="万里长征第一步"><a href="#万里长征第一步" class="headerlink" title="万里长征第一步"></a>万里长征第一步</h3><p>万事开头难，先起个<a href="https://github.com/ibrucekong/hellobim/" target="_blank" rel="noopener">Hellobim</a>吧！</p><h4 id="设计布局"><a href="#设计布局" class="headerlink" title="设计布局"></a>设计布局</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"maincontainer"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"topsection"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hellobim<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"contentwrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colmid"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colright"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"col1wrap"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"col1pad"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"viewerContainer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"treeContainer"</span> <span class="attr">class</span>=<span class="string">"bimsurfer-static-tree"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dataContainer"</span> <span class="attr">class</span>=<span class="string">"bimsurfer-metadata"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="变量配置"><a href="#变量配置" class="headerlink" title="变量配置"></a>变量配置</h4><p>由于JavaScript代码比较多，所以拆分成了三部分，一个是变量配置模块，一个是登录模块，一个是模型加载展示。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> projectName = <span class="string">'test1'</span>; <span class="comment">// address地址下的BIMserver服务中必须有test1项目，而且还要有模型</span></span><br><span class="line"><span class="keyword">var</span> address = <span class="string">"http://192.168.1.116:8082"</span>; <span class="comment">// 这三个是在安装BIMserver时配置的地址、账户和密码</span></span><br><span class="line"><span class="keyword">var</span> account = <span class="string">"admin@163.com"</span>;</span><br><span class="line"><span class="keyword">var</span> password = <span class="string">"1234567890"</span>;</span><br><span class="line"><span class="keyword">var</span> token, poid, lastRevisionId; <span class="comment">// 这三个是在模型加载时需要用到的</span></span><br><span class="line"><span class="keyword">var</span> metadata; <span class="comment">// 这是右侧元数据</span></span><br></pre></td></tr></table></figure><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录代码</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">loadFromBimserver</span>(<span class="params">address, username, password, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> BimServerClient(address);</span><br><span class="line">    client.init(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      client.login(username, password, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 根据项目名称获取该项目的模型场景</span></span><br><span class="line">        client.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getAllProjects"</span>, &#123;</span><br><span class="line">          onlyTopLevel: <span class="literal">true</span>,</span><br><span class="line">          onlyActive: <span class="literal">true</span></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">projects</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> totalFound = <span class="number">0</span>;</span><br><span class="line">          projects.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">project</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (project.name === projectName) &#123;</span><br><span class="line">              token = client.token;</span><br><span class="line">              poid = project.oid;</span><br><span class="line">              lastRevisionId = project.lastRevisionId;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.error(error);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    loadFromBimserver(address, account, password);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="模型加载及展示"><a href="#模型加载及展示" class="headerlink" title="模型加载及展示"></a>模型加载及展示</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载模型并展示</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">"bimsurfer/src/BimSurfer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/BimServerModelLoader"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/StaticTreeRenderer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/src/MetaDataRenderer"</span>,</span><br><span class="line">    <span class="string">"bimsurfer/lib/domReady!"</span>],</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">BimSurfer, BimServerModelLoader, StaticTreeRenderer, MetaDataRenderer</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">processBimSurferModel</span>(<span class="params">bimSurferModel</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      bimSurferModel.getTree().then(<span class="function"><span class="keyword">function</span> (<span class="params">tree</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> domtree = <span class="keyword">new</span> StaticTreeRenderer(&#123;</span><br><span class="line">          domNode: <span class="string">'treeContainer'</span></span><br><span class="line">        &#125;);</span><br><span class="line">        domtree.addModel(&#123;<span class="attr">name</span>: <span class="string">""</span>, <span class="attr">id</span>: lastRevisionId, <span class="attr">tree</span>: tree&#125;);</span><br><span class="line">        domtree.build();</span><br><span class="line">        metadata = <span class="keyword">new</span> MetaDataRenderer(&#123;</span><br><span class="line">          domNode: <span class="string">'dataContainer'</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        metadata.addModel(&#123;<span class="attr">name</span>: <span class="string">""</span>, <span class="attr">id</span>: lastRevisionId, <span class="attr">model</span>: bimSurferModel&#125;);</span><br><span class="line"></span><br><span class="line">        bimSurfer.on(<span class="string">"selection-changed"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">selected</span>) </span>&#123;</span><br><span class="line">          domtree.setSelected(selected, domtree.SELECT_EXCLUSIVE);</span><br><span class="line">          metadata.setSelected(selected);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        domtree.on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">oid, selected</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (selected.length) &#123;</span><br><span class="line">            bimSurfer.viewFit(&#123;</span><br><span class="line">              ids: selected,</span><br><span class="line">              animate: <span class="literal">true</span></span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">          bimSurfer.setSelection(&#123;</span><br><span class="line">            ids: selected,</span><br><span class="line">            clear: <span class="literal">true</span>,</span><br><span class="line">            selected: <span class="literal">true</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bimSurfer = <span class="keyword">new</span> BimSurfer(&#123;</span><br><span class="line">      domNode: <span class="string">"viewerContainer"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.bimSurfer = bimSurfer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bimServerClient = <span class="keyword">new</span> BimServerClient(address, <span class="literal">null</span>);</span><br><span class="line">    bimServerClient.init(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      bimServerClient.setToken(token, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> modelLoader = <span class="keyword">new</span> BimServerModelLoader(bimServerClient, bimSurfer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> models = &#123;&#125;; <span class="comment">// roid -&gt; Model</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> nrProjects;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadModels</span>(<span class="params">models, totalBounds</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> center = [</span><br><span class="line">            (totalBounds.min[<span class="number">0</span>] + totalBounds.max[<span class="number">0</span>]) / <span class="number">2</span>,</span><br><span class="line">            (totalBounds.min[<span class="number">1</span>] + totalBounds.max[<span class="number">1</span>]) / <span class="number">2</span>,</span><br><span class="line">            (totalBounds.min[<span class="number">2</span>] + totalBounds.max[<span class="number">2</span>]) / <span class="number">2</span></span><br><span class="line">          ];</span><br><span class="line"></span><br><span class="line">          <span class="keyword">var</span> globalTransformationMatrix = [</span><br><span class="line">            <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">            <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">            <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">            -center[<span class="number">0</span>], -center[<span class="number">1</span>], -center[<span class="number">2</span>], <span class="number">1</span></span><br><span class="line">          ];</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> roid <span class="keyword">in</span> models) &#123;</span><br><span class="line">            <span class="keyword">var</span> model = models[roid];</span><br><span class="line">            modelLoader.setGlobalTransformationMatrix(globalTransformationMatrix);</span><br><span class="line">            modelLoader.loadFullModel(model).then(<span class="function"><span class="keyword">function</span> (<span class="params">bimSurferModel</span>) </span>&#123;</span><br><span class="line">              processBimSurferModel(bimSurferModel);</span><br><span class="line">              <span class="comment">//填充下拉框</span></span><br><span class="line">              getModelOidAndName(bimSurferModel);</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getModelOidAndName</span>(<span class="params">thisModel</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> modelObj = thisModel.apiModel.objects;</span><br><span class="line">          <span class="built_in">Object</span>.keys(modelObj).forEach(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (modelObj[key].object.hasChildren === <span class="literal">undefined</span>) &#123;</span><br><span class="line">              <span class="keyword">var</span> option = <span class="built_in">document</span>.createElement(<span class="string">"option"</span>);</span><br><span class="line">              $(option).val(key);</span><br><span class="line">              <span class="keyword">if</span> (modelObj[key].object.Name === <span class="literal">undefined</span> || modelObj[key].object.Name === <span class="string">""</span>) &#123;</span><br><span class="line">                $(option).text(key);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(option).text(modelObj[key].object.Name);</span><br><span class="line">              &#125;</span><br><span class="line">              $(<span class="string">'#select'</span>).append(option);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getAllRelatedProjects"</span>, &#123;<span class="attr">poid</span>: poid&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">projects</span>) </span>&#123;</span><br><span class="line">          nrProjects = projects.length;</span><br><span class="line">          <span class="keyword">var</span> totalBounds = &#123;</span><br><span class="line">            min: [<span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE, <span class="built_in">Number</span>.MAX_VALUE],</span><br><span class="line">            max: [-<span class="built_in">Number</span>.MAX_VALUE, -<span class="built_in">Number</span>.MAX_VALUE, -<span class="built_in">Number</span>.MAX_VALUE]</span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line">          projects.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">project</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (project.lastRevisionId !== <span class="number">-1</span>) &#123;</span><br><span class="line">              <span class="comment">//lastRevisionId</span></span><br><span class="line">              bimServerClient.getModel(project.oid, project.lastRevisionId, project.schema, <span class="literal">false</span>, <span class="function"><span class="keyword">function</span> (<span class="params">model</span>) </span>&#123;</span><br><span class="line">                models[project.lastRevisionId] = model;</span><br><span class="line"></span><br><span class="line">                bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getModelMinBounds"</span>, &#123;<span class="attr">roid</span>: project.lastRevisionId&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">minBounds</span>) </span>&#123;</span><br><span class="line">                  bimServerClient.call(<span class="string">"ServiceInterface"</span>, <span class="string">"getModelMaxBounds"</span>, &#123;<span class="attr">roid</span>: project.lastRevisionId&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">maxBounds</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.x &lt; totalBounds.min[<span class="number">0</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">0</span>] = minBounds.x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.y &lt; totalBounds.min[<span class="number">1</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">1</span>] = minBounds.y;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (minBounds.z &lt; totalBounds.min[<span class="number">2</span>]) &#123;</span><br><span class="line">                      totalBounds.min[<span class="number">2</span>] = minBounds.z;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.x &gt; totalBounds.max[<span class="number">0</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">0</span>] = maxBounds.x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.y &gt; totalBounds.max[<span class="number">1</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">1</span>] = maxBounds.y;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (maxBounds.z &gt; totalBounds.max[<span class="number">2</span>]) &#123;</span><br><span class="line">                      totalBounds.max[<span class="number">2</span>] = maxBounds.z;</span><br><span class="line">                    &#125;</span><br><span class="line">                    nrProjects--;</span><br><span class="line">                    <span class="keyword">if</span> (nrProjects === <span class="number">0</span>) &#123;</span><br><span class="line">                      loadModels(models, totalBounds);</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              nrProjects--;</span><br><span class="line">              <span class="keyword">if</span> (nrProjects === <span class="number">0</span>) &#123;</span><br><span class="line">                loadModels(models, totalBounds);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><p>在index.html中右击，选择 <code>Run &#39;index.html&#39;</code>或者Ctrl + Shift + F10启动页面，效果如图：</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-hellobim-01.png" alt=""></p><p>点击任意部件，部件高亮并且可以查看部件的信息。</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-hellobim-02.png" alt=""></p><p><em>界面丑，待优化，至少模型加载并展示了嘛</em></p><p><em>能力有限，如有错误或疑问请在评论区指出，谢谢。</em></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;BIMserver登录及模型展示：&lt;/strong&gt;&lt;br&gt;BIMserver资料较少，没有成熟的接口文档，没有成熟的示例程序，但是BIMserver为我们提供了一个运维程序、示例数据，在Github中的&lt;a href=&quot;https://github.com/opensourceBIM&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;opensourceBIM&lt;/a&gt;这个开源组织，给开发者提供了不少源码级的学习内容。从运维程序中我们可以梳理出BIMserver的执行过程，方便我们二次开发。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="BIM" scheme="https://ibrucekong.github.io/tags/BIM/"/>
    
      <category term="BIMserver" scheme="https://ibrucekong.github.io/tags/BIMserver/"/>
    
  </entry>
  
  <entry>
    <title>BIMserver入门笔记 - 01环境搭建、数据导入及预览</title>
    <link href="https://ibrucekong.github.io/posts/3869274485/"/>
    <id>https://ibrucekong.github.io/posts/3869274485/</id>
    <published>2018-09-15T09:20:22.000Z</published>
    <updated>2018-09-15T09:20:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>轻松搭建BIMserver开发环境：</strong><br>BIMserver在国内开发资料太少，关于环境搭建的有一些，我也是参照着这些教程一步步的搭建，该笔记把遇到的一些坑给记录下来，方便以后参考。</p><a id="more"></a><ol><li><p>BIMserver入门笔记 - 01环境搭建、数据导入及预览</p></li><li><p><a href="../3230248873/">BIMserver入门笔记 - 02登录及模型展示</a></p></li></ol><p>现在的工作就是，什么热就干什么（什么… 小李你说啥，Tom热~~），这年头就这样，能把自己的产品给推出去，并且能加码推出去就是胜利。</p><p>BIM在行业里应用不多，大家都在积极的储备该技术，都指望着自己能厚积薄发。</p><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><p>这里给出官方开源<a href="https://github.com/opensourceBIM/BIMserver" target="_blank" rel="noopener">地址</a>，下载相应版本的发布版本（这里以<a href="https://github.com/opensourceBIM/BIMserver/releases/tag/parent-1.5.88" target="_blank" rel="noopener">v1.5.88</a>为例，下载资料已经整理好了，点击<a href="https://github.com/ibrucekong/bimserver-env" target="_blank" rel="noopener">下载</a>）。</p><p><em>由于BIMserver的开发环境搭建时对版本的兼容性要求比较高，小版本不一样都会出错</em></p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ol><li><p>选择一个文件夹命名<code>BIMserver</code>，且整个文件夹的路径中没有空格和中文；</p></li><li><p>将<code>bimserver-env</code>文件夹下的文件都拷贝进来</p></li><li><p>双击<code>bimserverjar-1.5.88.jar</code>，<code>Address</code>内容改为<code>你的IP</code>，然后点击<code>Start</code></p></li><li><p>等服务启动成功后，点击<code>Launch Webbrowser</code>，打开平台自带的运维界面</p><p>这是一个主要的配置过程，过程就用图片来说明了，如下：</p><p>a. 找一个没有中文、没有空格的路径，存放jar文件</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-01.png" alt=""> </p><p>b. 全程使用IP作为服务发布的地址，先获取IP再说</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-02.png" alt=""> </p><p>c. 双击启动jar，将Address中的localhost改为刚才获取的IP，点击右下角的start按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-03.png" alt=""> </p><p>d. 当看到信息窗口中打印 Server started successfully即可，并点击 Launch Webbrowser</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-04.png" alt=""> </p><p>e. 打开BIMserver的运维安装界面，填写服务名称、服务描述，其他默认即可，点击Next</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-05.png" alt=""> </p><p>f. 设置管理员账号、密码，进入下一步</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-06.png" alt=""> </p><p>g. 设置email服务，忽略，点击Next</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-07.png" alt=""> </p><p>h. 勾选掉所有的插件的勾，点击upload JAR files of plugins，进行离线安装插件</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-08.png" alt=""> </p><p>i. 由于每次只能打开一个插件，所以需要耐心的将每一个插件选择好（不要有遗漏哦）</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-09.png" alt=""> </p><p>j. 这是插件列表，最好数一下</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-10.png" alt=""> </p><p>k. 默认，下一步</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-11.png" alt=""> </p><p>l. 点击 Setup，开始安装</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-12.png" alt=""> </p><p>m. 安装过程中，打印了一行红色的字体，忽略，不用管，会继续安装</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-13.png" alt=""> </p><p>n. 直至出现以下内容，表示安装成功，点击箭头指向的链接</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-14.png" alt=""> </p><p>o. 刷新后，出现这些内容，主要使用的是bimviews，点击打开</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-15.png" alt=""> </p><p>p. 需要身份验证，填写安装时填写的账号、密码</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-16.png" alt=""> </p><p>q. 登录成功后，界面中是工程列表，但是没有工程</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-17.png" alt=""> </p><p>r. 找到如图的新建项目的按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-18.png" alt=""> </p><p>s. 输入项目名称、项目描述，其他默认，点击Add</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-19.png" alt=""> </p><p>t. 项目创建成功，点击箭头所指的按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-20.png" alt=""> </p><p>u. 选择 Checkin… 进行模型的导入</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-21.png" alt=""> </p><p>v. 导入模型有两种方式，一种是本地文件，一种是URL，这里以本地文件为例进行演示</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-22.png" alt=""> </p><p>w. 选择需要导入的模型文件</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-23.png" alt=""> </p><p>x. 选择好后，文件类型和注释都有默认值，直接点击Checkin new revision</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-24.png" alt=""> </p><p>y. 这个导入速度和使用的电脑性能有关</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-25.png" alt=""> </p><p>z. 导入成功后，点击3D这个按钮</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-26.png" alt=""> </p><p>aa. 在左侧布局中，有可以展开的树结构，和有控制显隐的眼睛</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-27.png" alt=""> </p><p>ab. 模型展示效果，左键拖拽旋转，中键拖拽平移</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-28.png" alt=""> </p><p>ac. 通过隐藏外面的部件，可以看到内部的细节</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bimserver-29.png" alt=""> </p></li></ol><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>BIMserver的文件夹 [不要有中文，不要有空格]*3 （假设说了三次）</li><li>服务地址最好填写为IP（管他呢，写localhost也行，但是总感觉后面会需要改为IP或域名）</li><li>记住账号，密码</li><li>安装插件式需要科学上网的（就因为这个，博主专门为搭建准备了完备的安装包和离线文件）</li></ol><p><em>能力有限，如有错误或疑问请在评论区指出，谢谢。</em></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;轻松搭建BIMserver开发环境：&lt;/strong&gt;&lt;br&gt;BIMserver在国内开发资料太少，关于环境搭建的有一些，我也是参照着这些教程一步步的搭建，该笔记把遇到的一些坑给记录下来，方便以后参考。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="BIM" scheme="https://ibrucekong.github.io/tags/BIM/"/>
    
      <category term="BIMserver" scheme="https://ibrucekong.github.io/tags/BIMserver/"/>
    
  </entry>
  
  <entry>
    <title>前端地图应用中几种监听事件</title>
    <link href="https://ibrucekong.github.io/posts/1380263657/"/>
    <id>https://ibrucekong.github.io/posts/1380263657/</id>
    <published>2018-08-30T02:26:07.000Z</published>
    <updated>2018-08-30T02:26:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>轻松绑定解除事件监听：</strong><br>在前端使用JavaScript给一个元素绑定、解除监听事件最为常用的是addEventListener，解除也很容易。在前端地图开发中，也会遇到很多事件绑定、解除的问题，下面我们就来讨论一下在这些环境下的事件监听是怎么实现的。</p><a id="more"></a><p>从事GIS方向，和地图打交道比较多，对于各种地图的监听事件的使用比较多，对于常用的事件监听方法梳理了以下内容，作为笔记保存。</p><h3 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h3><blockquote><p> JavaScript使我们有能力创建动态页面，网页中的每一个元素都可以产生某些触发JavaScript函数的事件。我们可以认为事件是可以被JavaScript侦测到的一种行为。</p></blockquote><h3 id="地图开发中的事件监听"><a href="#地图开发中的事件监听" class="headerlink" title="地图开发中的事件监听"></a>地图开发中的事件监听</h3><ul><li>百度</li><li>高德</li><li>谷歌</li><li>ArcGIS</li></ul><h3 id="事件监听的使用"><a href="#事件监听的使用" class="headerlink" title="事件监听的使用"></a>事件监听的使用</h3><h4 id="原生事件监听"><a href="#原生事件监听" class="headerlink" title="原生事件监听"></a>原生事件监听</h4><p>在Web项目中要对dom元素绑定监听事件，有onclick，原生方法一般使用attachEvent和addEventListener。其中attachEvent使用与IE早期版本，比如IE6、7、8，而addEventListener适用于IE9、10、11，还有FireFox、Chrome、Safari和Opera等现代浏览器。</p><ol><li><p>直接添加</p><p>a. html方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 最简单的是在dom上添加 onclick 属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"clickMe"</span> <span class="attr">onclick</span>=<span class="string">"check(this)"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>b. javascript方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给元素添加 onclick 事件 ： onclick还可以是 ondblclick、ondrag等</span></span><br><span class="line">element.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>attachEvent</p><p>在早期IE中，使用attachEvent作为添加监听的一种方式，对一个元素绑定监听可以按照以下方式进行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"onclick"、"onmouseover"、"onkeyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.attachEvent(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"onclick"、"onmouseover"、"onkeyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.attachEvent(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>addEventListener</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"keyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.addEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"keyup"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.removeEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>小结</li></ol><p>从以上两个方法我们可以看出其中存在着一些差别：</p><ol><li>兼容性方面，attachEvent仅支持早期的IE版本，而addEventListener支持的较为广泛；</li><li>attachEvent在事件类型上，比addEventListener多一个字符”on”，需要额外注意；</li><li>两者绑定监听都需要实名函数，匿名函数的绑定关系是无法移除的。</li></ol><h4 id="百度事件监听"><a href="#百度事件监听" class="headerlink" title="百度事件监听"></a>百度事件监听</h4><p>在百度地图中对dom元素的监听，官方给出的是addEventListener和removeEventListener，使用方法和原生的addEventListener类似，但是地图API事件监听是独立的，与原生的dom事件不同，而且还增加很多自定义的事件类型。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.addEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.removeEventListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，如果要能解绑事件，绑定监听时就需要使用实名函数，匿名函数是无法解绑的。</p><h4 id="高德事件监听"><a href="#高德事件监听" class="headerlink" title="高德事件监听"></a>高德事件监听</h4><p>高德在事件监听上提供了众多的方法，使用最多的就是on/off组合，另外还有addDomListener、addListener、addListenerOnce、removeListener和trigger，此次主要介绍一下最为常用的使用方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.on(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">element.off(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的，在 绑定和解绑时都应该使用实名函数，除非之后不需要解绑。</p><h4 id="谷歌事件监听"><a href="#谷歌事件监听" class="headerlink" title="谷歌事件监听"></a>谷歌事件监听</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouseover"、"dragstart"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">var</span> evt = google.maps.event.addListener(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* evt 绑定监听时的句柄</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">google.maps.event.removeListener(evt)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到谷歌这里，绑定监听就不如百度和高德那样，而是通过绑定监听返回的句柄进行解绑操作。这样的话，在绑定监听时的回调函数就可以是匿名函数，也可以是实名函数了。所以说上帝为你关闭的一扇大门，肯定会给你打开一扇窗户，不会让你为难的。</p><h4 id="ArcGIS中的事件监听"><a href="#ArcGIS中的事件监听" class="headerlink" title="ArcGIS中的事件监听"></a>ArcGIS中的事件监听</h4><p>ArcGIS的事件监听有两种方式，一种是很早之前的版本connect style，一种是on style。其中connect是通过dojo进行实现，不过现在更加推荐on来实现。</p><ol><li>connect style</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"onClick"、"onMouseOver"等</span></span><br><span class="line"><span class="comment">* callback 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">var</span> evt = dojo.connect(element, event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* evt 绑定监听时的句柄</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">dojo.disconnect(evt)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>on style</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 绑定监听</span></span><br><span class="line"><span class="comment">* element 需要添加事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* event 事件类型（事件名称），是字符类型，比如包含"click"、"mouse-over"等</span></span><br><span class="line"><span class="comment">* function 触发监听的回调函数</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">var</span> evt = element.on(event, callback)；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 移除监听</span></span><br><span class="line"><span class="comment">* element 需要移除事件监听的元素或dom</span></span><br><span class="line"><span class="comment">* evt 绑定监听时的句柄</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">evt.remove()；</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* callback 是回调函数名，可以自定义</span></span><br><span class="line"><span class="comment">* e 是回调参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中connect style和on style对于event格式不一样，除了方法名不一样外，在调用方面也存在一定的不同，需要额外注意，不要混淆。</p><h3 id="事件监听总结"><a href="#事件监听总结" class="headerlink" title="事件监听总结"></a>事件监听总结</h3><p>从上到下看过来，就会发现事件监听也是大同小异，调用方式、事件名称都是次要，关键是考虑好事件绑定后要不要解除，一般来讲都需要绑定实名函数（也有例外，比如谷歌和ArcGIS），方便解除监听事件。</p><p>从事开发行业，特别是GIS行业，几乎在所有的项目中都会使用事件监听（主要指地图事件监听），所以希望小伙伴都能扎实的掌握好该技能。</p><p><em>能力有限，如有错误或疑问请在评论区指出，谢谢。</em></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;轻松绑定解除事件监听：&lt;/strong&gt;&lt;br&gt;在前端使用JavaScript给一个元素绑定、解除监听事件最为常用的是addEventListener，解除也很容易。在前端地图开发中，也会遇到很多事件绑定、解除的问题，下面我们就来讨论一下在这些环境下的事件监听是怎么实现的。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="事件监听" scheme="https://ibrucekong.github.io/tags/%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/"/>
    
  </entry>
  
  <entry>
    <title>IE和Chrome带有多个参数的互相跳转</title>
    <link href="https://ibrucekong.github.io/posts/1077207737/"/>
    <id>https://ibrucekong.github.io/posts/1077207737/</id>
    <published>2018-08-23T08:35:20.000Z</published>
    <updated>2018-08-23T08:35:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>IE &amp; Chrome的互相跳转：</strong><br>简单需求，简单实现。从IE跳转到Chrome，介绍使用<code>ActiveXObject</code>进行操作跳转，并实现多个参数的传递；从Chrome跳转到IE，介绍使用修改注册表的形式进行操作。</p><a id="more"></a><h3 id="IE-to-Chrome"><a href="#IE-to-Chrome" class="headerlink" title="IE to Chrome"></a>IE to Chrome</h3><p>在IE中打开Chrome方法简单且粗暴，<code>talk is cheap, show me the code</code>。</p><h4 id="单参or无参"><a href="#单参or无参" class="headerlink" title="单参or无参"></a>单参or无参</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">// 无参</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-no-param.png" alt="无参"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">// 单参</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com?id=1&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-one-param.png" alt="单参"></p><p>上述情况都没问题，一切都很顺利，下面来看看多参的情况。</p><h4 id="多参传递"><a href="#多参传递" class="headerlink" title="多参传递"></a>多参传递</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 如果要传 id=1, name=bruce 两个参数</span><br><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com?id=1&amp;name=bruce&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-one-param.png" alt="多参"></p><p>什么鬼，我明明传了两个参数啊，怎么只显示了一个，只显示了第一个。What the hell is going on?</p><p>原来在cmd的世界里，它有自己的一套转义语法，可参考<a href="https://www.cnblogs.com/newsea/p/3866413.html" target="_blank" rel="noopener">链接</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var objShell = new ActiveXObject(&quot;WScript.Shell&quot;);</span><br><span class="line">// 经过修正，将&amp;符号进行转义，使用^&amp;代替&amp;</span><br><span class="line">objShell.Run(&quot;cmd.exe /c start chrome www.baidu.com?id=1^&amp;name=bruce&quot;,0,true);</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/ie-to-chrome-more-param.png" alt="多参"></p><p>看完在IE中打开Chrome了，现在来瞅瞅在Chrome中打开IE的方法吧。</p><h3 id="Chrome-to-IE"><a href="#Chrome-to-IE" class="headerlink" title="Chrome to IE"></a>Chrome to IE</h3><p>在Chrome中打开IE，并传多参数，相比IE中打开Chrome要麻烦一些，大致分为以下几个方面。</p><h4 id="配置跳转环境"><a href="#配置跳转环境" class="headerlink" title="配置跳转环境"></a>配置跳转环境</h4><ol><li><p>regOpenIE.reg</p><p>1.1 在D盘下新建openIE文件夹，路径为<code>D:\openIE\</code></p><p>1.2 在openIE路径下新建<code>regOpenIE.reg</code>，并将如下内容复制进该文件：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE]</span><br><span class="line">@=&quot;URL:Alert Protocol&quot;</span><br><span class="line">&quot;URL Protocol&quot;=&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\DefaultIcon]</span><br><span class="line">@=&quot;iexplore.exe,1&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\shell]</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\shell\open]</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\openIE\shell\open\command]</span><br><span class="line">@=&quot;cmd /c set m=%1 &amp; \&quot;D:\\alert\\openIE.bat\&quot; %%m%% &amp; exit&quot;</span><br></pre></td></tr></table></figure><p>其中文本中的最后一行<code>D:\\alert\\openIE.bat\</code>是当前文件的目录。</p><ol start="2"><li>在openIE文件夹下新建<code>openIE.bat</code>，并将如下内容复制进该文件：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set m=%m:openIE:=%</span><br><span class="line">set m=&quot;%m:separator=&amp;%&quot;</span><br><span class="line">start &quot;&quot; &quot;C:\\Program Files\\internet explorer\\iexplore.exe&quot; %m%</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>其中文本中<code>start</code>一行中<code>C:\\Program Files\\internet explorer\\iexplore.exe</code>是你电脑中IE的路径，注意分隔符是双反斜杠。</p><h4 id="单参or无参-1"><a href="#单参or无参-1" class="headerlink" title="单参or无参"></a>单参or无参</h4><ol><li>在布局中加入以下内容。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;openIE:www.baidu.com&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-no-param.png" alt="无参"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;openIE:www.baidu.com?id=1&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-one-param.png" alt="单参"></p><h4 id="多参传递-1"><a href="#多参传递-1" class="headerlink" title="多参传递"></a>多参传递</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 和测试IE跳转Chrome一样，传 id=1, name=bruce 两个参数，看下效果是不是能出来</span><br><span class="line">&lt;a href=&quot;openIE:www.baidu.com?id=1&amp;name=bruce&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-one-param.png" alt="多参"></p><p>同样的思维，是不是<code>&amp;</code>又被转义或者影响到了呢，查阅资料，有<a href="https://blog.csdn.net/java_zys/article/details/51837899" target="_blank" rel="noopener">博主</a>给出了一个解决方案，使用无转义的字符去替代的方案(就是上面<code>openIE.bat</code>中第三行给出的内容)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;openIE:www.baidu.com?id=1separatorname=bruce&quot;&gt;Chrome to IE&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/chrome-to-ie-more-param.png" alt="多参"></p><p>使用参数中的<code>separator</code>代替<code>&amp;</code>，完成解析。</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>IE和Chrome的跳转可能还有其他方法，如果朋友找到更加简单的方法，请在下面回复告诉博主，感激不尽。</p><div style="text-align: center"><img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;IE &amp;amp; Chrome的互相跳转：&lt;/strong&gt;&lt;br&gt;简单需求，简单实现。从IE跳转到Chrome，介绍使用&lt;code&gt;ActiveXObject&lt;/code&gt;进行操作跳转，并实现多个参数的传递；从Chrome跳转到IE，介绍使用修改注册表的形式进行操作。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Chrome" scheme="https://ibrucekong.github.io/tags/Chrome/"/>
    
      <category term="IE" scheme="https://ibrucekong.github.io/tags/IE/"/>
    
      <category term="跳转" scheme="https://ibrucekong.github.io/tags/%E8%B7%B3%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>在Chrome中调试Ionic的Android应用</title>
    <link href="https://ibrucekong.github.io/posts/289005530/"/>
    <id>https://ibrucekong.github.io/posts/289005530/</id>
    <published>2018-08-08T02:05:36.000Z</published>
    <updated>2018-08-08T02:05:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Ionic的Android端调试：</strong><br>在以往Android原生开发时，App的调试用真机很是简单，即便是虚拟机调试，也是手到擒来；而如今，在混合应用横行的年代，动不动就是React-Native、Ionic、Vue、MUI等一系列的混合架构写出来的Android，还没对其调试过，公司采用Ionic研发并遇到一些坑，特将调试过程记录下来。</p><a id="more"></a><p>首先百度一番，度娘告知有以下两种方法进行调试：</p><ol><li><p>在项目根目录执行以下命令，调试信息将在console中打印出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic run android -l -c</span><br></pre></td></tr></table></figure></li><li><p>Chrome调试</p></li></ol><p>由于是从项目中拿到App对其调试，没有工程，所以第一种调试方法无法测试。</p><p>第二种方法是网上应用最多的，我们来看看需要哪些操作：</p><ol><li><p>首先真机或虚拟机连接电脑（手机开USB调试模式，并且允许电脑能访问手机），并且在命令行中确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices</span><br></pre></td></tr></table></figure><p>确保设备连接到电脑。</p></li><li><p>在Chrome中打开<code>chrome://inspect/#devices</code>，可以在Remote Target中看到已经连接的手机和手机中已经开启的应用线程。</p></li><li><p>找到需要调试的App，点击旁边的inspect（注意：电脑要能科学上网下载一些依赖，不然会显示404或一片空白，这些依赖会缓存下来，不清理缓存的话只需第一次运行时翻墙即可）</p></li><li><p>最重要的一点是，Ionic打的包一定是debug包，否则在Remote Target中是看不到该应用的，也就无法调试咯。</p></li></ol><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Ionic的Android端调试：&lt;/strong&gt;&lt;br&gt;在以往Android原生开发时，App的调试用真机很是简单，即便是虚拟机调试，也是手到擒来；而如今，在混合应用横行的年代，动不动就是React-Native、Ionic、Vue、MUI等一系列的混合架构写出来的Android，还没对其调试过，公司采用Ionic研发并遇到一些坑，特将调试过程记录下来。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Ionic" scheme="https://ibrucekong.github.io/tags/Ionic/"/>
    
      <category term="Android" scheme="https://ibrucekong.github.io/tags/Android/"/>
    
      <category term="Chrome" scheme="https://ibrucekong.github.io/tags/Chrome/"/>
    
      <category term="调试" scheme="https://ibrucekong.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>入坑公路车</title>
    <link href="https://ibrucekong.github.io/posts/1652333246/"/>
    <id>https://ibrucekong.github.io/posts/1652333246/</id>
    <published>2018-07-30T11:25:06.000Z</published>
    <updated>2018-07-30T11:25:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第一辆公路车：</strong><br>公路车第一次长草是在过了年的时候，以前也经常骑自行车，从小学三年级骑到大四毕业，车子就是很平常的平把山地车或者休闲车，对于小弯把公路车还真没接触过，这草说长就是疯长啊，果断收割。</p><a id="more"></a><p>草已经长了快半年了，在网上也刷了不少相关的帖子，一直没忍心入坑。顾虑有以下两点：</p><ol><li>买了主要通勤用，家里可以放心，停在公司真的是不放心；</li><li>平时练腿，健身健体，由于搬砖的工作性质，需要适当调节一下运动时间。</li></ol><p>就在昨天，小伙伴们已经购买了属于自己的拉轰电动，我也是差一点没忍住，当时三个人，但是电驴的配色只有两辆了，配色不够，我就“大方的”把机会让给他们俩了，更进一步的为我入坑公路车提供了绝佳的机会。</p><p>今天在另一个朋友的陪同下，来到“XX捷安特专卖店”。之前在网上也浏览过一些博客、帖子，针对捷安特的公路车也了解了一些，但是真到了专卖店里，和老板攀谈起来还是有些切啊。</p><p>由于预算（穷）的原因，心里只存放了SCR1、SCR2。首先，试骑了SCR2，此车入门偏下档次，就不再贴太多相关信息，骑了一圈就pass了；试骑SCR1，也是入门车，比SCR2贵1000钢镚，试骑比较了确实不一样，车架轻（前叉是碳纤维）而且稍有推背感（七哥说的，也确实是），最后选择了这款的原因有以下几点（又要吃土了）：</p><ol><li>车比较轻，前叉是碳纤维，有效降低车头重量，并且提高刚性和吸震性；</li><li>涂装也比较喜欢，SCR2是黑白，SCR1有亮绿和消光亮黑，选择了后者；</li><li>没有螳螂须，内走线，逼格再次提升；</li><li>车架由GIANT 自家的ALUXX SL铝材，有效降低了整车重量。</li></ol><p>由于对公路车还不够了解，有些优缺点还需要继续发掘。</p><p>配置详细信息如下：</p><table><thead><tr><th>描述</th><th>型号</th></tr></thead><tbody><tr><td>车架</td><td>GIANT ALUXX SL</td></tr><tr><td>前叉</td><td>碳纤维公路前叉</td></tr><tr><td>撤吧</td><td>铝合金管公路把</td></tr><tr><td>车首竖杆</td><td>铝合金竖杆</td></tr><tr><td>座垫</td><td>GIANT CONTACT 座垫</td></tr><tr><td>座垫杆</td><td>铝合金 D 型座垫杆</td></tr><tr><td>变速把手</td><td>SHIMANO ST-R3000</td></tr><tr><td>前变速器</td><td>SHIMANO FD-R3000</td></tr><tr><td>后变速器</td><td>SHIMANO RD-R3000</td></tr><tr><td>飞轮</td><td>SHIMANO CS-HG400-9</td></tr><tr><td>刹车</td><td>SHIMANO BR-R3000</td></tr><tr><td>大齿盘</td><td>铝合金中空一体齿盘</td></tr><tr><td>轮圈</td><td>铝合金高框圈</td></tr><tr><td>花鼓</td><td>铝合金培林花鼓</td></tr><tr><td>钢丝</td><td>HTSS 钢丝</td></tr><tr><td>轮胎</td><td>GIANT S-R4 700X25C轮胎</td></tr><tr><td>后避震器</td><td>无</td></tr><tr><td>SIZE</td><td>S码 700CX445</td></tr></tbody></table><p>入门级别的公路车，已经很满意了，毕竟花了那么多大洋，未来几个月要吃土了。</p><p>此处就不一一贴局部细节图了，只贴一些低像素的整车效果图：</p><p><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/bike.png" alt="Giant SCR1"></p><p><em>车子有了，还差很多装备，骑行服、锁踏、锁鞋、心率计、功率计等等，试问：我需要吗？</em></p><p>另外说下我的计划（这就是浪的理由？）：</p><ol><li>平时保证通勤；</li><li>要有骑行计划，练踏频，练力量，健身咯；</li><li>这就是个附带效果了，争取三个月能减些脂肪，体重降2.5Kg；</li><li>有可能的话，最好能跟队骑行。</li></ol><p>看似简单的想法，但需要十足长期的努力，坚持很重要，加油！</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第一辆公路车：&lt;/strong&gt;&lt;br&gt;公路车第一次长草是在过了年的时候，以前也经常骑自行车，从小学三年级骑到大四毕业，车子就是很平常的平把山地车或者休闲车，对于小弯把公路车还真没接触过，这草说长就是疯长啊，果断收割。&lt;/p&gt;
    
    </summary>
    
      <category term="bike" scheme="https://ibrucekong.github.io/categories/bike/"/>
    
    
      <category term="自行车" scheme="https://ibrucekong.github.io/tags/%E8%87%AA%E8%A1%8C%E8%BD%A6/"/>
    
      <category term="公路车" scheme="https://ibrucekong.github.io/tags/%E5%85%AC%E8%B7%AF%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Ionic使用百度地图弹窗并响应点击事件</title>
    <link href="https://ibrucekong.github.io/posts/2994729501/"/>
    <id>https://ibrucekong.github.io/posts/2994729501/</id>
    <published>2018-07-15T07:54:27.000Z</published>
    <updated>2018-07-15T07:54:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Ionic响应百度地图弹窗中的点击事件：</strong><br>Ionic使用的语法TypeScript，有一套自己的生命周期，和ES5之前的使用习惯不相同，变量作用域不尽相同。在Ionic中使用百度地图，也会踩一些坑，最近在业务中遇到了这样的需求，百度地图弹窗中动态写的HTML布局的响应事件无法拿到。</p><a id="more"></a><h3 id="在Ionic中使用百度地图"><a href="#在Ionic中使用百度地图" class="headerlink" title="在Ionic中使用百度地图"></a>在Ionic中使用百度地图</h3><h4 id="初始化地图"><a href="#初始化地图" class="headerlink" title="初始化地图"></a>初始化地图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 1.首先在index.html中引入百度地图的URL（其中要有申请的KEY）</span><br><span class="line">// &lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=3.0&amp;ak=您的密钥&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">// 2.新建map组件，在ts文件中输入以下内容</span><br><span class="line">ionViewWillEnter()&#123;</span><br><span class="line">    let map = new BMap.Map(&quot;allmap&quot;);// allmap是在html布局中定义的&lt;div id=&quot;allmap&quot;&gt;&lt;/div&gt;</span><br><span class="line">    let point = new BMap.Point(116.417, 39.921);// 初始化地图</span><br><span class="line">    map.centerAndZoom(point, 15);// 初始化地图视图</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加Marker"><a href="#添加Marker" class="headerlink" title="添加Marker"></a>添加Marker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 3.在 map.centerAndZoom(point, 15) 的下一行继续添加以下内容</span><br><span class="line">let marker = new BMap.Marker(point);// 初始化Marker对象</span><br><span class="line">map.addOverlay(marker);// 将marker放置到地图上</span><br></pre></td></tr></table></figure><h4 id="为marker添加点击事件"><a href="#为marker添加点击事件" class="headerlink" title="为marker添加点击事件"></a>为marker添加点击事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 4.在 map.addOverlay(marker) 的下一行继续添加以下内容</span><br><span class="line">marker.addEventListener(&quot;click&quot;, function()&#123;</span><br><span class="line">    // TODO 做其他事情</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="弹出信息窗"><a href="#弹出信息窗" class="headerlink" title="弹出信息窗"></a>弹出信息窗</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 5.在 map.addOverlay(marker) 和 marker.addEventListener 之间插入以下内容</span><br><span class="line">let options = &#123;</span><br><span class="line">    width: 200,</span><br><span class="line">    height: 100,</span><br><span class="line">    title: &quot;测试弹窗的标题&quot;</span><br><span class="line">&#125;; // 定义弹出窗参数</span><br><span class="line">let htm = &apos;&lt;div&gt;内容：这是内容主体&lt;/div&gt;&lt;div&gt;&lt;button id=&quot;confirm&quot; onclick=&quot;test()&quot;&gt;确定&lt;/button&gt;&lt;/div&gt;&apos;;</span><br><span class="line">let infoWindow = new BMap.InfoWindow(htm, options); // 初始化弹出窗对象</span><br><span class="line"></span><br><span class="line">// 6.在 TODO 下面继续添加以下内容</span><br><span class="line">map.openInfoWindow(infoWindow, point); // 点击marker执行该行代码，弹出信息窗</span><br><span class="line"></span><br><span class="line">// 7.在该ts文件中，添加test方法</span><br><span class="line">test()&#123;</span><br><span class="line">    console.log(&quot;如果我再控制台中打印出来，说明弹窗中的button响应了，反之。&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制台没打印"><a href="#控制台没打印" class="headerlink" title="控制台没打印"></a>控制台没打印</h4><p>打印失败了！！！</p><p>有人分析说，<code>test</code>需要用<code>this</code>来调用，写成这个样子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let infoWindow = new BMap.InfoWindow(&apos;&lt;div&gt;内容：这是内容主体，啦啦啦&lt;/div&gt;&lt;div&gt;&lt;button id=&quot;confirm&quot; onclick=&quot;this.test()&quot;&gt;确定&lt;/button&gt;&lt;/div&gt;&apos;, options); // 初始化弹出窗对象</span><br></pre></td></tr></table></figure><p>同样的，还是失败了。</p><p>分析原因，是Ionic在初始化页面时，弹窗的布局信息并没有跟着初始化，而绑定的<code>test()</code>方法也没有初始化，所以绑定的方法无效。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>那怎么样才能保证能将<code>test()</code>方法绑定到<code>button</code>上的呢？</p><p>其实，我们可以曲线救国，让绑定事件在初始化弹窗之后，弹窗之前绑定，这样既可以有效的防止页面初始化带来的影响，又可以顺利绑定事件，下面是我的做法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">// 以上完整代码</span><br><span class="line">// 1.首先在index.html中引入百度地图的URL（其中要有申请的KEY）</span><br><span class="line">// &lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=3.0&amp;ak=您的密钥&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">// 2.新建map组件，在ts文件中输入以下内容</span><br><span class="line">ionViewWillEnter()&#123;</span><br><span class="line">    let map = new BMap.Map(&quot;allmap&quot;);// allmap是在html布局中定义的&lt;div id=&quot;allmap&quot;&gt;&lt;/div&gt;</span><br><span class="line">    let point = new BMap.Point(116.417, 39.921);// 初始化地图</span><br><span class="line">    map.centerAndZoom(point, 15);// 初始化地图视图</span><br><span class="line">    </span><br><span class="line">    // 3.在 map.centerAndZoom(point, 15) 的下一行继续添加以下内容</span><br><span class="line">    let marker = new BMap.Marker(point);// 初始化Marker对象</span><br><span class="line">    map.addOverlay(marker);// 将marker放置到地图上</span><br><span class="line">    </span><br><span class="line">    // 5.在 map.addOverlay(marker) 和 marker.addEventListener 之间插入以下内容</span><br><span class="line">    let options = &#123;</span><br><span class="line">        width: 200,</span><br><span class="line">        height: 100,</span><br><span class="line">        title: &quot;测试弹窗的标题&quot;</span><br><span class="line">    &#125;; // 定义弹出窗参数</span><br><span class="line">    let htm = &apos;&lt;div&gt;内容：这是内容主体&lt;/div&gt;&lt;div&gt;&lt;button id=&quot;confirm&quot;&gt;确定&lt;/button&gt;&lt;/div&gt;&apos;;</span><br><span class="line">    let infoWindow = new BMap.InfoWindow(htm, options); // 初始化弹出窗对象</span><br><span class="line"></span><br><span class="line">    // 4.在 map.addOverlay(marker) 的下一行继续添加以下内容</span><br><span class="line">    let that = this;</span><br><span class="line">    marker.addEventListener(&quot;click&quot;, function()&#123;</span><br><span class="line">        // TODO 做其他事情</span><br><span class="line">        // 绑定监听事件</span><br><span class="line">        document.getElementById(&quot;confirm&quot;).onclick = that.test;</span><br><span class="line">        map.openInfoWindow(infoWindow, point); // 点击marker执行该行代码，弹出信息窗</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 7.在该ts文件中，添加test方法</span><br><span class="line">test()&#123;</span><br><span class="line">    console.log(&quot;如果我再控制台中打印出来，说明弹窗中的button响应了，反之。&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样子再测试的话，控制台中就可以打印<code>如果我再控制台中打印出来，说明弹窗中的button响应了，反之。</code></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上问题在常规的B/S项目中不会发生，这是因为在Ionic项目中，使用的是Angular语法，即TypeScript（JavaScript的超集），该语法自己定义了一些新特性，使得开发效率更高，语法更简洁，再加上ES6（或更高）新特性，使得在动态生成的页面上绑定监听事件失效，所以可以通过延迟绑定或者适当时机绑定来解决。</p><p>Ionic做项目和以往的ES5或原生项目相比，效率更高、兼容多平台、开源组件更多、也更加美观，是一个比较好的路子。</p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Ionic响应百度地图弹窗中的点击事件：&lt;/strong&gt;&lt;br&gt;Ionic使用的语法TypeScript，有一套自己的生命周期，和ES5之前的使用习惯不相同，变量作用域不尽相同。在Ionic中使用百度地图，也会踩一些坑，最近在业务中遇到了这样的需求，百度地图弹窗中动态写的HTML布局的响应事件无法拿到。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Ionic" scheme="https://ibrucekong.github.io/tags/Ionic/"/>
    
      <category term="百度地图" scheme="https://ibrucekong.github.io/tags/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="点击事件" scheme="https://ibrucekong.github.io/tags/%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>吾爱破解论坛2018年7月21日暑假开放注册通知</title>
    <link href="https://ibrucekong.github.io/posts/2639421812/"/>
    <id>https://ibrucekong.github.io/posts/2639421812/</id>
    <published>2018-07-13T08:32:10.000Z</published>
    <updated>2018-07-13T08:32:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>吾爱破解论坛注册喜讯：</strong><br>吾爱开放注册又来了，此次是2018年第二次开放注册，3月13日没能上车的小伙伴，这次正值周六，天时地利人和，要整理好自己的注册资料，期待21日的到来吧。</p><a id="more"></a><div style="text-align: center;font-weight: bold;font-size: 2rem; color: red"><br>    喜讯、喜讯、喜讯<br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    <span>吾爱破解论坛开通开放注册</span><br>    <span>2018年7月21日12:00-14:00和20:00-22:00</span><br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem;padding-top: 0;margin-top: 0;height: 106px;line-height: 106px"><a href="https://www.52pojie.cn/?fromuid=575811" style="text-align: center;" target="_blank" rel="noopener">我要吾爱</a></div><br><div></div><br><strong><em>注册注意事项：</em></strong><br><br>1. 吸取上次上车失败的教训！！！<br>2. 注意不要错过注册时间<br>3. 认真读注册须知（需要等10分钟）<br>4. 事先把注册信息写在本子或word里（独一无二的邮箱和用户名） <a href="https://www.52pojie.cn/misc.php?mod=faq&amp;action=faq&amp;id=15&amp;messageid=16" target="_blank" rel="noopener">需要准备什么</a><br>5. 耐心检查填写内容（看是否都符合要求）<br>6. 邮箱验证阶段，有的要到邮箱的垃圾箱中查看有没有验证邮件，而有的邮箱则需要设置白名单才能收到验证邮件 <a href="https://www.52pojie.cn/thread-98585-1-1.html" target="_blank" rel="noopener">帮助</a><br><br><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    祝愿小伙伴们都能获得自己的吾爱账号！<br></div><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;吾爱破解论坛注册喜讯：&lt;/strong&gt;&lt;br&gt;吾爱开放注册又来了，此次是2018年第二次开放注册，3月13日没能上车的小伙伴，这次正值周六，天时地利人和，要整理好自己的注册资料，期待21日的到来吧。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="活动" scheme="https://ibrucekong.github.io/tags/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="吾爱破解" scheme="https://ibrucekong.github.io/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>在Linux中解决跨网段访问服务</title>
    <link href="https://ibrucekong.github.io/posts/3249349784/"/>
    <id>https://ibrucekong.github.io/posts/3249349784/</id>
    <published>2018-03-27T11:30:36.000Z</published>
    <updated>2018-03-27T11:30:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在Linux中解决跨网段访问服务：</strong><br>有这样一个场景：在局域网中，两台电脑，A电脑使用交换机（192.168.72.33），B电脑使用WiFi（192.168.1.21），两者的网段不同，导致电脑A无法ping通电脑B。今天就来讲讲怎么在Linux中解决这个问题。</p><a id="more"></a><p>这是我在生产环境中遇到的一个问题，刚开始接触，踩了不小的坑，耽误了很长时间，以此来记录一下。</p><p>针对以上问题的解决办法就是：添加一个路由！</p><p>在A电脑中打开终端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ route add default gw 192.168.72.1</span><br></pre></td></tr></table></figure></p><p>加上后，发现可以ping通了，但是重启机器后，又无法ping通了。原因是上面加的路由是临时的，并未在系统中永久保存，如果需要添加永久路由，按照以下方法：</p><ul><li><p>打开终端，执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/rc.local</span><br></pre></td></tr></table></figure></li><li><p>在文档后插入一行，输入<em>route add default gw 192.168.72.1</em></p></li><li>按ESC键退出编辑状态，输入<code>:wq</code>，回车保存即可。</li></ul><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;在Linux中解决跨网段访问服务：&lt;/strong&gt;&lt;br&gt;有这样一个场景：在局域网中，两台电脑，A电脑使用交换机（192.168.72.33），B电脑使用WiFi（192.168.1.21），两者的网段不同，导致电脑A无法ping通电脑B。今天就来讲讲怎么在Linux中解决这个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="https://ibrucekong.github.io/categories/tools/"/>
    
    
      <category term="Linux" scheme="https://ibrucekong.github.io/tags/Linux/"/>
    
      <category term="Route" scheme="https://ibrucekong.github.io/tags/Route/"/>
    
  </entry>
  
  <entry>
    <title>在Linux中如何使用SCP快速拷贝数据</title>
    <link href="https://ibrucekong.github.io/posts/1224017506/"/>
    <id>https://ibrucekong.github.io/posts/1224017506/</id>
    <published>2018-03-19T10:44:52.000Z</published>
    <updated>2018-03-19T10:44:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在Linux中快速拷贝数据的工具：</strong></p><p>根据工作上的需求：一个场景，两台电脑，万千碎片数据，该怎么从A电脑拷贝这些数据到B电脑？直接复制、粘贴？先打包、再复制粘贴？方法有很多，但是很少人去分析拷贝数据的快慢。</p><a id="more"></a><p>上面说的问题，在Linux、Windows、Mac环境下都存在，这里只从Linux的角度来实现下。为什么呢？不知大家注意上面“万千碎片数据”字眼了吗，一般这样的字眼基本上会出现在服务器的存储中，而当今服务器使用最多的操作系统就是Linux，所以本文只针对Linux之间互传为例进行说明。</p><h2 id="SCP是什么"><a href="#SCP是什么" class="headerlink" title="SCP是什么"></a>SCP是什么</h2><p>scp是secure copy的简写，用于Linux下进行远程拷贝的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的（稍微会影响一点速度）。</p><h2 id="为什么要用SCP"><a href="#为什么要用SCP" class="headerlink" title="为什么要用SCP"></a>为什么要用SCP</h2><ol><li>如果服务器上没有配置FTP服务器，没有开启web服务器，也没有做共享，无法通过常规的途径获取文件时，可以考虑使用scp。</li><li>需要将本机文件上传至远程服务器上，远程服务器没有开启FTP服务器或共享，无法通过常规方法上传时，可以考虑scp。</li></ol><h2 id="场景简介"><a href="#场景简介" class="headerlink" title="场景简介"></a>场景简介</h2><p>假设以下两台电脑是通过公网连接的，只需要把局域网的IP换成公网的IP即可。</p><table><thead><tr><th>字段</th><th>A电脑</th><th>B电脑</th></tr></thead><tbody><tr><td>场景</td><td>CentOS6.5</td><td>Ubuntu16.04</td></tr><tr><td>用户名</td><td>root</td><td>bruce</td></tr><tr><td>IP</td><td>192.168.1.20</td><td>192.168.1.21</td></tr><tr><td>数据目录</td><td>/home/backups/</td><td>/media/bruce/backups/</td></tr><tr><td>文件</td><td>某些png图片</td><td>某些png图片</td></tr></tbody></table><h2 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h2><table><thead><tr><th>命令参数</th><th></th></tr></thead><tbody><tr><td>-1</td><td>强制scp命令使用协议ssh1</td></tr><tr><td>-2</td><td>强制scp命令使用协议ssh2</td></tr><tr><td>-4</td><td>强制scp命令只使用IPv4寻址</td></tr><tr><td>-6</td><td>强制scp命令只使用IPv6寻址</td></tr><tr><td>-B</td><td>使用批处理模式（传输过程中不询问传输口令或短语）</td></tr><tr><td>-C</td><td>允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</td></tr><tr><td>-p</td><td>保留原文件的修改时间，访问时间和访问权限。</td></tr><tr><td>-q</td><td>不显示传输进度条。</td></tr><tr><td>-r</td><td>递归复制整个目录。</td></tr><tr><td>-v</td><td>详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</td></tr><tr><td>-c cipher</td><td>以cipher将数据传输进行加密，这个选项将直接传递给ssh。</td></tr><tr><td>-F config</td><td>指定一个替代的ssh_config配置文件，此参数直接传递给ssh。</td></tr><tr><td>-i file</td><td>从identity_file指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</td></tr><tr><td>-l limit</td><td>限定用户所能使用的带宽，以Kbit/s为单位。</td></tr><tr><td>-o option</td><td>如果习惯于使用ssh_config(5)中的参数传递方式。</td></tr><tr><td>-P port</td><td>注意是大写的P, port是指定数据传输用到的端口号。</td></tr><tr><td>-S program</td><td>指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</td></tr></tbody></table><h2 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h2><ol><li>获取服务器上文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root@192.168.1.20:/home/backups/1.png /media/bruce/backups/1.png</span><br></pre></td></tr></table></figure><p>按回车键：</p><p>如果是第一次试用scp，会提示是否使用传输，输入yes，回车；</p><p>然后接着提示输入root用户的密码（输入密码时是看不到字符出现的，输入好直接回车）</p><ol start="2"><li>获取服务器上的目录</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root@192.168.1.20:/home/backups/ /media/bruce/backups/</span><br></pre></td></tr></table></figure><ol start="3"><li>将本地文件上传至服务器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /media/bruce/backups/2.png root@192.168.1.20:/home/backups/2.png</span><br></pre></td></tr></table></figure><ol start="4"><li>将本地目录上传至服务器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /media/bruce/backups/ root@192.168.1.20:/home/backups/</span><br></pre></td></tr></table></figure><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;在Linux中快速拷贝数据的工具：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据工作上的需求：一个场景，两台电脑，万千碎片数据，该怎么从A电脑拷贝这些数据到B电脑？直接复制、粘贴？先打包、再复制粘贴？方法有很多，但是很少人去分析拷贝数据的快慢。&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="https://ibrucekong.github.io/categories/tools/"/>
    
    
      <category term="SCP" scheme="https://ibrucekong.github.io/tags/SCP/"/>
    
      <category term="Linux" scheme="https://ibrucekong.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建自己的博客天地(下)</title>
    <link href="https://ibrucekong.github.io/posts/3337762157/"/>
    <id>https://ibrucekong.github.io/posts/3337762157/</id>
    <published>2018-03-13T10:59:45.000Z</published>
    <updated>2018-03-13T10:59:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>建站，重在折腾：</strong></p><p>在建站这个系列中，上一篇主要讲了怎么搭建博客环境，初始化博客项目，怎么新增博文，以及怎么部署博客。本次主要讲解一下<code>config.yml</code>文件，怎么巧妙的使用<code>HTTPS</code>的图床，还有就是听起来高大尚的<strong>绑定域名</strong>。</p><a id="more"></a><p>上次在《从零开始搭建自己的博客天地(上)》中讲过Coding建站的文章，时隔那么久，估计很多小伙伴都遗忘了，这里提供了上篇文章的<a href="https://blog.brucekong.com/posts/3667539278/" target="_blank" rel="noopener">链接</a>，或者使用站内搜索功能 [Ctrl+F]：从零开始搭建自己的博客天地(上) ，阅读上篇之后再读此篇效果更好。</p><h2 id="解析config-yml文件"><a href="#解析config-yml文件" class="headerlink" title="解析config.yml文件"></a>解析config.yml文件</h2><p>关于其中的参数，大家可以参照官网提供的教程（<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">中文</a>、<a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">English</a>）<br>一般来讲，需要大家修改以下参数：</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">这个是你网站的标题</td></tr><tr><td style="text-align:left">subtitle</td><td style="text-align:left">这个是你网站的副标题</td></tr><tr><td style="text-align:left">description</td><td style="text-align:left">这个是你网站的描述信息</td></tr><tr><td style="text-align:left">author</td><td style="text-align:left">这个是你的名称</td></tr><tr><td style="text-align:left">url</td><td style="text-align:left">这个是你网站的地址</td></tr><tr><td style="text-align:left">theme</td><td style="text-align:left">这个是你引用哪个博客主题，设置为false表示不使用主题</td></tr><tr><td style="text-align:left">deploy</td><td style="text-align:left">这个是你想把博客部署到哪个托管平台上</td></tr></tbody></table><h2 id="使用图床管理博文图片"><a href="#使用图床管理博文图片" class="headerlink" title="使用图床管理博文图片"></a>使用图床管理博文图片</h2><p>当前使用比较多的图床系统包括七牛、又拍云、新浪、极简图床，其中七牛和又拍云是收费图床，后面两个是免费的，知乎大佬都给过说明，好与坏戳<a href="https://www.zhihu.com/question/21667151/answer/74657827" target="_blank" rel="noopener">我</a>。</p><p>图床是有了，但是支不支持HTTPS又是另一回事，关于这个问题，放给大家去研究，这里不再细说。</p><p>当然对于小白（比如我）来说，使用Coding仓库作为图床也是不错的，而且还支持HTTPS，但是唯一的缺点就是速度太慢了。</p><p>使用Coding方法：</p><ul><li>在Coding中新建一个仓库，例如叫images；</li><li>clone仓库到本地，将图片添加到仓库，并push到Coding；</li><li>打开网页端的images仓库，点击需要的使用的图片，得到链接（url）；</li><li>将url中的blob改成raw即可使用。</li></ul><p>这个方法不推荐使用，有条件的还是使用七牛，毕竟速度还是有保障的。</p><h2 id="域名使用"><a href="#域名使用" class="headerlink" title="域名使用"></a>域名使用</h2><p>为了让自己的博客显得更高大尚的话，可以将自己的博客绑定自己的域名。</p><p>在个人博客中使用域名，首先要购买一个域名，域名根据不同的组合，价格不一样，当然也有免费的。根据个人使用经验，不建议使用免费的，常言道：免费的既是最贵的。因为在大多数情况下，域名就代表了你的博客，但是大部分免费域名只是免费一年，之后是需要购买的，域名到期后，很多人都觉得不值得续费，但是又有很多信息都是绑定的这个域名，从而陷入两难的境地。所以我建议大家好好考虑，尽量购买一个自己中意的，能长期使用的域名。</p><p>罗里吧嗦了那么多，小编总结了以下几点：</p><ul><li>一定是自己中意的，并能保证持续使用的</li></ul><ul><li>尽量购买<code>com</code>、<code>net</code>、<code>site</code>、<code>cc</code>、<code>top</code>、<code>club</code>等一级域名作为博客域名</li><li>域名越短越好</li><li>尽量只使用字母或数字</li><li>域名能有一定的含义或容易记住</li></ul><p>小编是在阿里云上购买的域名，那小编就讲述一下自己是怎么将自己的域名绑定到自己的博客上的。</p><ul><li>首先，登陆阿里云官网，注册账号并登陆，并在<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">万网</a>上购买自己心仪的域名</li><li>然后，打开“控制台”（右上角处），在左侧列表中找到倒数第二行“域名与网站”，点击“云解析DNS”</li><li>在右侧看到购买的域名，点击“解析设置”</li><li>为确保成功，先删除所有的解析设置</li><li>点击右上角的”添加解析“，记录类型选择”CNAME“，主机记录填入”@“，解析路线默认即可，记录值填入”demo.coding.me”，确认即可。</li></ul><p><strong>注意：以上的所填内容，只填引号内部的</strong></p><p>到此，稍等半小时，等待解析设置生效。</p><p>然后去设置Coding中博客：</p><ul><li>在<code>博客根目录/source</code>下新建一个CNAME文本，输入你的域名（例如demo.com），push到Coding中</li><li>打开<code>https://coding.net/u/demo/p/demo.coding.me/git/pages/static</code>，在“自定义域名”处绑定自己的域名即可。</li></ul><p>稍等片刻，在浏览器中打开你的域名（demo.com），不出意外就能解析到你的博客了。</p><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;建站，重在折腾：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在建站这个系列中，上一篇主要讲了怎么搭建博客环境，初始化博客项目，怎么新增博文，以及怎么部署博客。本次主要讲解一下&lt;code&gt;config.yml&lt;/code&gt;文件，怎么巧妙的使用&lt;code&gt;HTTPS&lt;/code&gt;的图床，还有就是听起来高大尚的&lt;strong&gt;绑定域名&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="Hexo" scheme="https://ibrucekong.github.io/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://ibrucekong.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>使用Nginx和OpenSSL搭建本地HTTPS的ArcGIS for JavaScript 4.6</title>
    <link href="https://ibrucekong.github.io/posts/2692255794/"/>
    <id>https://ibrucekong.github.io/posts/2692255794/</id>
    <published>2018-03-08T06:12:20.000Z</published>
    <updated>2018-03-08T06:12:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>HTTPS的初试：</strong><br>前两天看谷歌开发者公众号了解到Google Chrome要在68这个版本时彻底将HTTP网站列为不安全，要求全部网站都要支持HTTPS，由此萌生了先在本地搭建一些HTTPS的站点的想法。</p><a id="more"></a><h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1 背景"></a>1 背景</h2><p>由于工作任务，最近一直在写本子，了解了一些GIS方面的小知识，但是学的很浅显，其中就包括ArcGIS for JavaScript。基于谷歌公众号里面的启发，就想着在本地搭建一个HTTPS结构的ArcGIS for JavaScript站点。</p><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2 准备工作"></a>2 准备工作</h2><ul><li>Nginx <a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">下载</a></li><li>OpenSSL <a href="http://down-www.7down.net/pcdown/soft/W/win64openssl.rar" target="_blank" rel="noopener">下载</a></li><li>ArcGIS for JavaScript 4.6 <a href="https://developers.arcgis.com/downloads/apis-and-sdks?product=javascript&amp;version=4.6" target="_blank" rel="noopener">下载</a></li></ul><p><strong><em>注意：下载ArcGIS for JavaScript前，先在<a href="https://developers.arcgis.com" target="_blank" rel="noopener">https://developers.arcgis.com</a>注册ArcGIS账号</em></strong></p><h2 id="3-安装配置"><a href="#3-安装配置" class="headerlink" title="3 安装配置"></a>3 安装配置</h2><h3 id="3-1-Nginx"><a href="#3-1-Nginx" class="headerlink" title="3.1 Nginx"></a>3.1 Nginx</h3><p>下载好Nginx后，解压到<code>C:\</code>，得到<code>nginx.exe</code>在<code>C:\nginx\</code>根目录下，并将<code>C:\nginx</code>添加到系统环境变量的<code>PATH</code>中，即可完成Nginx的安装和配置。</p><h3 id="3-2-OpenSSL"><a href="#3-2-OpenSSL" class="headerlink" title="3.2 OpenSSL"></a>3.2 OpenSSL</h3><p>下载好OpenSSL后，双击安装，将安装目录设置为<code>C:\</code>中，安装后即为<code>C:\OpenSSL-Win64</code>，同理将<code>C:\OpenSSL-Win64\bin</code>添加到系统环境变量的<code>PATH</code>中，即可完成Nginx的安装和配置。</p><h3 id="3-3-ArcGIS-for-JavaScript-4-6"><a href="#3-3-ArcGIS-for-JavaScript-4-6" class="headerlink" title="3.3 ArcGIS for JavaScript 4.6"></a>3.3 ArcGIS for JavaScript 4.6</h3><p>下载好ArcGIS for JavaScript 4.6后，解压到<code>C:\nginx\html\</code>中，得到一个<code>C:\nginx\html\arcgis_js_api\library\4.6\</code>类似的目录。和往常一样，需要修改<code>init.js</code>和<code>dojo.js</code>中的域名信息。</p><p>将init.js和dojo.js中的以下的信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baseUrl:&quot;https://[HOSTNAME_AND_PATH_TO_JSAPI]dojo&quot;</span><br></pre></td></tr></table></figure></p><p>修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">baseUrl:&quot;http://localhost/arcgis_js_api/library/4.6/dojo&quot;</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">baseUrl:&quot;https://localhost/arcgis_js_api/library/4.6/dojo&quot;</span><br></pre></td></tr></table></figure></p><p><strong> 注意：<del>将https改为http</del>  这里不改也是可以的 </strong></p><p>自此，安装配置即已经完成，下一步需要生成并在Nginx中配置证书。</p><h2 id="4-证书的生成与配置"><a href="#4-证书的生成与配置" class="headerlink" title="4 证书的生成与配置"></a>4 证书的生成与配置</h2><h3 id="4-1生成证书"><a href="#4-1生成证书" class="headerlink" title="4.1生成证书"></a>4.1生成证书</h3><p>在网上查资料，有大佬是这样子做的（先不要照抄这里，继续看下面的）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -x509 -newkey rsa:2048 -out LocalhostCA.cer -outform PEM -keyout LocalhostCA.pvk -days 10000 -verbose -config LocalhostCA.cnf -nodes -sha256 -subj &quot;/CN=localhost CA&quot;</span><br><span class="line"></span><br><span class="line">$ openssl req -newkey rsa:2048 -keyout Localhost.pvk -out Localhost.req -subj /CN=localhost -sha256 -nodes</span><br><span class="line"></span><br><span class="line">$ openssl x509 -req -CA LocalhostCA.cer -CAkey LocalhostCA.pvk -in Localhost.req -out Localhost.cer -days 10000 -extfile Localhost.ext -sha256 -set_serial 0x1111</span><br></pre></td></tr></table></figure><p>首先在<code>C:\OpenSSL-Win64\bin</code>新建两个文件：<br>第一个文件<code>LocalhostCA.cnf</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[ req ]</span><br><span class="line">distinguished_name  = req_distinguished_name</span><br><span class="line">x509_extensions     = root_ca</span><br><span class="line"></span><br><span class="line">[ req_distinguished_name ]</span><br><span class="line">countryName             = CN</span><br><span class="line">countryName_min         = 2</span><br><span class="line">countryName_max         = 2</span><br><span class="line">stateOrProvinceName     = Ji Nan</span><br><span class="line">localityName            = Ji Nan</span><br><span class="line">0.organizationName      = TelChina</span><br><span class="line">organizationalUnitName  = GIS Engineer</span><br><span class="line">commonName              = localhost</span><br><span class="line">commonName_max          = 64</span><br><span class="line">emailAddress            = kongbin0325@hotmail.com</span><br><span class="line">emailAddress_max        = 64</span><br><span class="line"></span><br><span class="line">[ root_ca ]</span><br><span class="line">basicConstraints            = critical, CA:true</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:left">配置项</th><th style="text-align:left">值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">distinguished_name</td><td style="text-align:left">req_distinguished_name</td><td style="text-align:left">不用管，反正我没改</td></tr><tr><td style="text-align:left">x509_extensions</td><td style="text-align:left">root_ca</td><td style="text-align:left">X.509证书的扩展项(我瞎说的)</td></tr><tr><td style="text-align:left">countryName</td><td style="text-align:left">CN</td><td style="text-align:left">国家缩写，必须是两个字母</td></tr><tr><td style="text-align:left">countryName_min</td><td style="text-align:left">2</td><td style="text-align:left">就写2吧</td></tr><tr><td style="text-align:left">countryName_max</td><td style="text-align:left">2</td><td style="text-align:left">也是2。。。</td></tr><tr><td style="text-align:left">stateOrProvinceName</td><td style="text-align:left">ShanDong</td><td style="text-align:left">所在省</td></tr><tr><td style="text-align:left">localityName</td><td style="text-align:left">Ji Nan</td><td style="text-align:left">所在市</td></tr><tr><td style="text-align:left">0.organizationName</td><td style="text-align:left">TelChina</td><td style="text-align:left">所在公司</td></tr><tr><td style="text-align:left">organizationalUnitName</td><td style="text-align:left">GIS Engineer</td><td style="text-align:left">职位</td></tr><tr><td style="text-align:left">commonName</td><td style="text-align:left">localhost</td><td style="text-align:left">自己的域名</td></tr><tr><td style="text-align:left">commonName_max</td><td style="text-align:left">64</td><td style="text-align:left">我抄的</td></tr><tr><td style="text-align:left">emailAddress</td><td style="text-align:left"><a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">kongbin0325@hotmail.com</a></td><td style="text-align:left">邮箱</td></tr><tr><td style="text-align:left">emailAddress_max</td><td style="text-align:left">64</td><td style="text-align:left">还是抄的</td></tr><tr><td style="text-align:left">basicConstraints</td><td style="text-align:left">critical, CA:true</td><td style="text-align:left">照着我的写就行！</td></tr></tbody></table><p><strong> 注意：countryName和 commonName要特别注意，其他的都OK ！ </strong></p><p>第二个文件<code>Localhost.ext</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">subjectAltName = @alt_names</span><br><span class="line">extendedKeyUsage = serverAuth</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1   = localhost</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:left">配置项</th><th style="text-align:left">值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">subjectAltName</td><td style="text-align:left">@alt_names</td><td style="text-align:left">不用管，反正我没改</td></tr><tr><td style="text-align:left">extendedKeyUsage</td><td style="text-align:left">serverAuth</td><td style="text-align:left">不用管，反正我没改</td></tr><tr><td style="text-align:left">DNS.1</td><td style="text-align:left">localhost</td><td style="text-align:left">设置域名</td></tr><tr><td style="text-align:left">DNS.2</td><td style="text-align:left">123.123.32.34</td><td style="text-align:left">懂吧，可以设置多个域名（这个IP是我瞎写的）</td></tr></tbody></table><p>然后，在<code>C:\OpenSSL-Win64\bin</code>中打开<code>cmd</code>，准备执行上面三条语句。但是第一条语句就报了错，发现无法生成<em>.cer和</em>.req文件（估计是软件版本问题导致的），又是百度，又是谷歌，还是Stack Overflow的，消耗了不少时间。最后根据以下报错信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Subject does not start with <span class="string">"/"</span></span><br><span class="line">Problems makeing certificate request</span><br></pre></td></tr></table></figure></p><p>我尝试着将<code>-subj</code>参数删除，执行了一次，提示我输入<code>Localhost.cnf</code>文件中<code>req_distinguished_name</code>的配置项（按照提示重新输入一次就可以了）。以此执行如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -x509 -newkey rsa:2048 -out LocalhostCA.cer -outform PEM -keyout LocalhostCA.pvk -days 10000 -verbose -config LocalhostCA.cnf -nodes -sha256</span><br></pre></td></tr></table></figure></p><p>同理，第二条语句也把<code>-subj</code>参数删除，执行过程中需要输入一些参数，最后执行成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -newkey rsa:2048 -keyout Localhost.pvk -out Localhost.req -sha256 -nodes</span><br></pre></td></tr></table></figure></p><p>第三条语句没有<code>-subj</code>选项，直接执行即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openssl x509 -req -CA LocalhostCA.cer -CAkey LocalhostCA.pvk -in Localhost.req -out Localhost.cer -days 10000 -extfile Localhost.ext -sha256 -set_serial 0x1111</span><br></pre></td></tr></table></figure></p><h3 id="4-2-配置证书和Nginx"><a href="#4-2-配置证书和Nginx" class="headerlink" title="4.2 配置证书和Nginx"></a>4.2 配置证书和Nginx</h3><p>将生成的Localhost.cer和Localhost.pvk文件复制到Nginx的conf目录中。<br>修改nginx.conf文件，添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># HTTPS server</span><br><span class="line">server&#123;  </span><br><span class="line">    listen 443;  </span><br><span class="line">    server_name localhost;  </span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate Localhost.cer;  </span><br><span class="line">    ssl_certificate_key Localhost.pvk; </span><br><span class="line">    ssl_session_timeout 5m;  </span><br><span class="line">    ssl_protocols SSLv2 SSLv3 TLSv1;  </span><br><span class="line">    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;  </span><br><span class="line">    ssl_prefer_server_ciphers on;  </span><br><span class="line">    add_header &apos;Access-Control-Allow-Headers&apos; &apos;Content-Type&apos;;  </span><br><span class="line">    add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;  </span><br><span class="line">    add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET&apos;;  </span><br><span class="line">     </span><br><span class="line">    location / &#123;  </span><br><span class="line">        root html; </span><br><span class="line">        index index.html 50x.html;  </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="4-3-重启Nginx"><a href="#4-3-重启Nginx" class="headerlink" title="4.3 重启Nginx"></a>4.3 重启Nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="4-4-导入证书"><a href="#4-4-导入证书" class="headerlink" title="4.4 导入证书"></a>4.4 导入证书</h3><p>在IE中打开Internet选项 -&gt; 内容 -&gt; 证书 -&gt; 受信任的根证书颁发机构  -&gt; 导入 -&gt; LocalhostCA.cer。<br>尝试访问<code>https://localhost/arcgis_js_api/library/4.6/init.js</code>，在网址的左侧显示一个小绿锁则表示HTTPS配置成功，自此所有配置过程都已经完成。</p><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><p><hr></p><div style="text-align: center;font-weight: bold;"><br>    全文重点来了！<br></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 值此3.8女神节，祝福所有的女性：</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; forever; i++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Happiness Everyday!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;HTTPS的初试：&lt;/strong&gt;&lt;br&gt;前两天看谷歌开发者公众号了解到Google Chrome要在68这个版本时彻底将HTTP网站列为不安全，要求全部网站都要支持HTTPS，由此萌生了先在本地搭建一些HTTPS的站点的想法。&lt;/p&gt;
    
    </summary>
    
      <category term="gis" scheme="https://ibrucekong.github.io/categories/gis/"/>
    
    
      <category term="Nginx" scheme="https://ibrucekong.github.io/tags/Nginx/"/>
    
      <category term="代理" scheme="https://ibrucekong.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="GIS" scheme="https://ibrucekong.github.io/tags/GIS/"/>
    
      <category term="OpenSSL" scheme="https://ibrucekong.github.io/tags/OpenSSL/"/>
    
  </entry>
  
  <entry>
    <title>吾爱破解论坛2018年3月13日十周年开放注册通知</title>
    <link href="https://ibrucekong.github.io/posts/224769818/"/>
    <id>https://ibrucekong.github.io/posts/224769818/</id>
    <published>2018-03-05T04:48:33.000Z</published>
    <updated>2018-03-05T04:48:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>吾爱破解论坛注册喜讯：</strong><br>说起吾爱，小白的福利，老司机的神站，每个人都想拥有一个账号。吾爱破解论坛值此十周年之际，开放了注册功能，有需要的小伙伴千万不要再错过了。</p><a id="more"></a><div style="text-align: center;font-weight: bold;font-size: 2rem; color: red"><br>    喜讯、喜讯、喜讯<br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    <span>吾爱破解论坛开通开放注册</span><br>    <span>2018年3月13日12:00-14:00和20:00-22:00</span><br></div><div style="text-align: center;font-weight: bold;font-size: 1.5rem;padding-top: 0;margin-top: 0;height: 106px;line-height: 106px"><a href="https://www.52pojie.cn/?fromuid=575811" style="text-align: center;" target="_blank" rel="noopener">我要吾爱</a></div><br><div></div><br><strong><em>注册注意事项：</em></strong><br><br>1. 注意不要错过注册时间<br>2. 认真读注册须知（需要等10分钟）<br>3. 事先把注册信息写在本子或word里（独一无二的邮箱和用户名） <a href="https://www.52pojie.cn/misc.php?mod=faq&amp;action=faq&amp;id=15&amp;messageid=16" target="_blank" rel="noopener">需要准备什么</a><br>4. 耐心检查填写内容（看是否都符合要求）<br>5. 邮箱验证阶段，有的要到邮箱的垃圾箱中查看有没有验证邮件，而有的邮箱则需要设置白名单才能收到验证邮件 <a href="https://www.52pojie.cn/thread-98585-1-1.html" target="_blank" rel="noopener">帮助</a><br><br><div style="text-align: center;font-weight: bold;font-size: 1.5rem"><br>    祝愿小伙伴们都能获得自己的吾爱账号！<br></div><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;吾爱破解论坛注册喜讯：&lt;/strong&gt;&lt;br&gt;说起吾爱，小白的福利，老司机的神站，每个人都想拥有一个账号。吾爱破解论坛值此十周年之际，开放了注册功能，有需要的小伙伴千万不要再错过了。&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="活动" scheme="https://ibrucekong.github.io/tags/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="吾爱破解" scheme="https://ibrucekong.github.io/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Nginx学习入门</title>
    <link href="https://ibrucekong.github.io/posts/547195145/"/>
    <id>https://ibrucekong.github.io/posts/547195145/</id>
    <published>2018-01-12T10:26:06.000Z</published>
    <updated>2018-01-12T10:26:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Nginx让系统部署花样百出：</strong><br>在系统部署时，遇到了一个需要多方考虑的安全问题，出于架构师老大的一句话，说先用Nginx做下代理（后来讨论，此方法治标不治本，就放弃了此方法，但是Nginx还是看了那么一会儿），菜鸟如我百度谷歌一番，稍微了解了一些Nginx的最基本用法。</p><a id="more"></a><h2 id="Nginx简介"><a href="#Nginx简介" class="headerlink" title="Nginx简介"></a>Nginx简介</h2><p>上面已经说了是大佬的一句话，其实在此之前我也使用过一些简单的反向代理，解决跨域问题（学的就是毛毛雨），在生产环境中还没真正使用过。那么老大说道了Nginx，那学习之前得了解Nginx是什么？能做什么，优势是什么？</p><p><strong>是什么</strong></p><p>是一个高性能的<a href="https://baike.baidu.com/item/HTTP" target="_blank" rel="noopener">HTTP</a>和<a href="https://baike.baidu.com/item/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86" target="_blank" rel="noopener">反向代理</a>服务器，也是一个IMAP/POP3/SMTP服务器。</p><p><strong>能做什么？</strong></p><ul><li>反向代理</li><li>正向代理</li><li>HTTP服务器</li><li>负载均衡（什么鬼，，，）</li></ul><p><strong>优势有哪些？</strong></p><ul><li>轻量web服务器</li><li>适合做静态请求和反向（不适合做动态请求，动态用apache）</li><li>抗高并发，nginx 处理请求异步非阻塞，使用较低的资源支持更高的并发数</li><li>负载均衡</li></ul><h2 id="location配置"><a href="#location配置" class="headerlink" title="location配置"></a>location配置</h2><p> 以下内容只讲了自己用到的，在讲解方面可能没有那么标准，差不多都是自己理解和实践的，希望能让大家更容易理解和使用吧！</p><p>基本语法：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> [=|~|~*|^~] /uri/ &#123; </span><br><span class="line">  … </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>= 严格匹配。如果这个查询匹配，那么将停止搜索并立即处理此请求。</li><li>~ 为区分大小写匹配(可用正则表达式)</li><li>!~为区分大小写不匹配</li><li>~* 为不区分大小写匹配(可用正则表达式)</li><li>!~*为不区分大小写不匹配</li><li>^~ 如果把这个前缀用于一个常规字符串,那么告诉nginx 如果路径匹配那么不测试正则表达式。</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">  <span class="attribute">root</span>   html;</span><br><span class="line">  <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用root、alias和proxy-pass"><a href="#使用root、alias和proxy-pass" class="headerlink" title="使用root、alias和proxy_pass"></a>使用root、alias和proxy_pass</h2><p>由于最近在看<a href="http://www.layui.com" target="_blank" rel="noopener">layui</a>的一些东西（不是广告），就顺手拿来做个演示！（以下提到的layui，指的是layui官方提供<a href="http://www.layui.com/template/fly/" target="_blank" rel="noopener">社区模板</a>的html目录。</p><p>阅读到这时，如果你还没有nginx环境，请点击<a href="">下载</a>搭建你的环境，</p><ul><li>点击<a href="http://nginx.org" target="_blank" rel="noopener">Nginx官网</a>，点击最新带有<code>mainline version</code>字样的链接，建议下载<code>Stable version</code>版本；</li><li>下载得到一个zip包，解压到你想放置的目录，双击启动<code>nginx.exe</code></li></ul><blockquote><p> <em>另外再说明一下实践的环境，本地解析使用的80端口，反向代理转发的url不带端口</em></p><p> <em>以下代码均在<code>nginx/conf/</code>文件夹下的<code>nginx.conf</code>文件中修改</em></p><p> <em>在修改保存<code>nginx.conf</code>后，记得使用<code>nginx -s reload</code>重载配置文件，使其生效</em></p></blockquote><p>使用alias 设置本地虚拟目录，后面必须加上 / ，alias 指定本地目录，例如Windows系统上设置为 <code>D:/html/app/</code>，若是使用mac或linux，路径最后也要加上 / ，例如 <code>~/html/app/</code> or <code>/home/bruce/html/app/</code>。</p><p>以下两个方法都能跳转到layui中，这个相当于直接访问 <code>D:/ComSoftwares/nginx-1.13.7/html/layui</code>目录，可以理解为在root目录下，访问layui目录：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span><span class="regexp"> ^~</span> /layui &#123;</span><br><span class="line"><span class="attribute">root</span> D:/ComSoftwares/nginx-<span class="number">1</span>.<span class="number">13</span>.<span class="number">7</span>/html/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问<code>localhost/alayui</code>或<code>localhost/alayui/</code>自动代理到<code>D:/ComSoftwares/nginx-1.13.7/html/layui/</code>目录下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /alayui &#123;</span><br><span class="line"><span class="attribute">alias</span> D:/ComSoftwares/nginx-<span class="number">1</span>.<span class="number">13</span>.<span class="number">7</span>/html/layui/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 <code>=</code> 匹配访问链接 只能匹配<code>localhost/blayui</code>或者<code>localhost/blayui/</code>，对于子目录无法进行访问<br>即对<code>localhost/blayui/jie/add.html</code> 无法进行访问<br>可以看出 = 是严格匹配</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> = /blayui/ &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://localhost/layui/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三种方法的利弊：</p><ul><li>第一种和没设置一样（ 为了学习root）</li><li>第二种根据访问的链接，去代理到一定的目录下，即代理了当前链接，又代理了子目录</li><li>第三种只严格匹配了当前链接，对于子目录无法进行访问</li></ul><blockquote><p> <em>推荐使用第二种：alias方法</em></p></blockquote><h2 id="使用rewrite、proxy-pass和正则表达式"><a href="#使用rewrite、proxy-pass和正则表达式" class="headerlink" title="使用rewrite、proxy_pass和正则表达式"></a>使用rewrite、proxy_pass和正则表达式</h2><p>下面的方法统一使用了正则表达式来解决访问链接<br>添加访问目录为<code>/apis</code>的代理配置，用<code>127.0.0.1:80/apis</code>重定向<a href="http://www.layui.com，" target="_blank" rel="noopener">http://www.layui.com，</a><br>在ajax中访问<code>/apis/demo/table/user</code>,相当于访问<a href="http://www.layui.com/demo/table/user" target="_blank" rel="noopener">http://www.layui.com/demo/table/user</a></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /apis &#123;</span><br><span class="line">  <span class="attribute">rewrite</span> <span class="regexp"> ^/apis/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_pass</span>   http://www.layui.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 参考学习 <a href="http://blog.csdn.net/tjcyjd/article/details/50897959" target="_blank" rel="noopener">http://blog.csdn.net/tjcyjd/article/details/50897959</a></p></blockquote><p>总的来说，alias使用简单粗暴，转发本地目录；而正则表达式使用起来更爽，处理的情况更多，让更多事情变得简单，运行高效，低资源占用，代理强大的处理方法。</p><p>由于学习Nginx的时间有限，只针对自己遇到的问题进行了研究，如若有不对或不合适的地方，请批评指正，谢谢！<br>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Nginx让系统部署花样百出：&lt;/strong&gt;&lt;br&gt;在系统部署时，遇到了一个需要多方考虑的安全问题，出于架构师老大的一句话，说先用Nginx做下代理（后来讨论，此方法治标不治本，就放弃了此方法，但是Nginx还是看了那么一会儿），菜鸟如我百度谷歌一番，稍微了解了一些Nginx的最基本用法。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Nginx" scheme="https://ibrucekong.github.io/tags/Nginx/"/>
    
      <category term="代理" scheme="https://ibrucekong.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Cesium简介与环境搭建</title>
    <link href="https://ibrucekong.github.io/posts/3718307484/"/>
    <id>https://ibrucekong.github.io/posts/3718307484/</id>
    <published>2018-01-10T11:05:25.000Z</published>
    <updated>2018-01-10T11:05:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Cesium的Web 3DGIS应用：</strong><br>Cesium是WebGIS领域的一个很重要的方向，它具有开源，更新快、、跨平台、跨浏览器和无需插件支持的Web 3DGIS引擎，在地里信息行业有着很好的应用前景。</p><a id="more"></a><h2 id="Cesium简介"><a href="#Cesium简介" class="headerlink" title="Cesium简介"></a>Cesium简介</h2><div style="text-align: center;"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/cesium-office-site.png" alt="Cesium"></div><blockquote><p>官网介绍</p><p>Cesium is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.</p></blockquote><p>简单来讲就是说，Cesium是一个可以同时支持2D和 3D地图的引擎，无需浏览器插件支持的JavaScript开发库。但是浏览器必须支持WebGL，不然就是扯淡、免谈，而且Cesium能使用本地硬件加速图形渲染，具有跨平台、跨浏览器的特性，另外还可以优化动态数据的可视化。（对于英语没过六级的人，表示翻译压力有点大，看不懂的请移步）</p><p>Cesium支持三维地球（3D），二维地图（2D）以及2.5D哥伦布视图（2.5D），还可以实现基于时间轴的动态数据展示</p><h2 id="Cesium优缺点"><a href="#Cesium优缺点" class="headerlink" title="Cesium优缺点"></a>Cesium优缺点</h2><p><strong>优点：</strong></p><ul><li>开源</li><li>框架更新迭代周期短</li><li>无需插件支持</li><li>跨平台、跨浏览器</li><li>地图数据展示效果比较好</li></ul><p><strong>缺点</strong></p><ul><li>和商业软件相比，三维分析处理相对较弱</li><li>地图组件不够全面</li></ul><h2 id="搭建Cesium开发环境"><a href="#搭建Cesium开发环境" class="headerlink" title="搭建Cesium开发环境"></a>搭建Cesium开发环境</h2><p>搭建环境向来不止一种方式，这里提供三种方式：一、npm安装；二、Github下载；三、依赖第三方发布组件</p><h3 id="下载Cesium组件"><a href="#下载Cesium组件" class="headerlink" title="下载Cesium组件"></a>下载Cesium组件</h3><h4 id="npm下载"><a href="#npm下载" class="headerlink" title="npm下载"></a>npm下载</h4><p>这是一种官网推荐的方式，在当前前端React、Angular、Vue三足鼎立的时期，基于npm安装组件的项目越来越多，Cesium官方也推送了npm下载方式：<code>npm install cesium</code>(默认你已经配置了node.js和npm环境)，执行后，会在当前目录下看到一个<code>node_moudles</code>文件夹，里面有下载下来的cesium依赖包，具体目录在<code>node_modules\cesium\Build\Cesium</code>中，也可以将Cesium文件夹拷贝出来，放到工程中使用。</p><h4 id="Github下载"><a href="#Github下载" class="headerlink" title="Github下载"></a>Github下载</h4><p>在Github中找组件，一般方式为：</p><ul><li>打开Cesium在Github上的<a href="https://github.com/AnalyticalGraphicsInc/cesium" target="_blank" rel="noopener">链接</a>，直接点击<code>clone or download</code>选择<code>download zip</code>即可下载Cesium工程文件；</li><li>如果系统中安装了Git环境，可以使用以下方法获取：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AnalyticalGraphicsInc/cesium.git</span><br></pre></td></tr></table></figure><blockquote><p>但是本文建议大家，在找到自己想要使用的组件时，尽量去<code>releases</code>下面去下载发布版本，这样的版本更加稳定。</p></blockquote><p>本文以下载<code>releases</code>中的zip包为例，</p><ul><li>打开<code>releases</code>的<a href="https://github.com/AnalyticalGraphicsInc/cesium/releases" target="_blank" rel="noopener">链接</a>，下载最新版本的zip包，解压到想要放置的文件夹下面</li><li>打开cmd命令终端，<code>cd</code>进入到Cesium文件夹下</li><li>使用<code>npm install</code>安装组件依赖</li><li><code>npm start</code>启动服务，打开浏览器访问<code>http://localhost:8080/</code>，可以看到一些入门链接和示例。</li></ul><div style="text-align: center;"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/cesium-office-demo.png" alt="Cesium"></div><p>以上是官方提供的学习链接，但是我要引用的组件呢？</p><p>细心的童鞋可能看到了根目录下有一个build目录，和<code>npm install cesium</code>下载下来的Cesium文件夹很相似，没错就是它，打开build会看到有三个目录<code>Cesium, CesiumUnminified, Documentation</code>，第一个文件夹是Cesium的未压缩版本的组件，第二个文件夹是经过压缩的组件，第三个文件夹是一些接口文档。</p><blockquote><p>一般开发期间引用未压缩版本，便于调试</p><p>部署发布期间使用压缩版本，结余流量，提高访问速度</p></blockquote><h4 id="第三方组件依赖"><a href="#第三方组件依赖" class="headerlink" title="第三方组件依赖"></a>第三方组件依赖</h4><p>博主也提供了第三方组件的依赖，虽规模不大，都是一些自己或者常用的一些组件。由于是刚建立，不管是功能还是组件库都比较少，后续会慢慢增加的，不仅加入自己上传的库，还会增加一些第三方的、使用CDN加速的库链接。</p><p>打开<a href="https://library.brucekong.com" target="_blank" rel="noopener">https://library.brucekong.com</a>，会看到当前库里面都有哪些组件，把鼠标移动到链接上，会自动选中该链接，直接按<code>Ctrl + C</code>就可以将链接复制，放到你需要引用的位置。</p><h3 id="引用库文件"><a href="#引用库文件" class="headerlink" title="引用库文件"></a>引用库文件</h3><p>前两种方法中，将Cesium文件夹放入到工程中，引用<code>Cesium/Cesium.js和Cesium/Widgets/Widgets.css</code>即可，第三种方法，直接将链接放入到<code>src</code>中即可。</p><h3 id="完成Hello-World"><a href="#完成Hello-World" class="headerlink" title="完成Hello World"></a>完成Hello World</h3><p>前两种都是使用本地文件引用形式，不在演示，只演示第三种，废话少说，直接上代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Use correct character set. --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Tell IE to use the latest, best version. --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Make the application on mobile take up the full browser screen and disable user scaling. --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://library.brucekong.com/cesium/1.41/Cesium.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">      @import url(https://library.brucekong.com/cesium/1.41/Widgets/widgets.css);</span></span><br><span class="line"><span class="undefined">      html, body, #cesiumContainer &#123;</span></span><br><span class="line"><span class="undefined">          width: 100%; height: 100%; margin: 0; padding: 0; overflow: hidden;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"cesiumContainer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    var viewer = new Cesium.Viewer('cesiumContainer');</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div style="text-align: center;"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/cesium-hello-world.png" alt="Cesium"></div><blockquote><p>注意，引用本地文件时，需要将工程放入到Tomcat、Nginx或Apache等web服务器中运行；如果不放进服务器中，直接运行将会报错，而引用第三方发布的组件不会出现这种情况。</p></blockquote><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Cesium的Web 3DGIS应用：&lt;/strong&gt;&lt;br&gt;Cesium是WebGIS领域的一个很重要的方向，它具有开源，更新快、、跨平台、跨浏览器和无需插件支持的Web 3DGIS引擎，在地里信息行业有着很好的应用前景。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Cesium" scheme="https://ibrucekong.github.io/tags/Cesium/"/>
    
      <category term="3D Map" scheme="https://ibrucekong.github.io/tags/3D-Map/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建自己的博客天地(上)</title>
    <link href="https://ibrucekong.github.io/posts/3667539278/"/>
    <id>https://ibrucekong.github.io/posts/3667539278/</id>
    <published>2017-12-06T02:15:53.000Z</published>
    <updated>2018-03-13T10:50:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>建站，重在折腾：</strong></p><p>之前提及过公网建站的文章（站内搜索[Ctrl+F]：Say you again），但是没有讲具体的流程，在踩过N个坑之后，在这里讲一下自己建站的经验，让更多的爱好者轻松完成建（折）站（腾）工作。下面开始唐僧念经时间~</p><a id="more"></a><h2 id="站点准备"><a href="#站点准备" class="headerlink" title="站点准备"></a>站点准备</h2><p>要搭建个人博客，需要一些条件的支持，一般包括如下内容：</p><ul><li><a href="https://github.com" target="_blank" rel="noopener">GitHub</a>、<a href="https://coding.net" target="_blank" rel="noopener">Coding</a>、<a href="https://gitlab.com" target="_blank" rel="noopener">Gitlab</a>、<a href="https://gitee.com" target="_blank" rel="noopener">Gitee</a>等支持Pages服务的代码托管平台</li><li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Themes of Hexo</a></li></ul><div style="text-align: center"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/gits.png" alt="hexo-theme"></div><p>首先在第一个选项中选择一个适合自己的托管平台，我是从GitHub到Gitee，再到Coding。当时刚接触Hexo时，只想着能在公网访问自己的博客就算成功了，然后就在GitHub上部署了自己的第一个站点（无奈太烂，只好解散）；后来，想着博客搞那么烂，有的还是搬砖搬过来的，还是体力活，站点源码就不开源了，中间用了一段时间Gitee；再后来，全世界都在HTTPS，都在使用自己的域名，那我也得跟得上潮流不是，所以综合考虑后就选择了Coding。为了少踩坑，本文就直接使用Coding作为平台进行说明。</p><p><em>托管平台大家可以自行选择，根据自己的需求，选择适合自己的就是最好的</em></p><p>然后去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题网站</a>，下载自己喜欢的主题样式，天生审美残缺，这里就不给推荐了，大家自行选择。</p><div style="text-align: center"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/hexo-theme.png" alt="hexo-theme"></div><p>如果不是Git、Node.js小白，请跳过<strong>必备技能</strong>，直接进入<strong>站点配置</strong></p><h2 id="必备技能"><a href="#必备技能" class="headerlink" title="必备技能"></a>必备技能</h2><h3 id="Git安装与配置"><a href="#Git安装与配置" class="headerlink" title="Git安装与配置"></a>Git安装与配置</h3><p>参见<a href="https://blog.brucekong.com/posts/3219987363/" target="_blank" rel="noopener">Git安装与配置</a></p><h3 id="Node安装"><a href="#Node安装" class="headerlink" title="Node安装"></a>Node安装</h3><p>参见<a href="https://blog.brucekong.com/posts/3412983070/" target="_blank" rel="noopener">Node安装与配置</a></p><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>当Git和Node.js安装配置好后，还要安装hexo组件，用来创建博客项目。</p><ul><li><p>使用cnpm安装Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i hexo-cli -g</span><br></pre></td></tr></table></figure></li><li><p>使用hexo创建第一个博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure></li><li><p>进入blog，安装模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">cnpm i</span><br></pre></td></tr></table></figure></li><li><p>生成静态网页，启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li></ul><p>打开服务连接<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，最基本的博客项目就运行起来了，下一步就要对博客进行美化加工。</p><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>参见<a href="https://blog.brucekong.com/posts/417703024/" target="_blank" rel="noopener">Markdown学习入门</a></p><h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><p>找到好Hexo主题后，找到主题托管的工程，一般都会有一定的说明，以next主题为例：</p><ul><li>首先<code>cd</code>进入到<code>blog</code>根目录；<br><code>git clone https://github.com/hexojs/hexo-theme-next themes/next</code><br><code>next</code>主题就已经放入到<code>blog/themes</code>文件夹下了，如果不对<code>next</code>工程进行PR操作，或者为了减小<code>blog</code>的体积，可以把<code>next</code>文件夹下的.git文件夹删除。</li><li><p>打开<code>blog/_config.yml</code>文件<br>修改theme</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li><li><p>先清理已有的工程，重新生成静态网页，并启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">或者</span><br><span class="line">hexo clean &amp; hexo g &amp; hexo s</span><br></pre></td></tr></table></figure></li></ul><p>为确保没有浏览器缓存，我一般会加上<code>hexo clean</code>，其实只要页面不报错一般也是不需要的，打开服务连接<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，是不是发现博客主题已经改变了~~~</p><h2 id="发布站点"><a href="#发布站点" class="headerlink" title="发布站点"></a>发布站点</h2><p>到这个时候，肯定有人说：“你讲了这么多，博客不还只是在本地用，哪里到公网访问了，哪里用到Coding了…”</p><div style="text-align: center;font-size: 2.5rem;padding: 20px;box-shadow: inset 0px 0px 30px red;display: none">客官，别急，这就来!</div><br><em> （假设你的用户名是demo）先到coding上新建一个<code>demo.coding.me</code>的项目，打开<code>https://coding.net/u/demo/p/demo.coding.me/git/pages/static</code>，开启<code>Pages服务</code>，Coding会自动帮你申请<code>HTTPS</code>，自此留着待用…</em> 打开<code>blog/_config.yml</code>文件<br><em> 修改deploy参数，格式要严格遵守deploy参数（不知道的，可以<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">Hexo部署</a>获取帮助）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repo: git@git.coding.net:demo/demo.coding.me.git</span><br><span class="line">  branch: master</span><br><span class="line">  message: commit message</span><br></pre></td></tr></table></figure></em> 然后，打开Git Bash，cd到blog目录，执行：<br><code>hexo clean &amp; hexo g &amp; hexo d</code><br>注意：这个过程可能需要你输入账号密码，也可能没有-.-<br><em> 打开网页中的<code>demo.coding.me</code>仓库工程，刷新网页检查代码是否已经部署了；</em> 成功后，打开<code>https://demo.coding.me</code>，如果未能打开，需等待几分钟等待Coding解析刚部署的网页。<br><br>## 新增博文<br><br>站点部署好后，要做到博客由访问量和活跃度需要及时更新博文，下面演示一下怎么新增一篇博文：<br><br><em> 首先cd到blog根目录</em> 新增博文<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;newpage&quot;     这是简写</span><br><span class="line">hexo new &quot;newpage&quot;   这是全拼</span><br></pre></td></tr></table></figure><br><br><em> 然后在blog/source/_posts文件夹中，出现一个<code>newpage.md</code>文档，并附带默认文章头<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: newpage</span><br><span class="line">date: 2017-12-06 12:06:22</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></em> 尝试修改博文内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: newpage</span><br><span class="line">date: 2017-12-06 12:06:22</span><br><span class="line">tags: tips</span><br><span class="line">---</span><br><span class="line"># 我是一级标题</span><br><span class="line">## 我是二级标题</span><br><span class="line"></span><br><span class="line">* 我是列表1</span><br><span class="line">* 我是列表2</span><br><span class="line"></span><br><span class="line">！[我是图片](https://blog.brucekong.com/favicon.png)</span><br><span class="line"></span><br><span class="line">[我是链接](https://blog.brucekong.com)</span><br><span class="line"></span><br><span class="line">&lt;div style=&quot;text-align: center;&quot;&gt;我是居中内容&lt;/div&gt;</span><br></pre></td></tr></table></figure><br><br><em> 保存文档，本地查看博文<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp; hexo g &amp; hexo s</span><br></pre></td></tr></table></figure><br><br>打开服务连接<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，检查博文板式是否符合你的预期效果</em> 部署本篇博客到Coding服务器<br>在<code>blog/_config.yml</code>的deploy选项的message中填入本次提交的log文，一遍以后查找<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repo: git@git.coding.net:demo/demo.coding.me.git</span><br><span class="line">  branch: master</span><br><span class="line">  message: add a new article</span><br></pre></td></tr></table></figure><br><br>执行部署命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><br><br><em> 打开网页中的<code>demo.coding.me</code>工程，刷新网页检查代码是否已经部署了；</em> 成功后，打开<code>https://demo.coding.me</code>，已经可以看到新增的博文了。<br><br>通过以上唠唠叨叨后，能实现最基本的Coding建站，新增博文，希望能对大家有所帮助！<br><br>本次主要完成了基于Hexo技术搭建的Coding Pages个人博客，实现了环境搭建、初始化博客项目、新增博文、部署博文，并是使用HTTPS进行访问。<br><br><strong>TODO：有待增加的包括（1）解析_config.yml参数，（2）使用图床管理博文图片，（3）绑定域名</strong><br>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a><br><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;建站，重在折腾：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之前提及过公网建站的文章（站内搜索[Ctrl+F]：Say you again），但是没有讲具体的流程，在踩过N个坑之后，在这里讲一下自己建站的经验，让更多的爱好者轻松完成建（折）站（腾）工作。下面开始唐僧念经时间~&lt;/p&gt;
    
    </summary>
    
      <category term="tips" scheme="https://ibrucekong.github.io/categories/tips/"/>
    
    
      <category term="Hexo" scheme="https://ibrucekong.github.io/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://ibrucekong.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>使用BeautifulSoup和pdfkit爬取菜鸟教程到pdf文件!</title>
    <link href="https://ibrucekong.github.io/posts/1297890910/"/>
    <id>https://ibrucekong.github.io/posts/1297890910/</id>
    <published>2017-11-06T05:13:34.000Z</published>
    <updated>2017-11-06T05:13:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>锋利的BeautifulSoup：</strong></p><p>BeautifulSoup是Python爬虫里面使用较为广泛的库，其主要功能是从网页中抓取数据，可以使用较少的代码实现完整的数据爬取工作。</p><a id="more"></a><h2 id="BeautifulSoup简介"><a href="#BeautifulSoup简介" class="headerlink" title="BeautifulSoup简介"></a>BeautifulSoup简介</h2><p>&emsp;&emsp;BeautifulSoup提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据，因为简单，所以不需要多少代码就可以写出一个完整的应用程序。</p><h2 id="pdfkit简介"><a href="#pdfkit简介" class="headerlink" title="pdfkit简介"></a>pdfkit简介</h2><p>&emsp;&emsp;pdfkit是一个把HTML+CSS格式的文件转换成PDF格式文档的一种工具。它是对html转pdf工具包wkhtmltopdf的封装，所以必须要安装wkhtmltopdf，并将wkhtmltopdf的安装路径配置到系统环境PATH中。</p><blockquote><p>可以参考：<a href="http://blog.csdn.net/appleyuchi/article/details/70947138" target="_blank" rel="noopener">pdfkit与wkhtmltopdf的安装与使用</a></p></blockquote><h2 id="爬取的关键代码"><a href="#爬取的关键代码" class="headerlink" title="爬取的关键代码"></a>爬取的关键代码</h2><p>&emsp;&emsp;列举了一些共有变量和设置的变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 比如爬取python3，网址：http://www.runoob.com/python3/python3-tutorial.html</span><br><span class="line"># 对该url进行拆分，对以下四个参数进行配置，一般只修改language</span><br><span class="line">language = &apos;python3&apos;</span><br><span class="line">list_tag = &apos;_top&apos;</span><br><span class="line">content_tag = &apos;content&apos;</span><br><span class="line">path_wkthmltopdf = r&apos;C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe&apos;</span><br><span class="line"># 以下参数不用配置</span><br><span class="line">child_url = &apos;/&apos; + language</span><br><span class="line">url_tag = child_url + &apos;/&apos;</span><br><span class="line">output_name = u&quot;runoob_&quot; + language + r&quot;教程.pdf&quot;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;get_url_title_list方法：获取python的章节url<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">def get_url_title_list():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    获取所有URL和Title目录列表</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    root = root_url</span><br><span class="line">    temp_child_url = child_url</span><br><span class="line">    resp = requests.get(root + temp_child_url)</span><br><span class="line">    resp.encoding = &apos;utf-8&apos;</span><br><span class="line">    soup = BeautifulSoup(resp.text, &quot;html.parser&quot;)</span><br><span class="line">    x = soup.find(&quot;div&quot;, class_=&quot;design&quot;)</span><br><span class="line">    x = x.find_all(&quot;a&quot;, target=list_tag)</span><br><span class="line">    title = []</span><br><span class="line">    url_path = []</span><br><span class="line">    for i in x:</span><br><span class="line">        value = i.string.strip()</span><br><span class="line">        title.append(value)</span><br><span class="line">        temp_href = i.get(&apos;href&apos;).strip()</span><br><span class="line">        if temp_href.find(url_tag) &gt;= 0:</span><br><span class="line">            href = root + temp_href</span><br><span class="line">        else:</span><br><span class="line">            href = root + temp_child_url + &apos;/&apos; + temp_href</span><br><span class="line">        url_path.append(href)</span><br><span class="line">    return title, url_path</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;parse_url_to_html方法：将爬取的目标网页存储为html文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">def parse_url_to_html(url, name):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    解析URL，返回HTML内容</span><br><span class="line">    :param url:解析的url</span><br><span class="line">    :param name: 保存的html文件名</span><br><span class="line">    :return: html</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        soup = BeautifulSoup(response.content, &apos;html.parser&apos;)</span><br><span class="line">        # 正文</span><br><span class="line">        body = soup.find(id=content_tag)</span><br><span class="line">        # 标题</span><br><span class="line">        title = body.find(&apos;h1&apos;)</span><br><span class="line">        if title is None:</span><br><span class="line">            title = body.find_all(&apos;h2&apos;)[0]</span><br><span class="line">            title_tag = soup.new_tag(&apos;h1&apos;)</span><br><span class="line">            title_tag.string = title.string</span><br><span class="line">            title = title_tag</span><br><span class="line">        # 标题加入到正文的最前面，居中显示</span><br><span class="line">        center_tag = soup.new_tag(&quot;center&quot;)</span><br><span class="line">        center_tag.insert(1, title)</span><br><span class="line">        body.insert(1, center_tag)</span><br><span class="line">        html = str(body)</span><br><span class="line">        # body中的img标签的src相对路径的改成绝对路径</span><br><span class="line">        pattern = &quot;(&lt;img .*?src=\&quot;)(.*?)(\&quot;)&quot;</span><br><span class="line">        def func(m):</span><br><span class="line">            if not m.group(3).startswith(&quot;http&quot;):</span><br><span class="line">                if m.group(2).find(&apos;https&apos;) &gt;= 0:</span><br><span class="line">                    return m.group(1) + m.group(2) + m.group(3)</span><br><span class="line">                if m.group(2).find(&apos;runoob.com&apos;) &gt;= 0:</span><br><span class="line">                    rtn = m.group(1) + &quot;http:&quot; + m.group(2) + m.group(3)</span><br><span class="line">                    print(rtn)</span><br><span class="line">                else:</span><br><span class="line">                    rtn = m.group(1) + root_url + m.group(2) + m.group(3)</span><br><span class="line">                    print(rtn)</span><br><span class="line">                return rtn</span><br><span class="line">            else:</span><br><span class="line">                return m.group(1) + m.group(2) + m.group(3)</span><br><span class="line">        html = re.compile(pattern).sub(func, html)</span><br><span class="line">        html = html_template.format(content=html)</span><br><span class="line">        html = html.encode(&quot;utf-8&quot;)</span><br><span class="line">        with open(name, &apos;wb&apos;) as f:</span><br><span class="line">            f.write(html)</span><br><span class="line">        return name</span><br><span class="line">    except Exception as e:</span><br><span class="line">        logging.error(&quot;解析错误&quot;, exc_info=True)</span><br></pre></td></tr></table></figure><div align="center"> <img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/gen-html.png" alt="parse_url_to_html"> </div><p>&emsp;&emsp;save_pdf方法：将html文件转为pdf文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">def save_pdf(htmls, file_name):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    把所有html文件保存到pdf文件</span><br><span class="line">    :param htmls:  html文件列表</span><br><span class="line">    :param file_name: pdf文件名</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    config = pdfkit.configuration(wkhtmltopdf=path_wkthmltopdf)</span><br><span class="line">    options = &#123;</span><br><span class="line">        &apos;page-size&apos;: &apos;Letter&apos;,</span><br><span class="line">        &apos;margin-top&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;margin-right&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;margin-bottom&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;margin-left&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;encoding&apos;: &quot;UTF-8&quot;,</span><br><span class="line">        &apos;custom-header&apos;: [</span><br><span class="line">            (&apos;Accept-Encoding&apos;, &apos;gzip&apos;)</span><br><span class="line">        ],</span><br><span class="line">        &apos;cookie&apos;: [</span><br><span class="line">            (&apos;cookie-name1&apos;, &apos;cookie-value1&apos;),</span><br><span class="line">            (&apos;cookie-name2&apos;, &apos;cookie-value2&apos;),</span><br><span class="line">        ],</span><br><span class="line">        &apos;outline-depth&apos;: 10,</span><br><span class="line">    &#125;</span><br><span class="line">    pdfkit.from_file(htmls, file_name, options=options, configuration=config)</span><br></pre></td></tr></table></figure></p><div align="center"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/gen-pdf.png" alt="save_pdf"></div><p>&emsp;&emsp;append_pdf方法：拼接pdf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def append_pdf(input1, output1, bookmark):</span><br><span class="line">    bookmark_num = output1.getNumPages()</span><br><span class="line">    print(bookmark_num)</span><br><span class="line">    for page_num in range(input1.numPages):</span><br><span class="line">        output1.addPage(input1.getPage(page_num))</span><br><span class="line"></span><br><span class="line">    output1.addBookmark(bookmark, bookmark_num)</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;在上述方法执行完成后，执行以下代码，将拼接的pdf输出到本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">output.write(open(output_name, &quot;wb&quot;))</span><br></pre></td></tr></table></figure></p><div align="center"><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/gen-total-pdf.png" alt="append_pdf"></div><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"># -*-coding:utf-8-*-</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line">import sys</span><br><span class="line">import logging</span><br><span class="line">import pdfkit</span><br><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from PyPDF2 import PdfFileWriter, PdfFileReader</span><br><span class="line">html_template = &quot;&quot;&quot; </span><br><span class="line">&lt;!DOCTYPE html&gt; </span><br><span class="line">&lt;html lang=&quot;en&quot;&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&#123;content&#125; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt; </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">root_url = &quot;http://www.runoob.com&quot;</span><br><span class="line"># 针对Runoob.com的爬虫示例</span><br><span class="line"># 列入要对该网站的python3进行爬虫,点开 python3，网址默认为：http://www.runoob.com/python3/python3-tutorial.html</span><br><span class="line"># 对该url进行拆分，对以下四个参数进行配置，一般只修改language</span><br><span class="line">language = &apos;python3&apos;                                                      # 要爬虫的分类------针对不同的内容进行修改</span><br><span class="line">list_tag = &apos;_top&apos;                                                         # 对左侧列表的class检索------一般不需要修改</span><br><span class="line">content_tag = &apos;content&apos;                                                   # 对正文的id检索------一般不需要修改</span><br><span class="line">path_wkthmltopdf = r&apos;C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe&apos;    # 本地 wkhtmltopdf 的配置------根据自己电脑情况配置</span><br><span class="line"># 以下参数不用配置</span><br><span class="line">child_url = &apos;/&apos; + language                                                # 定义子url</span><br><span class="line">url_tag = child_url + &apos;/&apos;                                                 # url_tag是对左侧列表中的url出现特殊情况下的判断</span><br><span class="line">output_name = u&quot;runoob_&quot; + language + r&quot;教程.pdf&quot;                          # 爬虫的文件名</span><br><span class="line">def parse_url_to_html(url, name):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    解析URL，返回HTML内容</span><br><span class="line">    :param url:解析的url</span><br><span class="line">    :param name: 保存的html文件名</span><br><span class="line">    :return: html</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        soup = BeautifulSoup(response.content, &apos;html.parser&apos;)</span><br><span class="line">        # 正文</span><br><span class="line">        body = soup.find(id=content_tag)</span><br><span class="line">        # 标题</span><br><span class="line">        title = body.find(&apos;h1&apos;)</span><br><span class="line">        if title is None:</span><br><span class="line">            title = body.find_all(&apos;h2&apos;)[0]</span><br><span class="line">            title_tag = soup.new_tag(&apos;h1&apos;)</span><br><span class="line">            title_tag.string = title.string</span><br><span class="line">            title = title_tag</span><br><span class="line">        # 标题加入到正文的最前面，居中显示</span><br><span class="line">        center_tag = soup.new_tag(&quot;center&quot;)</span><br><span class="line">        center_tag.insert(1, title)</span><br><span class="line">        body.insert(1, center_tag)</span><br><span class="line">        html = str(body)</span><br><span class="line">        # body中的img标签的src相对路径的改成绝对路径</span><br><span class="line">        pattern = &quot;(&lt;img .*?src=\&quot;)(.*?)(\&quot;)&quot;</span><br><span class="line">        def func(m):</span><br><span class="line">            if not m.group(3).startswith(&quot;http&quot;):</span><br><span class="line">                if m.group(2).find(&apos;https&apos;) &gt;= 0:</span><br><span class="line">                    return m.group(1) + m.group(2) + m.group(3)</span><br><span class="line">                if m.group(2).find(&apos;runoob.com&apos;) &gt;= 0:</span><br><span class="line">                    rtn = m.group(1) + &quot;http:&quot; + m.group(2) + m.group(3)</span><br><span class="line">                    print(rtn)</span><br><span class="line">                else:</span><br><span class="line">                    rtn = m.group(1) + root_url + m.group(2) + m.group(3)</span><br><span class="line">                    print(rtn)</span><br><span class="line">                return rtn</span><br><span class="line">            else:</span><br><span class="line">                return m.group(1) + m.group(2) + m.group(3)</span><br><span class="line">        html = re.compile(pattern).sub(func, html)</span><br><span class="line">        html = html_template.format(content=html)</span><br><span class="line">        html = html.encode(&quot;utf-8&quot;)</span><br><span class="line">        with open(name, &apos;wb&apos;) as f:</span><br><span class="line">            f.write(html)</span><br><span class="line">        return name</span><br><span class="line">    except Exception as e:</span><br><span class="line">        logging.error(&quot;解析错误&quot;, exc_info=True)</span><br><span class="line"># 要去除所有的div标签</span><br><span class="line"># 移除div（如果要移除a标签，把div换成a即可）</span><br><span class="line"># remove_tag(html, &quot;div&quot;)</span><br><span class="line">def remove_tag(text, tag):</span><br><span class="line">    return text[:text.find(&quot;&lt;&quot; + tag + &quot;&gt;&quot;)] + text[text.find(&quot;&lt;/&quot; + tag + &quot;&gt;&quot;) + len(tag) + 3:]</span><br><span class="line">def get_url_title_list():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    获取所有URL和Title目录列表</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    root = root_url</span><br><span class="line">    temp_child_url = child_url</span><br><span class="line">    resp = requests.get(root + temp_child_url)</span><br><span class="line">    resp.encoding = &apos;utf-8&apos;</span><br><span class="line">    soup = BeautifulSoup(resp.text, &quot;html.parser&quot;)</span><br><span class="line">    x = soup.find(&quot;div&quot;, class_=&quot;design&quot;)</span><br><span class="line">    x = x.find_all(&quot;a&quot;, target=list_tag)</span><br><span class="line">    title = []</span><br><span class="line">    url_path = []</span><br><span class="line">    for i in x:</span><br><span class="line">        value = i.string.strip()</span><br><span class="line">        title.append(value)</span><br><span class="line">        temp_href = i.get(&apos;href&apos;).strip()</span><br><span class="line">        if temp_href.find(url_tag) &gt;= 0:</span><br><span class="line">            href = root + temp_href</span><br><span class="line">        else:</span><br><span class="line">            href = root + temp_child_url + &apos;/&apos; + temp_href</span><br><span class="line">        url_path.append(href)</span><br><span class="line">    return title, url_path</span><br><span class="line">def save_pdf(htmls, file_name):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    把所有html文件保存到pdf文件</span><br><span class="line">    :param htmls:  html文件列表</span><br><span class="line">    :param file_name: pdf文件名</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    config = pdfkit.configuration(wkhtmltopdf=path_wkthmltopdf)</span><br><span class="line">    options = &#123;</span><br><span class="line">        &apos;page-size&apos;: &apos;Letter&apos;,</span><br><span class="line">        &apos;margin-top&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;margin-right&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;margin-bottom&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;margin-left&apos;: &apos;0.75in&apos;,</span><br><span class="line">        &apos;encoding&apos;: &quot;UTF-8&quot;,</span><br><span class="line">        &apos;custom-header&apos;: [</span><br><span class="line">            (&apos;Accept-Encoding&apos;, &apos;gzip&apos;)</span><br><span class="line">        ],</span><br><span class="line">        &apos;cookie&apos;: [</span><br><span class="line">            (&apos;cookie-name1&apos;, &apos;cookie-value1&apos;),</span><br><span class="line">            (&apos;cookie-name2&apos;, &apos;cookie-value2&apos;),</span><br><span class="line">        ],</span><br><span class="line">        &apos;outline-depth&apos;: 10,</span><br><span class="line">    &#125;</span><br><span class="line">    pdfkit.from_file(htmls, file_name, options=options, configuration=config)</span><br><span class="line">def append_pdf(input1, output1, bookmark):</span><br><span class="line">    bookmark_num = output1.getNumPages()</span><br><span class="line">    print(bookmark_num)</span><br><span class="line">    for page_num in range(input1.numPages):</span><br><span class="line">        output1.addPage(input1.getPage(page_num))</span><br><span class="line">    output1.addBookmark(bookmark, bookmark_num)</span><br><span class="line">def main():</span><br><span class="line">    output = PdfFileWriter()</span><br><span class="line">    start = time.time()</span><br><span class="line">    file_name = u&quot;temp_&quot;</span><br><span class="line">    result = get_url_title_list()</span><br><span class="line">    titles = result[0]</span><br><span class="line">    urls = result[1]</span><br><span class="line">    print(titles)</span><br><span class="line">    print(urls)</span><br><span class="line">    for index, url in enumerate(urls):</span><br><span class="line">        parse_url_to_html(url, str(index) + &quot;.html&quot;)</span><br><span class="line">    htmls = []</span><br><span class="line">    pdfs = []</span><br><span class="line">    for i in range(0, len(urls)):</span><br><span class="line">        htmls.append(str(i) + &apos;.html&apos;)</span><br><span class="line">        pdfs.append(file_name + str(i) + &apos;.pdf&apos;)</span><br><span class="line">        save_pdf(str(i) + &apos;.html&apos;, file_name + str(i) + &apos;.pdf&apos;)</span><br><span class="line">        print(u&quot;转换完成第&quot; + str(i) + &apos;个html&apos;)</span><br><span class="line">    i = 0</span><br><span class="line">    for pdf in pdfs:</span><br><span class="line">        fd = open(pdf, &apos;rb&apos;)</span><br><span class="line">        append_pdf(PdfFileReader(fd), output, titles[i])</span><br><span class="line">        i = i + 1</span><br><span class="line">        print(u&quot;合并完成第&quot; + str(i) + &apos;个pdf&apos; + pdf)</span><br><span class="line">    output.write(open(output_name, &quot;wb&quot;))</span><br><span class="line">    print(u&quot;输出PDF成功！&quot;)</span><br><span class="line">    for html in htmls:</span><br><span class="line">        os.remove(html)</span><br><span class="line">        print(u&quot;删除临时文件&quot; + html)</span><br><span class="line">    for pdf in pdfs:</span><br><span class="line">        os.remove(pdf)</span><br><span class="line">        print(u&quot;删除临时文件&quot; + pdf)</span><br><span class="line">    total_time = time.time() - start</span><br><span class="line">    print(u&quot;总共耗时：%f 秒&quot; % total_time)</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    try:</span><br><span class="line">        main()</span><br><span class="line">    except OSError as err:</span><br><span class="line">        print(&quot;OS error: &#123;0&#125;&quot;.format(err))</span><br><span class="line">    except ValueError:</span><br><span class="line">        print(&quot;Could not convert data to an integer.&quot;)</span><br><span class="line">    finally:</span><br><span class="line">        print(&quot;Unexpected error:&quot;, sys.exc_info()[0])</span><br></pre></td></tr></table></figure><h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;在删除中间生成的pdf时，报了一个错误(<code>OS error: [WinError 32]另一个程序正在使用此文件，进程无法访问。:&#39;temp_0.pdf&#39;</code>)，提示文件正在使用中，删除pdf文件失败。由于正在学习python，在多次尝试解决该问题，都以失败告终，等技能提升之后再进行修复~<br>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;锋利的BeautifulSoup：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;BeautifulSoup是Python爬虫里面使用较为广泛的库，其主要功能是从网页中抓取数据，可以使用较少的代码实现完整的数据爬取工作。&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Python3" scheme="https://ibrucekong.github.io/tags/Python3/"/>
    
      <category term="BeautifulSoup" scheme="https://ibrucekong.github.io/tags/BeautifulSoup/"/>
    
      <category term="Pdfkit" scheme="https://ibrucekong.github.io/tags/Pdfkit/"/>
    
      <category term="爬虫" scheme="https://ibrucekong.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python3入门学习—02条件循环语句</title>
    <link href="https://ibrucekong.github.io/posts/1533523788/"/>
    <id>https://ibrucekong.github.io/posts/1533523788/</id>
    <published>2017-10-21T09:24:03.000Z</published>
    <updated>2017-10-21T09:24:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>人生苦短，我用Python：</strong></p><p>写程序少不了的就是条件、循环语句，在程序运行中担任了重要作用。这些语句在Python中去除了大括号的包裹，完全按照缩进来控制语句的逻辑运行，如果从侧面来看，这样的代码看着清爽不少~</p><a id="more"></a><h2 id="If条件语句"><a href="#If条件语句" class="headerlink" title="If条件语句"></a>If条件语句</h2><p><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a>程序语言指定任何非0和非空（null）值为true，0 或者 null为false。如果接口定义好返回值后，在判断时可以直接使用如下形式（用flag作为判断条件）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if flag:</span><br><span class="line">    execute statement</span><br></pre></td></tr></table></figure></p><p>同样的，python的基本条件语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if flag:</span><br><span class="line">    execute statement</span><br><span class="line">else:</span><br><span class="line">    execute statement</span><br></pre></td></tr></table></figure></p><p>多重判断情况下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if flag0:</span><br><span class="line">    execute statement0</span><br><span class="line">else if flag1:</span><br><span class="line">    execute statement1</span><br><span class="line">else if flag2:</span><br><span class="line">    execute statement2</span><br><span class="line">else:</span><br><span class="line">    execute statement3</span><br></pre></td></tr></table></figure></p><p>多重判断的代码看着是不是也很清爽，还有更清爽的<br>在同一行写if语句：<code>if ( flag ) : print &quot;Holle World&quot;</code></p><h2 id="While循环语句"><a href="#While循环语句" class="headerlink" title="While循环语句"></a>While循环语句</h2><p>对于while循环语句我们之前学的是，该语句体可能一次都不进入；然后这个循环主要重复做一些相同工作的任务。其基本形式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">while flag:</span><br><span class="line">    execute statement</span><br></pre></td></tr></table></figure></p><blockquote><p>引用<a href="http://www.runoob.com" target="_blank" rel="noopener">菜鸟教程</a>上的例子</p></blockquote><div style="text-align: center"><br><img src="https://coding.net/u/ibrucekong/p/images/git/raw/master/loop-over-python-list-animation.gif" alt="while 动画"><br></div><p><strong>再次强调，在python中去除了大括号的包裹，<code>:</code>变得很重要，千万不要遗漏</strong></p><blockquote><p>while 语句时还有另外两个重要的命令 continue，break 来跳过循环。其中continue 用于跳过该次循环，break 则是用于退出循环，此外”判断条件”还可以是个常值，表示循环必定成立。下面来看几个例子：</p></blockquote><p>打印出10及以内的所有偶数<br>continue和break示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">i = 1</span><br><span class="line">while i&lt;10:</span><br><span class="line">    i+=1</span><br><span class="line">    if i%2&gt;0:</span><br><span class="line">        continue</span><br><span class="line">    print(i)</span><br><span class="line">    </span><br><span class="line"># 控制台中则打出：2 4 6 8 10</span><br></pre></td></tr></table></figure></p><p>常值作为判断条件，语句必定执行，至于语句是否能退出，取决于execute statement是否会跳出循环<br>如果一直循环下去，那么该语句就会成为“无限循环体”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">while 1:</span><br><span class="line">    execute statement</span><br></pre></td></tr></table></figure></p><p>该条件永远为true，循环将无限执行下去；<br>对于控制台程序，若想要退出该程序可以按Ctrl+C<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var = 1</span><br><span class="line">while var == 1 :  </span><br><span class="line">   name = input(&quot;请输入你的名字 :&quot;)</span><br><span class="line">   print(&quot;你的名字是: &quot;, name)</span><br><span class="line"> </span><br><span class="line">print &quot;再见!&quot;</span><br></pre></td></tr></table></figure></p><p>Python使用<code>while ...else</code>语句，需要注意的是else 中的语句会在循环正常执行完（即 while 不是通过 break 跳出而中断的）的情况下执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">count = 1</span><br><span class="line">while count &lt; 6:</span><br><span class="line">   print(count, &quot;小于6&quot;)</span><br><span class="line">   count = count + 1</span><br><span class="line">else:</span><br><span class="line">   print(count, &quot;大于6&quot;)</span><br><span class="line">   </span><br><span class="line">控制台中会输出（6之后不再循环了）：</span><br><span class="line">1小于6</span><br><span class="line">2小于6</span><br><span class="line">3小于6</span><br><span class="line">4小于6</span><br><span class="line">5小于6</span><br><span class="line">6大于6</span><br></pre></td></tr></table></figure></p><p>最后就是简单while语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while flag: execute statement</span><br></pre></td></tr></table></figure></p><h2 id="For循环语句"><a href="#For循环语句" class="headerlink" title="For循环语句"></a>For循环语句</h2><p>从上面的while语句就可以看出，一般循环体内部都会有一个if判断语句，用来控制更加具体的逻辑操作。同样的，for循环语句内部一般也会嵌套if语句，用来控制更加复杂的流程。<br>Python中用的最多的就是<code>for in</code>，可以表示为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">group = [&apos;P&apos;, &apos;y&apos;, &apos;t&apos;, &apos;h&apos;, &apos;o&apos;, &apos;n&apos;]</span><br><span class="line">for sub in group:</span><br><span class="line">    print(sub)</span><br><span class="line"></span><br><span class="line">控制台中会输出:</span><br><span class="line">P</span><br><span class="line">y</span><br><span class="line">t</span><br><span class="line">h</span><br><span class="line">o</span><br><span class="line">n</span><br></pre></td></tr></table></figure></p><p>其实在Python的for循环中，字符串可以当做数组进行循环，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for sub in &quot;Python&quot;:</span><br><span class="line">    print(sub)</span><br><span class="line"></span><br><span class="line">控制台中会输出:</span><br><span class="line">P</span><br><span class="line">y</span><br><span class="line">t</span><br><span class="line">h</span><br><span class="line">o</span><br><span class="line">n</span><br></pre></td></tr></table></figure></p><p>另外for循环还可以通过索引值进行遍历数组：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">group = [&apos;P&apos;, &apos;y&apos;, &apos;t&apos;, &apos;h&apos;, &apos;o&apos;, &apos;n&apos;]</span><br><span class="line">for index in range(len(group)):</span><br><span class="line">    print(group[index])</span><br><span class="line"></span><br><span class="line">控制台中同样会输出:</span><br><span class="line">P</span><br><span class="line">y</span><br><span class="line">t</span><br><span class="line">h</span><br><span class="line">o</span><br><span class="line">n</span><br></pre></td></tr></table></figure></p><p>和<code>while … else</code>一样，<code>for … else</code> 语句中的else 语句也是在循环正常执行完的情况下执行，这里不再赘述。</p><p>同样的，Python中也存在着嵌套循环的情况，即一个循环体中嵌套另一个循环。for、while、if可以互相嵌套，用来完成相关逻辑操作。</p><p>这里再强调几个用的比较多的关键词：<code>break、continue、pass</code><br>break和continue在前面已经提到过，这里再多说一句，break、continue语句用在while和for循环中，其中break语句将停止执行最深层的循环，并开始执行下一行代码；continue语句是跳过当前循环的剩余语句，然后继续进行下一轮循环。<br>pass语句是一个空语句，是为了保持程序结构的完整性，一般是做占位语句，引用菜鸟教程的示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">for sub in &quot;Python&quot;:</span><br><span class="line">   if sub == &quot;y&quot;:</span><br><span class="line">      pass</span><br><span class="line">      print(&quot;占位符&quot;)</span><br><span class="line">   print(letter)</span><br><span class="line"></span><br><span class="line">控制台中会输出:</span><br><span class="line">P</span><br><span class="line">占位符</span><br><span class="line">t</span><br><span class="line">h</span><br><span class="line">o</span><br><span class="line">n</span><br></pre></td></tr></table></figure></p><p>如果有不明白的，欢迎留言或者给我 <a href="mailto:kongbin0325@hotmail.com" target="_blank" rel="noopener">发邮件[Send Email]</a></p><div style="text-align: center;padding: 0; margin: 0;"><br>    <img class="wechat-qrcode" src="https://coding.net/u/ibrucekong/p/images/git/raw/master/wechat-blog.png" alt="关注公众号"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;人生苦短，我用Python：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;写程序少不了的就是条件、循环语句，在程序运行中担任了重要作用。这些语句在Python中去除了大括号的包裹，完全按照缩进来控制语句的逻辑运行，如果从侧面来看，这样的代码看着清爽不少~&lt;/p&gt;
    
    </summary>
    
      <category term="languages" scheme="https://ibrucekong.github.io/categories/languages/"/>
    
    
      <category term="Python3" scheme="https://ibrucekong.github.io/tags/Python3/"/>
    
  </entry>
  
</feed>
